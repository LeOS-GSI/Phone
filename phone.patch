diff --git a/app/build.gradle b/app/build.gradle
index 0ab764f..4f4688b 100755
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -1,7 +1,6 @@
 apply plugin: 'com.android.application'
 apply plugin: 'kotlin-android'
 apply plugin: 'kotlin-android-extensions'
-apply plugin: 'kotlin-kapt'
 
 def keystorePropertiesFile = rootProject.file("keystore.properties")
 def keystoreProperties = new Properties()
@@ -13,13 +12,12 @@ android {
     compileSdkVersion 33
 
     defaultConfig {
-        applicationId "com.goodwy.dialer"
-        minSdkVersion 23
+        applicationId "com.leos.dialer"
+        minSdkVersion 26
         targetSdkVersion 33
-        versionCode 420
-        versionName "4.2.0"
-        setProperty("archivesBaseName", "dialer")
-        buildConfigField("String", "GOOGLE_PLAY_LICENSING_KEY", "\"${getProperty(getProperties('local.properties'), 'GOOGLE_PLAY_LICENSE_KEY')}\"")
+        versionCode 001
+        versionName "9.11"
+       buildConfigField("String", "GOOGLE_PLAY_LICENSING_KEY", "\"${getProperty(getProperties('local.properties'), 'GOOGLE_PLAY_LICENSE_KEY')}\"")
         buildConfigField("String", "PRODUCT_ID_X1", "\"${getProperty(getProperties('local.properties'), 'PRODUCT_ID_X1')}\"")
         buildConfigField("String", "PRODUCT_ID_X2", "\"${getProperty(getProperties('local.properties'), 'PRODUCT_ID_X2')}\"")
         buildConfigField("String", "PRODUCT_ID_X3", "\"${getProperty(getProperties('local.properties'), 'PRODUCT_ID_X3')}\"")
@@ -38,7 +36,7 @@ android {
 
     buildTypes {
         debug {
-            applicationIdSuffix ".debug"
+            applicationIdSuffix ""
         }
         release {
             minifyEnabled true
@@ -90,9 +88,8 @@ dependencies {
     implementation 'com.anjlab.android.iab.v3:library:2.0.3'
     implementation 'com.github.Liverm0r:BehavioRule:1.0.1'
 
-    //api "com.github.goodwy:RecyclerView-FastScroller:cd067e83e4"
-    //api "com.github.tibbi:RecyclerView-FastScroller:5a95285b1f"
-    api 'com.google.android.material:material:1.8.0'
+    api "com.github.tibbi:RecyclerView-FastScroller:5a95285b1f"
+    api 'com.google.android.material:material:1.8.0-alpha01'
     api 'com.google.code.gson:gson:2.9.1'
     api 'com.duolingo.open:rtl-viewpager:2.0.0'
 
@@ -100,14 +97,6 @@ dependencies {
     annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'
     implementation "androidx.core:core-ktx:1.8.0"
     implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
-
-    implementation 'androidx.room:room-runtime:2.5.0'
-    kapt 'androidx.room:room-compiler:2.5.0'
-    implementation 'joda-time:joda-time:2.10.13'
-
-    //timer
-    implementation 'org.greenrobot:eventbus:3.3.1'
-    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
 }
 repositories {
     mavenCentral()
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
index e6c5986..e69de29 100755
--- a/app/proguard-rules.pro
+++ b/app/proguard-rules.pro
@@ -1,6 +0,0 @@
-# EventBus
--keepattributes *Annotation*
--keepclassmembers class ** {
-    @org.greenrobot.eventbus.Subscribe <methods>;
-}
--keep enum org.greenrobot.eventbus.ThreadMode { *; }
diff --git a/app/src/debug/res/values/strings.xml b/app/src/debug/res/values/strings.xml
index 7009037..c8f19a5 100755
--- a/app/src/debug/res/values/strings.xml
+++ b/app/src/debug/res/values/strings.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_launcher_name">Dialer_debug</string>
+    <string name="app_launcher_name">LeOS-Phone</string>
 </resources>
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index faf3fa1..a2a9179 100755
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
-    package="com.goodwy.dialer"
+    package="com.leos.dialer"
     android:installLocation="auto">
 
     <uses-permission android:name="android.permission.READ_CONTACTS" />
@@ -9,7 +9,6 @@
     <uses-permission android:name="android.permission.WRITE_CONTACTS" />
     <uses-permission android:name="android.permission.READ_PHONE_STATE" />
     <uses-permission android:name="android.permission.CALL_PHONE" />
-    <uses-permission android:name="android.permission.CALL_PRIVILEGED" />
     <uses-permission android:name="android.permission.READ_CALL_LOG" />
     <uses-permission android:name="android.permission.WRITE_CALL_LOG" />
     <uses-permission android:name="android.permission.WAKE_LOCK" />
@@ -22,10 +21,8 @@
     <uses-permission android:name="android.telecom.action.CONFIGURE_PHONE_ACCOUNT" />
     <uses-permission android:name="android.permission.VIBRATE" />
     <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
-    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
     <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT" />
     <uses-permission android:name="com.android.vending.BILLING" />
-    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />
 
     <uses-permission
         android:name="android.permission.WRITE_EXTERNAL_STORAGE"
@@ -36,14 +33,14 @@
         tools:node="remove" />
 
     <queries>
-        <package android:name="com.goodwy.dialer.debug" />
-        <package android:name="com.goodwy.dialer" />
-        <package android:name="com.goodwy.contacts.debug" />
-        <package android:name="com.goodwy.contacts" />
-        <package android:name="com.goodwy.smsmessenger.debug" />
-        <package android:name="com.goodwy.smsmessenger" />
-        <package android:name="com.goodwy.voicerecorder.debug" />
-        <package android:name="com.goodwy.voicerecorder" />
+        <package android:name="com.leos.phone" />
+        <package android:name="com.leos.phone" />
+        <package android:name="com.leos.contacts.debug" />
+        <package android:name="com.leos.contacts" />
+        <package android:name="com.leos.smsmessenger.debug" />
+        <package android:name="com.leos.smsmessenger" />
+        <package android:name="com.leos.voicerecorder.debug" />
+        <package android:name="com.leos.voicerecorder" />
     </queries>
 
     <application
@@ -51,21 +48,19 @@
         android:allowBackup="true"
         android:appCategory="productivity"
         android:icon="@mipmap/ic_launcher"
-        android:label="@string/app_launcher_name"
+        android:label="LeOS-Phone"
         android:roundIcon="@mipmap/ic_launcher"
         android:theme="@style/AppTheme">
 
         <activity
             android:name=".activities.SplashActivity"
             android:exported="false"
-            android:screenOrientation="nosensor"
             android:theme="@style/SplashTheme" />
 
         <activity
             android:name=".activities.MainActivity"
             android:configChanges="orientation|screenSize"
             android:exported="true"
-            android:screenOrientation="nosensor"
             tools:ignore="AppLinkUrlError">
 
             <intent-filter>
@@ -76,59 +71,39 @@
         </activity>
 
         <activity
-            android:name="com.goodwy.commons.activities.PurchaseActivity"
-            android:configChanges="orientation"
-            android:exported="false"
-            android:label=""
-            android:screenOrientation="nosensor"
-            android:parentActivityName=".activities.MainActivity" />
-
-        <activity
-            android:name="com.goodwy.commons.activities.AboutActivity"
-            android:configChanges="orientation"
+            android:name="com.leos.commons.activities.AboutActivity"
             android:exported="false"
             android:label="@string/about"
-            android:screenOrientation="nosensor"
             android:parentActivityName=".activities.MainActivity" />
 
         <activity
-            android:name="com.goodwy.commons.activities.CustomizationActivity"
-            android:configChanges="orientation"
+            android:name="com.leos.commons.activities.CustomizationActivity"
             android:exported="false"
             android:label="@string/customize_colors"
-            android:screenOrientation="nosensor"
             android:parentActivityName=".activities.SettingsActivity" />
 
         <activity
-            android:name="com.goodwy.commons.activities.ManageBlockedNumbersActivity"
-            android:configChanges="orientation"
+            android:name="com.leos.commons.activities.ManageBlockedNumbersActivity"
             android:exported="false"
             android:label="@string/blocked_numbers"
-            android:screenOrientation="nosensor"
             android:parentActivityName=".activities.SettingsActivity" />
 
         <activity
             android:name=".activities.ManageSpeedDialActivity"
-            android:configChanges="orientation"
             android:exported="false"
             android:label="@string/speed_dial"
-            android:screenOrientation="nosensor"
             android:parentActivityName=".activities.SettingsActivity" />
 
         <activity
             android:name=".activities.ConferenceActivity"
-            android:configChanges="orientation"
             android:exported="false"
             android:label="@string/conference"
-            android:screenOrientation="nosensor"
             android:parentActivityName=".activities.CallActivity" />
 
         <activity
             android:name=".activities.SettingsActivity"
-            android:configChanges="orientation"
             android:exported="true"
             android:label="@string/settings"
-            android:screenOrientation="nosensor"
             android:parentActivityName=".activities.MainActivity">
 
             <intent-filter>
@@ -141,26 +116,23 @@
             android:name=".activities.CallActivity"
             android:excludeFromRecents="true"
             android:exported="false"
-            android:noHistory="true"
             android:label="@string/ongoing_call"
-            android:launchMode="singleInstance"
-            android:screenOrientation="nosensor"
+            android:launchMode="singleTask"
+            android:screenOrientation="portrait"
             android:showOnLockScreen="true" />
 
         <activity
             android:name=".activities.CallHistoryActivity"
             android:exported="false"
             android:label="@string/recents"
-            android:screenOrientation="nosensor"
+            android:screenOrientation="portrait"
             android:parentActivityName=".activities.MainActivity">
         </activity>
 
         <activity
             android:name=".activities.DialpadActivity"
-            android:configChanges="orientation"
             android:exported="true"
             android:label=""
-            android:screenOrientation="nosensor"
             android:parentActivityName=".activities.MainActivity"
             android:windowSoftInputMode="stateHidden">
             <!--android:label="@string/dialpad"-->
@@ -192,7 +164,7 @@
         <activity
             android:name=".activities.DialerActivity"
             android:exported="true"
-            android:label="@string/dialer"
+            android:label="LeOS-Phone"
             android:theme="@style/Theme.Transparent">
 
             <intent-filter>
@@ -226,17 +198,13 @@
             </intent-filter>
         </service>
 
-        <service android:name=".services.TimerService" />
-
-        <receiver android:name=".receivers.HideTimerReceiver" />
-
         <receiver
             android:name=".receivers.CallActionReceiver"
             android:enabled="true"
             android:exported="true">
             <intent-filter>
-                <action android:name="com.goodwy.dialer.action.ACCEPT_CALL" />
-                <action android:name="com.goodwy.dialer.action.DECLINE_CALL" />
+                <action android:name="com.leos.dialer.action.ACCEPT_CALL" />
+                <action android:name="com.leos.dialer.action.DECLINE_CALL" />
             </intent-filter>
         </receiver>
 
diff --git a/app/src/main/kotlin/com/goodwy/dialer/App.kt b/app/src/main/kotlin/com/goodwy/dialer/App.kt
deleted file mode 100755
index ba47822..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/App.kt
+++ /dev/null
@@ -1,162 +0,0 @@
-package com.goodwy.dialer
-
-import android.app.Application
-import android.app.NotificationManager
-import android.content.Context
-import android.os.CountDownTimer
-import android.os.Handler
-import android.os.Looper
-import androidx.lifecycle.Lifecycle
-import androidx.lifecycle.LifecycleObserver
-import androidx.lifecycle.OnLifecycleEvent
-import androidx.lifecycle.ProcessLifecycleOwner
-import com.anjlab.android.iab.v3.BillingProcessor
-import com.anjlab.android.iab.v3.PurchaseInfo
-import com.goodwy.commons.extensions.checkUseEnglish
-import com.goodwy.commons.extensions.showErrorToast
-import com.goodwy.commons.extensions.toast
-import com.goodwy.dialer.extensions.*
-import com.goodwy.dialer.models.TimerEvent
-import com.goodwy.dialer.models.TimerState
-import com.goodwy.dialer.services.TimerStopService
-import com.goodwy.dialer.services.startTimerService
-import org.greenrobot.eventbus.EventBus
-import org.greenrobot.eventbus.Subscribe
-import org.greenrobot.eventbus.ThreadMode
-
-class App : Application(), LifecycleObserver {
-
-    lateinit var billingProcessor: BillingProcessor
-
-    private var countDownTimers = mutableMapOf<Int, CountDownTimer>()
-
-    override fun onCreate() {
-        super.onCreate()
-        ProcessLifecycleOwner.get().lifecycle.addObserver(this)
-        EventBus.getDefault().register(this)
-        instance = this
-        checkUseEnglish()
-
-        // automatically restores purchases
-        billingProcessor = BillingProcessor(
-            this, BuildConfig.GOOGLE_PLAY_LICENSING_KEY,
-            object : BillingProcessor.IBillingHandler {
-                override fun onProductPurchased(productId: String, details: PurchaseInfo?) {}
-
-                override fun onPurchaseHistoryRestored() {
-                    toast(R.string.restored_previous_purchase_please_restart)
-                }
-
-                override fun onBillingError(errorCode: Int, error: Throwable?) {}
-
-                override fun onBillingInitialized() {}
-            })
-    }
-
-    override fun onTerminate() {
-        EventBus.getDefault().unregister(this)
-        super.onTerminate()
-        billingProcessor.release()
-    }
-
-    @OnLifecycleEvent(Lifecycle.Event.ON_STOP)
-    private fun onAppBackgrounded() {
-        timerHelper.getTimers { timers ->
-            if (timers.any { it.state is TimerState.Running }) {
-                startTimerService(this)
-            }
-        }
-    }
-
-    @OnLifecycleEvent(Lifecycle.Event.ON_START)
-    private fun onAppForegrounded() {
-        EventBus.getDefault().post(TimerStopService)
-        timerHelper.getTimers { timers ->
-            val runningTimers = timers.filter { it.state is TimerState.Running }
-            runningTimers.forEach { timer ->
-                if (countDownTimers[timer.id] == null) {
-                    EventBus.getDefault().post(TimerEvent.Start(timer.id!!, (timer.state as TimerState.Running).tick))
-                }
-            }
-        }
-//        if (Stopwatch.state == State.RUNNING) {
-//            EventBus.getDefault().post(StopwatchStopService)
-//        }
-    }
-
-    @Subscribe(threadMode = ThreadMode.MAIN)
-    fun onMessageEvent(event: TimerEvent.Reset) {
-        updateTimerState(event.timerId, TimerState.Idle)
-        countDownTimers[event.timerId]?.cancel()
-    }
-
-    @Subscribe(threadMode = ThreadMode.MAIN)
-    fun onMessageEvent(event: TimerEvent.Delete) {
-        countDownTimers[event.timerId]?.cancel()
-        timerHelper.deleteTimer(event.timerId) {
-            EventBus.getDefault().post(TimerEvent.Refresh)
-        }
-    }
-
-    @Subscribe(threadMode = ThreadMode.MAIN)
-    fun onMessageEvent(event: TimerEvent.Start) {
-        val countDownTimer = object : CountDownTimer(event.duration, 1000) {
-            override fun onTick(tick: Long) {
-                updateTimerState(event.timerId, TimerState.Running(event.duration, tick))
-            }
-
-            override fun onFinish() {
-                EventBus.getDefault().post(TimerEvent.Finish(event.timerId, event.duration))
-                EventBus.getDefault().post(TimerStopService)
-            }
-        }.start()
-        countDownTimers[event.timerId] = countDownTimer
-    }
-
-    @Subscribe(threadMode = ThreadMode.MAIN)
-    fun onMessageEvent(event: TimerEvent.Finish) {
-        timerHelper.getTimer(event.timerId) { timer ->
-            val pendingIntent = getOpenTimerTabIntent(event.timerId)
-            val notification = getTimerNotification(timer, pendingIntent, false)
-            val notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
-
-            try {
-                notificationManager.notify(event.timerId, notification)
-            } catch (e: Exception) {
-                showErrorToast(e)
-            }
-
-            updateTimerState(event.timerId, TimerState.Finished)
-            Handler(Looper.getMainLooper()).postDelayed({
-                hideNotification(event.timerId)
-            }, config.timerMaxReminderSecs * 1000L)
-        }
-    }
-
-    @Subscribe(threadMode = ThreadMode.MAIN)
-    fun onMessageEvent(event: TimerEvent.Pause) {
-        timerHelper.getTimer(event.timerId) { timer ->
-            updateTimerState(event.timerId, TimerState.Paused(event.duration, (timer.state as TimerState.Running).tick))
-            countDownTimers[event.timerId]?.cancel()
-        }
-    }
-
-    private fun updateTimerState(timerId: Int, state: TimerState) {
-        timerHelper.getTimer(timerId) { timer ->
-            val newTimer = timer.copy(state = state)
-            timerHelper.insertOrUpdateTimer(newTimer) {
-                EventBus.getDefault().post(TimerEvent.Refresh)
-            }
-        }
-    }
-
-    companion object {
-        private var instance: App? = null
-
-        fun isProVersion(): Boolean {
-            return instance!!.billingProcessor.isPurchased(BuildConfig.PRODUCT_ID_X1)
-                || instance!!.billingProcessor.isPurchased(BuildConfig.PRODUCT_ID_X2)
-                || instance!!.billingProcessor.isPurchased(BuildConfig.PRODUCT_ID_X3)
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/activities/CallActivity.kt b/app/src/main/kotlin/com/goodwy/dialer/activities/CallActivity.kt
deleted file mode 100755
index de27882..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/activities/CallActivity.kt
+++ /dev/null
@@ -1,1074 +0,0 @@
-package com.goodwy.dialer.activities
-
-import android.annotation.SuppressLint
-import android.app.KeyguardManager
-import android.app.WallpaperManager
-import android.content.Context
-import android.content.Intent
-import android.graphics.*
-import android.graphics.drawable.BitmapDrawable
-import android.graphics.drawable.Drawable
-import android.graphics.drawable.LayerDrawable
-import android.graphics.drawable.RippleDrawable
-import android.media.AudioManager
-import android.net.Uri
-import android.os.*
-import android.telecom.Call
-import android.telecom.CallAudioState
-import android.view.*
-import android.widget.ImageView
-import android.widget.LinearLayout
-import android.widget.PopupMenu
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.*
-import com.goodwy.commons.helpers.setWindowTransparency
-import com.goodwy.commons.models.SimpleListItem
-import com.goodwy.dialer.R
-import com.goodwy.dialer.dialogs.DynamicBottomSheetChooserDialog
-import com.goodwy.dialer.extensions.*
-import com.goodwy.dialer.helpers.*
-import com.goodwy.dialer.models.*
-import com.mikhaellopez.rxanimation.*
-import com.mikhaellopez.rxanimation.fadeIn
-import com.mikhaellopez.rxanimation.fadeOut
-import kotlinx.android.synthetic.main.activity_call.*
-import kotlinx.android.synthetic.main.activity_call.dialpad_input
-import kotlinx.android.synthetic.main.activity_call.dialpad_wrapper
-import kotlinx.android.synthetic.main.dialpad.*
-import org.greenrobot.eventbus.EventBus
-import java.util.concurrent.TimeUnit
-import kotlin.math.max
-import kotlin.math.min
-
-class CallActivity : SimpleActivity() {
-    companion object {
-        fun getStartIntent(context: Context): Intent {
-            val openAppIntent = Intent(context, CallActivity::class.java)
-            openAppIntent.flags = Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT or Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_REORDER_TO_FRONT
-            return openAppIntent
-        }
-    }
-
-    private var isSpeakerOn = false
-    private var isMicrophoneOff = false
-    private var isCallEnded = false
-    private var callContact: CallContact? = null
-    private var proximityWakeLock: PowerManager.WakeLock? = null
-    private var screenOnWakeLock: PowerManager.WakeLock? = null
-    private var callDuration = 0
-    private val callContactAvatarHelper by lazy { CallContactAvatarHelper(this) }
-    private val callDurationHandler = Handler(Looper.getMainLooper())
-    private var dragDownX = 0f
-    private var stopAnimation = false
-    private var viewsUnderDialpad = arrayListOf<Pair<View, Float>>()
-    private var dialpadHeight = 0f
-
-    private var audioRouteChooserDialog: DynamicBottomSheetChooserDialog? = null
-
-    @SuppressLint("MissingSuperCall", "MissingPermission")
-    override fun onCreate(savedInstanceState: Bundle?) {
-        showTransparentTop = true
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_call)
-
-        if (CallManager.getPhoneState() == NoCall) {
-            finish()
-            return
-        }
-
-        if (config.backgroundCallScreen == TRANSPARENT_BACKGROUND) checkPermission()
-
-        updateTextColors(call_holder)
-        initButtons()
-        audioManager.mode = AudioManager.MODE_IN_CALL
-        addLockScreenFlags()
-        CallManager.addListener(callCallback)
-        updateCallContactInfo(CallManager.getPrimaryCall())
-
-        if (config.backgroundCallScreen == TRANSPARENT_BACKGROUND || config.backgroundCallScreen == BLUR_AVATAR || config.backgroundCallScreen == AVATAR) {
-            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.TIRAMISU) {
-                if (config.backgroundCallScreen == TRANSPARENT_BACKGROUND && hasPermission(PERMISSION_READ_STORAGE)) {
-                    val wallpaperManager = WallpaperManager.getInstance(this)
-                    val wallpaperBlur = BlurFactory.fileToBlurBitmap(wallpaperManager.drawable, this, 0.2f, 25f)
-                    if (wallpaperBlur != null) {
-                        val drawable: Drawable = BitmapDrawable(resources, wallpaperBlur)
-                        call_holder.background = drawable
-                        call_holder.background.alpha = 60
-                        if (isQPlus()) {
-                            call_holder.background.colorFilter = BlendModeColorFilter(Color.DKGRAY, BlendMode.SOFT_LIGHT)
-                        } else {
-                            call_holder.background.setColorFilter(Color.DKGRAY, PorterDuff.Mode.DARKEN)
-                        }
-                    }
-                }
-            }
-
-            arrayOf(caller_name_label, caller_number, call_status_label, call_decline_label, call_accept_label,
-                dialpad_1, dialpad_2, dialpad_3, dialpad_4, dialpad_5, dialpad_6, dialpad_7, dialpad_8, dialpad_9,
-                dialpad_0, dialpad_plus, dialpad_input,
-                dialpad_2_letters, dialpad_3_letters, dialpad_4_letters, dialpad_5_letters,
-                dialpad_6_letters, dialpad_7_letters, dialpad_8_letters, dialpad_9_letters,
-                on_hold_caller_name, on_hold_label, call_message_label, call_remind_label
-            ).forEach {
-                it.setTextColor(Color.WHITE)
-            }
-
-            arrayOf(call_toggle_microphone, call_toggle_speaker, call_dialpad, dialpad_close, call_sim_image,
-                call_toggle_hold, call_add_contact, call_add, call_swap, call_merge, call_manage, imageView,
-                dialpad_asterisk, dialpad_hashtag
-            ).forEach {
-                it.applyColorFilter(Color.WHITE)
-            }
-
-            call_sim_id.setTextColor(Color.WHITE.getContrastColor())
-            // Transparent status bar and navigation bar
-            setWindowTransparency(false) { statusBarSize, bottomNavigationBarSize, leftNavigationBarSize, rightNavigationBarSize ->
-                call_holder.setPadding(leftNavigationBarSize, statusBarSize, rightNavigationBarSize, bottomNavigationBarSize)
-                updateStatusbarColor(Color.BLACK)
-                updateNavigationBarColor(Color.BLACK)
-            }
-        } else {
-            arrayOf(call_toggle_microphone, call_toggle_speaker, call_dialpad, dialpad_close, call_sim_image,
-                call_toggle_hold, call_add_contact, call_add, call_swap, call_merge, call_manage, imageView,
-                dialpad_asterisk, dialpad_hashtag, call_message, call_remind
-            ).forEach {
-                it.applyColorFilter(getProperTextColor())
-            }
-
-            call_sim_id.setTextColor(getProperTextColor().getContrastColor())
-            dialpad_input.disableKeyboard()
-
-            dialpad_wrapper.onGlobalLayout {
-                dialpadHeight = dialpad_wrapper.height.toFloat()
-            }
-        }
-
-        call_toggle_microphone.background.alpha = 60
-        call_toggle_microphone.background.applyColorFilter(Color.GRAY)
-        call_dialpad_holder.foreground.alpha = 60
-        call_dialpad_holder.foreground.applyColorFilter(Color.GRAY)
-        call_toggle_speaker.background.alpha = 60
-        call_toggle_speaker.background.applyColorFilter(Color.GRAY)
-        call_toggle_hold.background.alpha = 60
-        call_toggle_hold.background.applyColorFilter(Color.GRAY)
-        call_add_contact_holder.foreground.alpha = 60
-        call_add_contact_holder.foreground.applyColorFilter(Color.GRAY)
-        call_add_holder.foreground.alpha = 60
-        call_add_holder.foreground.applyColorFilter(Color.GRAY)
-        call_swap_holder.foreground.alpha = 60
-        call_swap_holder.foreground.applyColorFilter(Color.GRAY)
-        call_merge_holder.foreground.alpha = 60
-        call_merge_holder.foreground.applyColorFilter(Color.GRAY)
-        on_hold_status_holder.background.alpha = 60
-        on_hold_status_holder.background.applyColorFilter(Color.GRAY)
-        arrayOf(dialpad_0_holder, dialpad_1_holder, dialpad_2_holder, dialpad_3_holder, dialpad_4_holder,
-            dialpad_5_holder, dialpad_6_holder, dialpad_7_holder, dialpad_8_holder, dialpad_9_holder,
-            dialpad_asterisk_holder, dialpad_hashtag_holder
-        ).forEach {
-            it.foreground.applyColorFilter(Color.GRAY)
-            it.foreground.alpha = 60
-        }
-    }
-
-    override fun onNewIntent(intent: Intent?) {
-        super.onNewIntent(intent)
-        updateState()
-    }
-
-    override fun onResume() {
-        super.onResume()
-        updateState()
-        if (config.backgroundCallScreen == TRANSPARENT_BACKGROUND || config.backgroundCallScreen == BLUR_AVATAR || config.backgroundCallScreen == AVATAR) {
-            updateStatusbarColor(Color.BLACK)
-            updateNavigationBarColor(Color.BLACK)
-        }
-        //updateNavigationBarColor(getBottomNavigationBackgroundColor())
-    }
-
-    @SuppressLint("MissingSuperCall")
-    override fun onDestroy() {
-        super.onDestroy()
-        CallManager.removeListener(callCallback)
-        disableProximitySensor()
-
-        if (screenOnWakeLock?.isHeld == true) {
-            screenOnWakeLock!!.release()
-        }
-    }
-
-    private fun refreshTimers() {
-//        timerHelper.getTimers { timers ->
-//            runOnUiThread {
-//                toast("Reqwer")
-//                //startTimerService(this)
-//                endCall(true)
-//            }
-//        }
-    }
-
-    override fun onBackPressed() {
-        if (dialpad_wrapper.isVisible()) {
-            hideDialpad()
-            return
-        } else {
-            super.onBackPressed()
-        }
-
-        val callState = CallManager.getState()
-        if (callState == Call.STATE_CONNECTING || callState == Call.STATE_DIALING) {
-            endCall()
-        }
-    }
-
-    private fun initButtons() {
-
-        if (config.disableSwipeToAnswer) {
-            call_draggable.beGone()
-            call_draggable_background.beGone()
-            call_left_arrow.beGone()
-            call_right_arrow.beGone()
-
-            call_decline.setOnClickListener {
-                endCall()
-            }
-
-            call_accept.setOnClickListener {
-                acceptCall()
-            }
-        } else {
-            call_decline.beGone()
-            call_decline_label.beGone()
-            call_accept.beGone()
-            call_accept_label.beGone()
-            handleSwipe()
-        }
-
-        call_toggle_microphone.setOnClickListener {
-            toggleMicrophone()
-        }
-
-        call_toggle_speaker.setOnClickListener {
-            //toggleSpeaker()
-            changeCallAudioRoute()
-        }
-
-        call_dialpad_holder.setOnClickListener {
-            toggleDialpadVisibility()
-        }
-
-        dialpad_close.setOnClickListener {
-            hideDialpad()
-        }
-
-        call_add_holder.setOnClickListener {
-            Intent(applicationContext, DialpadActivity::class.java).apply {
-                addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY)
-                startActivity(this)
-            }
-        }
-
-        call_swap_holder.setOnClickListener {
-            CallManager.swap()
-        }
-
-        call_merge_holder.setOnClickListener {
-            CallManager.merge()
-        }
-
-        call_manage.setOnClickListener {
-            startActivity(Intent(this, ConferenceActivity::class.java))
-        }
-
-        call_toggle_hold.setOnClickListener {
-            toggleHold()
-        }
-
-        call_add_contact_holder.setOnClickListener {
-            addContact()
-        }
-
-        call_end.setOnClickListener {
-            endCall()
-        }
-
-        dialpad_0_holder.setOnClickListener { dialpadPressed('0') }
-        dialpad_1_holder.setOnClickListener { dialpadPressed('1') }
-        dialpad_2_holder.setOnClickListener { dialpadPressed('2') }
-        dialpad_3_holder.setOnClickListener { dialpadPressed('3') }
-        dialpad_4_holder.setOnClickListener { dialpadPressed('4') }
-        dialpad_5_holder.setOnClickListener { dialpadPressed('5') }
-        dialpad_6_holder.setOnClickListener { dialpadPressed('6') }
-        dialpad_7_holder.setOnClickListener { dialpadPressed('7') }
-        dialpad_8_holder.setOnClickListener { dialpadPressed('8') }
-        dialpad_9_holder.setOnClickListener { dialpadPressed('9') }
-
-        dialpad_0_holder.setOnLongClickListener { dialpadPressed('+'); true }
-        dialpad_asterisk_holder.setOnClickListener { dialpadPressed('*') }
-        dialpad_hashtag_holder.setOnClickListener { dialpadPressed('#') }
-        //dialpad_wrapper.setBackgroundColor(getProperBackgroundColor())
-        //dialpad_include.setBackgroundColor(getProperBackgroundColor())
-
-        arrayOf(
-            call_toggle_microphone, call_toggle_speaker, call_dialpad_holder, call_toggle_hold,
-            call_add_holder, call_swap_holder, call_merge_holder, call_manage, call_add_contact_holder
-        ).forEach { imageView ->
-            imageView.setOnLongClickListener {
-                if (!imageView.contentDescription.isNullOrEmpty()) {
-                    toast(imageView.contentDescription.toString())
-                }
-                true
-            }
-        }
-    }
-
-    @SuppressLint("ClickableViewAccessibility")
-    private fun handleSwipe() {
-        var minDragX = 0f
-        var maxDragX = 0f
-        var initialDraggableX = 0f
-        var initialLeftArrowX = 0f
-        var initialRightArrowX = 0f
-        var initialLeftArrowScaleX = 0f
-        var initialLeftArrowScaleY = 0f
-        var initialRightArrowScaleX = 0f
-        var initialRightArrowScaleY = 0f
-        var leftArrowTranslation = 0f
-        var rightArrowTranslation = 0f
-
-        val isRtl = isRTLLayout
-        call_accept.onGlobalLayout {
-            minDragX = call_draggable_background.left.toFloat() + resources.getDimension(R.dimen.three_dp)
-            maxDragX = call_draggable_background.right.toFloat() - call_draggable.height.toFloat() - resources.getDimension(R.dimen.three_dp)
-            initialDraggableX = call_draggable.left.toFloat()
-            initialLeftArrowX = call_left_arrow.x
-            initialRightArrowX = call_right_arrow.x
-            initialLeftArrowScaleX = call_left_arrow.scaleX
-            initialLeftArrowScaleY = call_left_arrow.scaleY
-            initialRightArrowScaleX = call_right_arrow.scaleX
-            initialRightArrowScaleY = call_right_arrow.scaleY
-            leftArrowTranslation = -call_draggable_background.x
-            rightArrowTranslation = call_draggable_background.x
-
-            call_left_arrow.applyColorFilter(getColor(R.color.red_call))
-            call_right_arrow.applyColorFilter(getColor(R.color.green_call))
-
-            startArrowAnimation(call_left_arrow, initialLeftArrowX, initialLeftArrowScaleX, initialLeftArrowScaleY, leftArrowTranslation)
-            startArrowAnimation(call_right_arrow, initialRightArrowX, initialRightArrowScaleX, initialRightArrowScaleY, rightArrowTranslation)
-        }
-
-        call_draggable.drawable.mutate().setTint(getColor(R.color.green_call))
-        call_draggable_background.background.mutate().setTint(getProperTextColor())
-
-        var lock = false
-        call_draggable.setOnTouchListener { _, event ->
-            when (event.action) {
-                MotionEvent.ACTION_DOWN -> {
-                    dragDownX = event.x
-                    //call_draggable_background.animate().alpha(0f)
-                    stopAnimation = true
-                    call_left_arrow.animate().alpha(0f)
-                    call_right_arrow.animate().alpha(0f)
-                    lock = false
-                }
-                MotionEvent.ACTION_UP, MotionEvent.ACTION_CANCEL -> {
-                    dragDownX = 0f
-                    call_draggable.animate().x(initialDraggableX).withEndAction {
-                        call_draggable_background.animate().alpha(0.2f)
-                    }
-                    call_draggable.setImageDrawable(getDrawable(R.drawable.ic_phone_down_vector))
-                    call_draggable.drawable.mutate().setTint(getColor(R.color.green_call))
-                    call_left_arrow.animate().alpha(1f)
-                    call_right_arrow.animate().alpha(1f)
-                    stopAnimation = false
-                    startArrowAnimation(call_left_arrow, initialLeftArrowX, initialLeftArrowScaleX, initialLeftArrowScaleY, leftArrowTranslation)
-                    startArrowAnimation(call_right_arrow, initialRightArrowX, initialRightArrowScaleX, initialRightArrowScaleY, rightArrowTranslation)
-                }
-                MotionEvent.ACTION_MOVE -> {
-                    call_draggable.x = min(maxDragX, max(minDragX, event.rawX - dragDownX))
-                    when {
-                        call_draggable.x >= maxDragX - 50f -> {
-                            if (!lock) {
-                                lock = true
-                                call_draggable.performHapticFeedback()
-                                if (isRtl) {
-                                    endCall()
-                                } else {
-                                    acceptCall()
-                                }
-                            }
-                        }
-                        call_draggable.x <= minDragX + 50f -> {
-                            if (!lock) {
-                                lock = true
-                                call_draggable.performHapticFeedback()
-                                if (isRtl) {
-                                    acceptCall()
-                                } else {
-                                    endCall()
-                                }
-                            }
-                        }
-                        call_draggable.x > initialDraggableX -> {
-                            lock = false
-                            val drawableRes = if (isRtl) {
-                                R.drawable.ic_phone_down_red_vector
-                            } else {
-                                R.drawable.ic_phone_green_vector
-                            }
-                            call_draggable.setImageDrawable(getDrawable(drawableRes))
-                        }
-                        call_draggable.x <= initialDraggableX -> {
-                            lock = false
-                            val drawableRes = if (isRtl) {
-                                R.drawable.ic_phone_green_vector
-                            } else {
-                                R.drawable.ic_phone_down_red_vector
-                            }
-                            call_draggable.setImageDrawable(getDrawable(drawableRes))
-                        }
-                    }
-                }
-            }
-            true
-        }
-    }
-
-    private fun startArrowAnimation(arrow: ImageView, initialX: Float, initialScaleX: Float, initialScaleY: Float, translation: Float) {
-        arrow.apply {
-            alpha = 1f
-            x = initialX
-            scaleX = initialScaleX
-            scaleY = initialScaleY
-            animate()
-                .alpha(0f)
-                .translationX(translation)
-                .scaleXBy(-0.5f)
-                .scaleYBy(-0.5f)
-                .setDuration(1000)
-                .withEndAction {
-                    if (!stopAnimation) {
-                        startArrowAnimation(this, initialX, initialScaleX, initialScaleY, translation)
-                    }
-                }
-        }
-    }
-
-    private fun dialpadPressed(char: Char) {
-        CallManager.keypad(char)
-        dialpad_input.addCharacter(char)
-    }
-
-    private fun changeCallAudioRoute() {
-        val supportAudioRoutes = CallManager.getSupportedAudioRoutes()
-        if (supportAudioRoutes.contains(AudioRoute.BLUETOOTH)) {
-            createOrUpdateAudioRouteChooser(supportAudioRoutes)
-        } else {
-            val isSpeakerOn = !isSpeakerOn
-            val newRoute = if (isSpeakerOn) CallAudioState.ROUTE_SPEAKER else CallAudioState.ROUTE_WIRED_OR_EARPIECE
-            CallManager.setAudioRoute(newRoute)
-        }
-    }
-
-    private fun createOrUpdateAudioRouteChooser(routes: Array<AudioRoute>, create: Boolean = true) {
-        val callAudioRoute = CallManager.getCallAudioRoute()
-        val items = routes
-            .sortedByDescending { it.route }
-            .map {
-                SimpleListItem(id = it.route, textRes = it.stringRes, imageRes = it.iconRes, selected = it == callAudioRoute)
-            }
-            .toTypedArray()
-
-        if (audioRouteChooserDialog?.isVisible == true) {
-            audioRouteChooserDialog?.updateChooserItems(items)
-        } else if (create) {
-            audioRouteChooserDialog = DynamicBottomSheetChooserDialog.createChooser(
-                fragmentManager = supportFragmentManager,
-                title = R.string.choose_audio_route,
-                items = items
-            ) {
-                audioRouteChooserDialog = null
-                CallManager.setAudioRoute(it.id)
-            }
-        }
-    }
-
-    private fun updateCallAudioState(route: AudioRoute?) {
-        if (route != null) {
-            isSpeakerOn = route == AudioRoute.SPEAKER
-            val supportedAudioRoutes = CallManager.getSupportedAudioRoutes()
-            call_toggle_speaker.apply {
-                val bluetoothConnected = supportedAudioRoutes.contains(AudioRoute.BLUETOOTH)
-                contentDescription = if (bluetoothConnected) {
-                    getString(R.string.choose_audio_route)
-                } else {
-                    getString(if (isSpeakerOn) R.string.turn_speaker_off else R.string.turn_speaker_on)
-                }
-                // show speaker icon when a headset is connected, a headset icon maybe confusing to some
-                if (route == AudioRoute.WIRED_HEADSET || route == AudioRoute.EARPIECE) {
-                    setImageResource(R.drawable.ic_volume_down_vector)
-                } else {
-                    setImageResource(route.iconRes)
-                }
-            }
-            toggleButtonColor(call_toggle_speaker, enabled = route != AudioRoute.EARPIECE && route != AudioRoute.WIRED_HEADSET)
-            createOrUpdateAudioRouteChooser(supportedAudioRoutes, create = false)
-
-            if (isSpeakerOn) {
-                disableProximitySensor()
-            } else {
-                enableProximitySensor()
-            }
-        }
-    }
-
-    // OLD
-    /*private fun toggleSpeaker() {
-        isSpeakerOn = !isSpeakerOn
-        val drawable = if (isSpeakerOn) R.drawable.ic_volume_up_vector else R.drawable.ic_volume_down_vector
-        call_toggle_speaker.setImageDrawable(getDrawable(drawable))
-        audioManager.isSpeakerphoneOn = isSpeakerOn
-
-        if (config.transparentCallScreen && hasPermission(PERMISSION_READ_STORAGE)) {
-            val color = if (isSpeakerOn) Color.WHITE else Color.GRAY
-            call_toggle_speaker.background.applyColorFilter(color)
-            val colorIcon = if (isSpeakerOn) Color.BLACK else Color.WHITE
-            call_toggle_speaker.applyColorFilter(colorIcon)
-        }
-        call_toggle_speaker.background.alpha = if (isSpeakerOn) 255 else 60
-
-        val newRoute = if (isSpeakerOn) CallAudioState.ROUTE_SPEAKER else CallAudioState.ROUTE_EARPIECE
-        CallManager.inCallService?.setAudioRoute(newRoute)
-        call_toggle_speaker.contentDescription = getString(if (isSpeakerOn) R.string.turn_speaker_off else R.string.turn_speaker_on)
-
-        if (isSpeakerOn) {
-            disableProximitySensor()
-        } else {
-            enableProximitySensor()
-        }
-    }*/
-
-    private fun toggleMicrophone() {
-        isMicrophoneOff = !isMicrophoneOff
-        val drawable = if (!isMicrophoneOff) R.drawable.ic_microphone_vector else R.drawable.ic_microphone_off_vector
-        call_toggle_microphone.setImageDrawable(getDrawable(drawable))
-
-        if (config.backgroundCallScreen == TRANSPARENT_BACKGROUND || config.backgroundCallScreen == BLUR_AVATAR || config.backgroundCallScreen == AVATAR) {
-            val color = if (isMicrophoneOff) Color.WHITE else Color.GRAY
-            call_toggle_microphone.background.applyColorFilter(color)
-            val colorIcon = if (isMicrophoneOff) Color.BLACK else Color.WHITE
-            call_toggle_microphone.applyColorFilter(colorIcon)
-        }
-        call_toggle_microphone.background.alpha = if (isMicrophoneOff) 255 else 60
-
-        audioManager.isMicrophoneMute = isMicrophoneOff
-        CallManager.inCallService?.setMuted(isMicrophoneOff)
-        call_toggle_microphone.contentDescription = getString(if (isMicrophoneOff) R.string.turn_microphone_on else R.string.turn_microphone_off)
-    }
-
-    private fun toggleDialpadVisibility() {
-        if (dialpad_wrapper.isVisible()) hideDialpad() else showDialpad()
-    }
-
-    private fun showDialpad() {
-        dialpad_wrapper.beVisible()
-        dialpad_close.beVisible()
-        arrayOf(caller_avatar, caller_name_label, caller_number, call_status_label,
-            call_sim_image, call_sim_id, call_toggle_microphone, call_dialpad_holder,
-            call_toggle_speaker, call_add_contact_holder, call_manage).forEach {
-            it.beGone()
-        }
-        controls_single_call.beGone()
-        controls_two_calls.beGone()
-
-        RxAnimation.together(
-            dialpad_wrapper.scale(1f),
-            dialpad_wrapper.fadeIn(),
-            dialpad_close.fadeIn()
-        ).doAfterTerminate {
-        }.subscribe()
-    }
-
-    @SuppressLint("MissingPermission")
-    private fun hideDialpad() {
-        RxAnimation.together(
-            dialpad_wrapper.scale(0.7f),
-            dialpad_wrapper.fadeOut(),
-            dialpad_close.fadeOut()
-        ).doAfterTerminate {
-            dialpad_wrapper.beGone()
-            dialpad_close.beGone()
-            arrayOf(caller_avatar, caller_name_label, caller_number, call_status_label,
-                call_toggle_microphone, call_dialpad_holder,
-                call_toggle_speaker, call_add_contact_holder).forEach {
-                it.beVisible()
-            }
-            val accounts = telecomManager.callCapablePhoneAccounts
-            call_sim_image.beVisibleIf(accounts.size > 1)
-            call_sim_id.beVisibleIf(accounts.size > 1)
-            updateState()
-        }.subscribe()
-    }
-
-    private fun toggleHold() {
-        val isOnHold = CallManager.toggleHold()
-        val drawable = if (isOnHold) R.drawable.ic_pause_crossed_vector else R.drawable.ic_pause_vector
-        call_toggle_hold.setImageDrawable(getDrawable(drawable))
-        call_toggle_hold.contentDescription = getString(if (isOnHold) R.string.resume_call else R.string.hold_call)
-        hold_status_label.beVisibleIf(isOnHold)
-        RxAnimation.from(hold_status_label)
-            .shake()
-            .subscribe()
-
-        if (config.backgroundCallScreen == TRANSPARENT_BACKGROUND || config.backgroundCallScreen == BLUR_AVATAR || config.backgroundCallScreen == AVATAR) {
-            val color = if (isOnHold) Color.WHITE else Color.GRAY
-            call_toggle_hold.background.applyColorFilter(color)
-            val colorIcon = if (isOnHold) Color.BLACK else Color.WHITE
-            call_toggle_hold.applyColorFilter(colorIcon)
-        }
-        call_toggle_hold.background.alpha = if (isOnHold) 255 else 60
-    }
-
-    private fun addContact() {
-        val number = if (callContact!!.number.isNotEmpty()) callContact!!.number else ""
-        Intent().apply {
-            action = Intent.ACTION_INSERT_OR_EDIT
-            type = "vnd.android.cursor.item/contact"
-            putExtra(KEY_PHONE, number)
-            launchActivityIntent(this)
-        }
-    }
-
-    private fun updateOtherPersonsInfo(avatar: Bitmap?) {
-        if (callContact == null) {
-            return
-        }
-
-        caller_name_label.text = if (callContact!!.name.isNotEmpty()) callContact!!.name else getString(R.string.unknown_caller)
-        if (callContact!!.number.isNotEmpty() && callContact!!.number != callContact!!.name) {
-            caller_number.text = callContact!!.number
-
-            if (callContact!!.numberLabel.isNotEmpty()) {
-                caller_number.text = "${callContact!!.number} - ${callContact!!.numberLabel}"
-            }
-        } else {
-            val country = if (callContact!!.number.startsWith("+")) getCountryByNumber(this, callContact!!.number) else ""
-            if (country != "") {
-                caller_number.text = country
-            } else caller_number.beGone()
-        }
-
-        if (avatar != null) {
-            caller_avatar.setImageBitmap(avatar)
-        } else {
-            caller_avatar.setImageDrawable(null)
-        }
-
-        call_message.apply {
-            setOnClickListener {
-                val wrapper: Context = ContextThemeWrapper(this@CallActivity, getPopupMenuTheme())
-                val popupMenu = PopupMenu(wrapper, call_message, Gravity.END)
-                popupMenu.menu.add(1, 1, 1, getString(R.string.other))
-                popupMenu.menu.add(1, 2, 2, getString(R.string.message_call_later))
-                popupMenu.menu.add(1, 3, 3, getString(R.string.message_on_my_way))
-                popupMenu.menu.add(1, 4, 4, getString(R.string.message_cant_talk_right_now))
-                popupMenu.setOnMenuItemClickListener { item ->
-                    when (item.itemId) {
-                        1 -> {
-                            sendSMS(callContact!!.number, " ")
-                            endCall()
-                        }
-                        else -> {
-                            sendSMS(callContact!!.number, item.title.toString())
-                            endCall()
-                        }
-                    }
-                    true
-                }
-                popupMenu.show()
-
-            //sendSMS(callContact!!.number, "textMessage")
-            }
-            setOnLongClickListener { toast(R.string.send_sms); true; }
-        }
-
-        call_remind.setOnClickListener {
-            this.handleNotificationPermission { permission ->
-                if (permission) {
-                    val wrapper: Context = ContextThemeWrapper(this@CallActivity, getPopupMenuTheme())
-                    val popupMenu = PopupMenu(wrapper, call_remind, Gravity.END)
-                    popupMenu.menu.add(1, 1, 1, String.format(resources.getQuantityString(R.plurals.minutes, 10, 10)))
-                    popupMenu.menu.add(1, 2, 2, String.format(resources.getQuantityString(R.plurals.minutes, 30, 30)))
-                    popupMenu.menu.add(1, 3, 3, String.format(resources.getQuantityString(R.plurals.minutes, 60, 60)))
-                    popupMenu.setOnMenuItemClickListener { item ->
-                        when (item.itemId) {
-                            1 -> {
-                                startTimer(600)
-                                endCall()
-                            }
-                            2 -> {
-                                startTimer(1800)
-                                endCall()
-                            }
-                            else -> {
-                                startTimer(3600)
-                                endCall()
-                            }
-                        }
-                        true
-                    }
-                    popupMenu.show()
-                } else {
-                    toast(R.string.no_post_notifications_permissions)
-                }
-            }
-        }
-    }
-
-    private fun startTimer(duration: Int) {
-        timerHelper.getTimers { timers ->
-            val runningTimers = timers.filter { it.state is TimerState.Running && it.id == 1 }
-            runningTimers.forEach { timer ->
-                EventBus.getDefault().post(TimerEvent.Delete(timer.id!!))
-            }
-            val newTimer = createNewTimer()
-            newTimer.id = 1
-            newTimer.title = callContact!!.name
-            newTimer.label = callContact!!.number
-            newTimer.seconds = duration
-            newTimer.vibrate = true
-            timerHelper.insertOrUpdateTimer(newTimer)
-            EventBus.getDefault().post(TimerEvent.Start(1, duration.secondsToMillis))
-        }
-    }
-
-    private val Int.secondsToMillis get() = TimeUnit.SECONDS.toMillis(this.toLong())
-
-    private fun sendSMS(number: String, text: String) {
-        Intent(Intent.ACTION_SENDTO).apply {
-            data = Uri.fromParts("smsto", number, null)
-            putExtra("sms_body", text)
-            launchActivityIntent(this)
-        }
-    }
-
-    private fun getContactNameOrNumber(contact: CallContact): String {
-        return contact.name.ifEmpty {
-            contact.number.ifEmpty {
-                getString(R.string.unknown_caller)
-            }
-        }
-    }
-
-    @SuppressLint("MissingPermission")
-    private fun checkCalledSIMCard() {
-        try {
-            val accounts = telecomManager.callCapablePhoneAccounts
-            if (accounts.size > 1) {
-                accounts.forEachIndexed { index, account ->
-                    if (account == CallManager.getPrimaryCall()?.details?.accountHandle) {
-                        call_sim_id.text = "${index + 1}"
-                        call_sim_id.beVisible()
-                        call_sim_image.beVisible()
-
-                        val acceptDrawableId = when (index) {
-                            0 -> R.drawable.ic_phone_one_vector
-                            1 -> R.drawable.ic_phone_two_vector
-                            else -> R.drawable.ic_phone_vector
-                        }
-
-                        val rippleBg = resources.getDrawable(R.drawable.ic_call_accept, theme) as RippleDrawable
-                        val layerDrawable = rippleBg.findDrawableByLayerId(R.id.accept_call_background_holder) as LayerDrawable
-                        layerDrawable.setDrawableByLayerId(R.id.accept_call_icon, getDrawable(acceptDrawableId))
-                        call_accept.setImageDrawable(rippleBg)
-                    }
-                }
-            }
-        } catch (ignored: Exception) {
-        }
-    }
-
-    private fun updateCallState(call: Call) {
-        val state = call.getStateCompat()
-        when (state) {
-            Call.STATE_RINGING -> callRinging()
-            Call.STATE_ACTIVE -> callStarted()
-            Call.STATE_DISCONNECTED -> endCall()
-            Call.STATE_CONNECTING, Call.STATE_DIALING -> initOutgoingCallUI()
-            Call.STATE_SELECT_PHONE_ACCOUNT -> showPhoneAccountPicker()
-        }
-
-        val statusTextId = when (state) {
-            Call.STATE_RINGING -> R.string.is_calling
-            Call.STATE_CONNECTING, Call.STATE_DIALING -> R.string.dialing
-            else -> 0
-        }
-
-        if (statusTextId != 0) {
-            call_status_label.text = getString(statusTextId)
-        }
-
-        call_manage.beVisibleIf(call.hasCapability(Call.Details.CAPABILITY_MANAGE_CONFERENCE))
-        if (dialpad_wrapper.isGone()) {
-            setActionButtonEnabled(call_swap_holder, state == Call.STATE_ACTIVE)
-            setActionButtonEnabled(call_merge_holder, state == Call.STATE_ACTIVE)
-        }
-    }
-
-    private fun updateState() {
-        val phoneState = CallManager.getPhoneState()
-        if (phoneState is SingleCall) {
-            updateCallState(phoneState.call)
-            updateCallOnHoldState(null)
-            val state = phoneState.call.getStateCompat()
-            val isSingleCallActionsEnabled = (state == Call.STATE_ACTIVE || state == Call.STATE_DISCONNECTED
-                || state == Call.STATE_DISCONNECTING || state == Call.STATE_HOLDING)
-            if (dialpad_wrapper.isGone()) {
-                setActionImageViewEnabled(call_toggle_hold, isSingleCallActionsEnabled)
-                setActionButtonEnabled(call_add_holder, isSingleCallActionsEnabled)
-            }
-        } else if (phoneState is TwoCalls) {
-            updateCallState(phoneState.active)
-            updateCallOnHoldState(phoneState.onHold)
-        }
-
-        updateCallAudioState(CallManager.getCallAudioRoute())
-    }
-
-    private fun updateCallOnHoldState(call: Call?) {
-        val hasCallOnHold = call != null
-        if (hasCallOnHold) {
-            getCallContact(applicationContext, call) { contact ->
-                runOnUiThread {
-                    on_hold_caller_name.text = getContactNameOrNumber(contact)
-                }
-            }
-        }
-        on_hold_status_holder.beVisibleIf(hasCallOnHold)
-        controls_single_call.beVisibleIf(!hasCallOnHold && dialpad_wrapper.isGone())
-        controls_two_calls.beVisibleIf(hasCallOnHold && dialpad_wrapper.isGone())
-    }
-
-    @SuppressLint("UseCompatLoadingForDrawables")
-    private fun updateCallContactInfo(call: Call?) {
-        getCallContact(applicationContext, call) { contact ->
-            if (call != CallManager.getPrimaryCall()) {
-                return@getCallContact
-            }
-            callContact = contact
-
-            if (config.backgroundCallScreen == BLUR_AVATAR || config.backgroundCallScreen == AVATAR) {
-                val avatar = if (!call.isConference()) callContactAvatarHelper.getCallContactAvatar(contact, false) else null
-                if (avatar != null) {
-                    val avatarBlur = BlurFactory.fileToBlurBitmap(avatar, this, 0.6f, 25f)
-                    val bg = when (config.backgroundCallScreen) {
-                        BLUR_AVATAR -> avatarBlur
-                        AVATAR -> avatar
-                        else -> null
-                    }
-                    val windowHeight = window.decorView.height
-                    val windowWidth = window.decorView.width
-                    if (bg != null && windowWidth != 0) {
-                        val aspectRatio = windowHeight / windowWidth
-                        val drawable: Drawable = BitmapDrawable(resources, bg.cropCenter(bg.width/aspectRatio, bg.height))
-                        call_holder.background = drawable
-                        call_holder.background.alpha = 60
-                        if (isQPlus()) {
-                            call_holder.background.colorFilter = BlendModeColorFilter(Color.DKGRAY, BlendMode.SOFT_LIGHT)
-                        } else {
-                            call_holder.background.setColorFilter(Color.DKGRAY, PorterDuff.Mode.DARKEN)
-                        }
-                    }
-                } else {
-                    val bg = BlurFactory.fileToBlurBitmap(resources.getDrawable(R.drawable.button_gray_bg, theme), this, 0.6f, 25f)
-                    val drawable: Drawable = BitmapDrawable(resources, bg)
-                    call_holder.background = drawable
-                    call_holder.background.alpha = 60
-                    if (isQPlus()) {
-                        call_holder.background.colorFilter = BlendModeColorFilter(Color.DKGRAY, BlendMode.SOFT_LIGHT)
-                    } else {
-                        call_holder.background.setColorFilter(Color.DKGRAY, PorterDuff.Mode.DARKEN)
-                    }
-                }
-            }
-
-            val avatarRound = if (!call.isConference()) callContactAvatarHelper.getCallContactAvatar(contact) else null
-            runOnUiThread {
-                updateOtherPersonsInfo(avatarRound)
-                checkCalledSIMCard()
-            }
-        }
-    }
-
-    private fun acceptCall() {
-        CallManager.accept()
-    }
-
-    private fun initOutgoingCallUI() {
-        enableProximitySensor()
-        incoming_call_holder.beGone()
-        ongoing_call_holder.beVisible()
-    }
-
-    private fun callRinging() {
-        incoming_call_holder.beVisible()
-    }
-
-    private fun callStarted() {
-        enableProximitySensor()
-        incoming_call_holder.beGone()
-        ongoing_call_holder.beVisible()
-        callDurationHandler.removeCallbacks(updateCallDurationTask)
-        callDurationHandler.post(updateCallDurationTask)
-    }
-
-    private fun showPhoneAccountPicker() {
-        if (callContact != null) {
-            getHandleToUse(intent, callContact!!.number) { handle ->
-                CallManager.getPrimaryCall()?.phoneAccountSelected(handle, false)
-            }
-        }
-    }
-
-    private fun endCall() {
-        CallManager.reject()
-        disableProximitySensor()
-        audioRouteChooserDialog?.dismissAllowingStateLoss()
-
-        if (isCallEnded) {
-            finishAndRemoveTask()
-            return
-        }
-
-        try {
-            audioManager.mode = AudioManager.MODE_NORMAL
-        } catch (ignored: Exception) {
-        }
-
-        isCallEnded = true
-        if (callDuration > 0) {
-            runOnUiThread {
-                call_status_label.text = "${callDuration.getFormattedDuration()} (${getString(R.string.call_ended)})"
-                Handler().postDelayed({
-                    finishAndRemoveTask()
-                }, 2000)
-            }
-        } else {
-            call_status_label.text = getString(R.string.call_ended)
-            finish()
-        }
-    }
-
-    private val callCallback = object : CallManagerListener {
-        override fun onStateChanged() {
-            updateState()
-        }
-
-        override fun onAudioStateChanged(audioState: AudioRoute) {
-            updateCallAudioState(audioState)
-        }
-
-        override fun onPrimaryCallChanged(call: Call) {
-            callDurationHandler.removeCallbacks(updateCallDurationTask)
-            updateCallContactInfo(call)
-            updateState()
-        }
-    }
-
-    private val updateCallDurationTask = object : Runnable {
-        override fun run() {
-            callDuration = CallManager.getPrimaryCall().getCallDuration()
-            if (!isCallEnded) {
-                call_status_label.text = callDuration.getFormattedDuration()
-                callDurationHandler.postDelayed(this, 1000)
-            }
-        }
-    }
-
-    @SuppressLint("NewApi")
-    private fun addLockScreenFlags() {
-        if (isOreoMr1Plus()) {
-            setShowWhenLocked(true)
-            setTurnScreenOn(true)
-        } else {
-            window.addFlags(
-                WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED
-                    or WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON
-                    or WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD
-                    or WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON
-            )
-        }
-
-        if (isOreoPlus()) {
-            (getSystemService(Context.KEYGUARD_SERVICE) as KeyguardManager).requestDismissKeyguard(this, null)
-        } else {
-            window.addFlags(WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD)
-        }
-
-        try {
-            val powerManager = getSystemService(Context.POWER_SERVICE) as PowerManager
-            screenOnWakeLock = powerManager.newWakeLock(PowerManager.FULL_WAKE_LOCK, "com.goodwy.dialer:full_wake_lock")
-            screenOnWakeLock!!.acquire(5 * 1000L)
-        } catch (e: Exception) {
-        }
-    }
-
-    private fun enableProximitySensor() {
-        if (!config.disableProximitySensor && (proximityWakeLock == null || proximityWakeLock?.isHeld == false)) {
-            val powerManager = getSystemService(Context.POWER_SERVICE) as PowerManager
-            proximityWakeLock = powerManager.newWakeLock(PowerManager.PROXIMITY_SCREEN_OFF_WAKE_LOCK, "com.goodwy.dialer:wake_lock")
-            proximityWakeLock!!.acquire(60 * MINUTE_SECONDS * 1000L)
-        }
-    }
-
-    private fun disableProximitySensor() {
-        if (proximityWakeLock?.isHeld == true) {
-            proximityWakeLock!!.release()
-        }
-    }
-
-    private fun setActionButtonEnabled(button: LinearLayout, enabled: Boolean) {
-        button.apply {
-            isEnabled = enabled
-            alpha = if (enabled) 1.0f else LOWER_ALPHA
-        }
-    }
-
-    private fun setActionImageViewEnabled(button: ImageView, enabled: Boolean) {
-        button.apply {
-            isEnabled = enabled
-            alpha = if (enabled) 1.0f else LOWER_ALPHA
-        }
-    }
-
-    private fun getActiveButtonColor() = getProperPrimaryColor()
-
-    private fun getInactiveButtonColor() = getProperTextColor().adjustAlpha(0.10f)
-
-    private fun toggleButtonColor(view: ImageView, enabled: Boolean) {
-        /*if (enabled) {
-            val color = getActiveButtonColor()
-            view.background.applyColorFilter(color)
-            view.applyColorFilter(color.getContrastColor())
-        } else {
-            view.background.applyColorFilter(getInactiveButtonColor())
-            view.applyColorFilter(getProperBackgroundColor().getContrastColor())
-        }*/
-
-        if (config.backgroundCallScreen == TRANSPARENT_BACKGROUND || config.backgroundCallScreen == BLUR_AVATAR || config.backgroundCallScreen == AVATAR) {
-            val color = if (enabled) Color.WHITE else Color.GRAY
-            view.background.applyColorFilter(color)
-            val colorIcon = if (enabled) Color.BLACK else Color.WHITE
-            view.applyColorFilter(colorIcon)
-        }
-        view.background.alpha = if (enabled) 255 else 60
-    }
-
-    private fun checkPermission() {
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.TIRAMISU) {
-            if (!hasPermission(PERMISSION_READ_STORAGE)) {
-                config.backgroundCallScreen = BLUR_AVATAR
-                toast(R.string.no_storage_permissions)
-            }
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/activities/CallHistoryActivity.kt b/app/src/main/kotlin/com/goodwy/dialer/activities/CallHistoryActivity.kt
deleted file mode 100755
index e034187..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/activities/CallHistoryActivity.kt
+++ /dev/null
@@ -1,1126 +0,0 @@
-package com.goodwy.dialer.activities
-
-import android.annotation.SuppressLint
-import android.content.ActivityNotFoundException
-import android.content.ContentUris
-import android.content.Intent
-import android.database.Cursor
-import android.graphics.PorterDuff
-import android.graphics.drawable.ColorDrawable
-import android.graphics.drawable.LayerDrawable
-import android.os.Bundle
-import android.provider.ContactsContract
-import android.text.SpannableString
-import android.view.View
-import androidx.appcompat.content.res.AppCompatResources
-import androidx.core.graphics.drawable.DrawableCompat
-import com.goodwy.commons.dialogs.CallConfirmationDialog
-import com.goodwy.commons.dialogs.ConfirmationDialog
-import com.goodwy.commons.dialogs.RadioGroupDialog
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.*
-import com.goodwy.commons.models.RadioItem
-import com.goodwy.commons.models.contacts.Contact
-import com.goodwy.commons.models.contacts.ContactSource
-import com.goodwy.commons.models.contacts.Event
-import com.goodwy.commons.models.contacts.SocialAction
-import com.goodwy.dialer.R
-import com.goodwy.dialer.adapters.RecentCallsAdapter
-import com.goodwy.dialer.dialogs.ChooseSocialDialog
-import com.goodwy.dialer.extensions.*
-import com.goodwy.dialer.helpers.*
-import com.goodwy.dialer.interfaces.RefreshItemsListener
-import com.goodwy.dialer.models.RecentCall
-import kotlinx.android.synthetic.main.activity_call_history.*
-import kotlinx.android.synthetic.main.activity_dialpad.*
-import kotlinx.android.synthetic.main.item_view_email.*
-import kotlinx.android.synthetic.main.item_view_email.contact_email
-import kotlinx.android.synthetic.main.item_view_email.contact_email_holder
-import kotlinx.android.synthetic.main.item_view_email.contact_email_type
-import kotlinx.android.synthetic.main.item_view_email.view.*
-import kotlinx.android.synthetic.main.item_view_event.*
-import kotlinx.android.synthetic.main.item_view_event.view.*
-import kotlinx.android.synthetic.main.item_view_messengers_actions.*
-import kotlinx.android.synthetic.main.item_view_messengers_actions.contact_messenger_action_account
-import kotlinx.android.synthetic.main.item_view_messengers_actions.contact_messenger_action_call
-import kotlinx.android.synthetic.main.item_view_messengers_actions.contact_messenger_action_call_icon
-import kotlinx.android.synthetic.main.item_view_messengers_actions.contact_messenger_action_holder
-import kotlinx.android.synthetic.main.item_view_messengers_actions.contact_messenger_action_message
-import kotlinx.android.synthetic.main.item_view_messengers_actions.contact_messenger_action_message_icon
-import kotlinx.android.synthetic.main.item_view_messengers_actions.contact_messenger_action_name
-import kotlinx.android.synthetic.main.item_view_messengers_actions.contact_messenger_action_number
-import kotlinx.android.synthetic.main.item_view_messengers_actions.contact_messenger_action_video
-import kotlinx.android.synthetic.main.item_view_messengers_actions.contact_messenger_action_video_icon
-import kotlinx.android.synthetic.main.item_view_messengers_actions.view.*
-import kotlinx.android.synthetic.main.top_view.*
-import kotlin.collections.ArrayList
-
-class CallHistoryActivity : SimpleActivity(), RefreshItemsListener {
-    private var allContacts = ArrayList<Contact>()
-    private var allRecentCall = ArrayList<RecentCall>()
-    private var contact: Contact? = null
-    private var duplicateContacts = ArrayList<Contact>()
-    private var contactSources = ArrayList<ContactSource>()
-    private var privateCursor: Cursor? = null
-    private val white = 0xFFFFFFFF.toInt()
-    private val gray = 0xFFEBEBEB.toInt()
-
-    private fun getCurrentPhoneNumber() = intent.getStringExtra(CURRENT_PHONE_NUMBER) ?: ""
-
-    @SuppressLint("MissingSuperCall")
-    override fun onCreate(savedInstanceState: Bundle?) {
-        showTransparentTop = true
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_call_history)
-
-        updateMaterialActivityViews(call_history_wrapper, call_history_holder, useTransparentNavigation = false, useTopSearchMenu = false)
-        setWindowTransparency(true) { _, _, leftNavigationBarSize, rightNavigationBarSize ->
-            call_history_wrapper.setPadding(leftNavigationBarSize, 0, rightNavigationBarSize, 0)
-            updateNavigationBarColor(getProperBackgroundColor())
-        }
-        //SimpleContactsHelper(this).getAvailableContacts(false) { gotContacts(it) }
-        //SimpleContactsHelper(this).loadContactImage(getCall().photoUri, item_history_image, getCall().name)
-        //oneButton.foreground.applyColorFilter(getProperPrimaryColor())
-        //twoButton.foreground.applyColorFilter(getProperPrimaryColor())
-        //threeButton.foreground.applyColorFilter(getProperPrimaryColor())
-        //fourButton.foreground.applyColorFilter(getProperPrimaryColor())
-
-        var drawableSMS = resources.getDrawable(R.drawable.ic_messages)
-        drawableSMS = DrawableCompat.wrap(drawableSMS!!)
-        DrawableCompat.setTint(drawableSMS, getProperPrimaryColor())
-        DrawableCompat.setTintMode(drawableSMS, PorterDuff.Mode.SRC_IN)
-        oneButton.setCompoundDrawablesWithIntrinsicBounds(null, drawableSMS, null, null)
-
-        var drawableCall = resources.getDrawable(R.drawable.ic_phone_vector)
-        drawableCall = DrawableCompat.wrap(drawableCall!!)
-        DrawableCompat.setTint(drawableCall, getProperPrimaryColor())
-        DrawableCompat.setTintMode(drawableCall, PorterDuff.Mode.SRC_IN)
-        twoButton.setCompoundDrawablesWithIntrinsicBounds(null, drawableCall, null, null)
-
-        var drawableInfo = resources.getDrawable(R.drawable.ic_videocam_vector)
-        drawableInfo = DrawableCompat.wrap(drawableInfo!!)
-        DrawableCompat.setTint(drawableInfo, getProperPrimaryColor())
-        DrawableCompat.setTintMode(drawableInfo, PorterDuff.Mode.SRC_IN)
-        threeButton.setCompoundDrawablesWithIntrinsicBounds(null, drawableInfo, null, null)
-        threeButton.alpha = 0.5f
-
-        var drawableShare = resources.getDrawable(R.drawable.ic_mail_vector)
-        drawableShare = DrawableCompat.wrap(drawableShare!!)
-        DrawableCompat.setTint(drawableShare, getProperPrimaryColor())
-        DrawableCompat.setTintMode(drawableShare, PorterDuff.Mode.SRC_IN)
-        fourButton.setCompoundDrawablesWithIntrinsicBounds(null, drawableShare, null, null)
-        fourButton.alpha = 0.5f
-
-        oneButton.setTextColor(getProperPrimaryColor())
-        twoButton.setTextColor(getProperPrimaryColor())
-        threeButton.setTextColor(getProperPrimaryColor())
-        fourButton.setTextColor(getProperPrimaryColor())
-    }
-
-    @SuppressLint("MissingSuperCall")
-    override fun onResume() {
-        super.onResume()
-        call_history_placeholder_container.beGone()
-        updateTextColors(call_history_holder)
-        updateBackgroundColors()
-        refreshItems()
-        setupMenu()
-    }
-
-    private fun updateBackgroundColors(color: Int = getProperBackgroundColor()) {
-        val whiteButton = AppCompatResources.getDrawable(this, R.drawable.call_history_button_white)//resources.getColoredDrawableWithColor(R.drawable.call_history_button_white, white)
-        val whiteBackgroundHistory = AppCompatResources.getDrawable(this, R.drawable.call_history_background_white)//resources.getColoredDrawableWithColor(R.drawable.call_history_background_white, white)
-        val red = resources.getColor(R.color.red_missed)
-
-        val phoneNumber = if (getCurrentPhoneNumber().startsWith("+")) getPhoneNumberFormat(this@CallHistoryActivity, number = getCurrentPhoneNumber()) else getCurrentPhoneNumber()
-
-        call_history_number_type.beGone()
-        call_history_number_type.setTextColor(getProperTextColor())
-        call_history_number_press.setOnClickListener {
-            val call: RecentCall? = getCallList().firstOrNull()
-            if (call != null) {
-                makeCall(call)
-            }
-        }
-        call_history_number_press.setOnLongClickListener {
-            copyToClipboard(call_history_number.text.toString())
-            true
-        }
-        call_history_number.text = phoneNumber
-        call_history_number.setTextColor(getProperPrimaryColor())
-
-        if (baseConfig.backgroundColor == white) {
-            supportActionBar?.setBackgroundDrawable(ColorDrawable(0xFFf2f2f6.toInt()))
-            window.decorView.setBackgroundColor(0xFFf2f2f6.toInt())
-            window.statusBarColor = 0xFFf2f2f6.toInt()
-            window.navigationBarColor = 0xFFf2f2f6.toInt()
-        } else window.decorView.setBackgroundColor(color)
-        if (baseConfig.backgroundColor == white || baseConfig.backgroundColor == gray || (baseConfig.isUsingSystemTheme && !isUsingSystemDarkTheme())) {
-            call_history_placeholder_container.background = whiteButton
-            oneButton.background = whiteButton
-            twoButton.background = whiteButton
-            threeButton.background = whiteButton
-            fourButton.background = whiteButton
-            val paddingLeftRight = resources.getDimensionPixelOffset(R.dimen.small_margin)
-            val paddingTop = resources.getDimensionPixelOffset(R.dimen.ten_dpi)
-            val paddingBottom = resources.getDimensionPixelOffset(R.dimen.medium_margin)
-            oneButton.setPadding(paddingLeftRight, paddingTop ,paddingLeftRight ,paddingBottom)
-            twoButton.setPadding(paddingLeftRight, paddingTop ,paddingLeftRight ,paddingBottom)
-            threeButton.setPadding(paddingLeftRight, paddingTop ,paddingLeftRight ,paddingBottom)
-            fourButton.setPadding(paddingLeftRight, paddingTop ,paddingLeftRight ,paddingBottom)
-            val padding = resources.getDimensionPixelOffset(R.dimen.small_margin)
-            call_history_list.background = whiteBackgroundHistory
-            call_history_number_container.background = whiteButton
-            call_history_number_container.setPadding(padding, padding ,padding ,padding)
-            val blockcolor = if (isNumberBlocked(getCurrentPhoneNumber(), getBlockedNumbers())) { getProperPrimaryColor() } else { red }
-            blockButton.setTextColor(blockcolor)
-            blockButton.setPadding(padding, padding ,padding ,padding)
-            val blockText = if (isNumberBlocked(getCurrentPhoneNumber(), getBlockedNumbers()))
-                { resources.getString(R.string.unblock_number) } else { resources.getString(R.string.block_number)}
-            blockButton.text = blockText
-            blockButton.background = whiteButton
-        } else window.decorView.setBackgroundColor(color)
-    }
-
-    private fun setupMenu() {
-        call_history_toolbar.menu.apply {
-            updateMenuItemColors(this)
-            findItem(R.id.favorite).setOnMenuItemClickListener {
-                val newIsStarred = if (contact!!.starred == 1) 0 else 1
-                ensureBackgroundThread {
-                    val contacts = arrayListOf(contact!!)
-                    if (newIsStarred == 1) {
-                        ContactsHelper(this@CallHistoryActivity).addFavorites(contacts)
-                    } else {
-                        ContactsHelper(this@CallHistoryActivity).removeFavorites(contacts)
-                    }
-                }
-                contact!!.starred = newIsStarred
-                val favoriteIcon = getStarDrawable(contact!!.starred == 1)
-                favoriteIcon.setTint(getProperBackgroundColor().getContrastColor())
-                findItem(R.id.favorite).icon = favoriteIcon
-                true
-            }
-            findItem(R.id.delete).setOnMenuItemClickListener {
-                askConfirmRemove()
-                true
-            }
-            findItem(R.id.share).setOnMenuItemClickListener {
-                launchShare()
-                true
-            }
-        }
-
-        val color = getProperBackgroundColor().getContrastColor()
-        call_history_toolbar.setNavigationIconTint(color)
-        call_history_toolbar.setNavigationOnClickListener {
-            finish()
-        }
-    }
-
-    private fun getStarDrawable(on: Boolean) = resources.getDrawable(if (on) R.drawable.ic_star_vector else R.drawable.ic_star_outline_vector)
-
-    private fun updateBackgroundHistory(color: Int = getProperBackgroundColor()) {
-        val whiteBackgroundHistory = resources.getColoredDrawableWithColor(R.drawable.call_history_background_white, white)
-        if (baseConfig.backgroundColor == white || baseConfig.backgroundColor == gray) {
-            call_history_list.background = whiteBackgroundHistory
-        }
-    }
-
-    override fun refreshItems(callback: (() -> Unit)?) {
-        val privateCursor = this.getMyContactsCursor(favoritesOnly = false, withPhoneNumbersOnly = true)
-        val groupSubsequentCalls = false // группировать звонки?   this.config.groupSubsequentCalls ?: false
-        RecentsHelper(this).getRecentCalls(groupSubsequentCalls) { recents ->
-            ContactsHelper(this@CallHistoryActivity).getContacts { contacts ->
-                val privateContacts = MyContactsContentProvider.getContacts(this, privateCursor)
-
-                recents.filter { it.phoneNumber == it.name }.forEach { recent ->
-                    var wasNameFilled = false
-                    if (privateContacts.isNotEmpty()) {
-                        val privateContact = privateContacts.firstOrNull { it.doesContainPhoneNumber(recent.phoneNumber) }
-                        if (privateContact != null) {
-                            recent.name = privateContact.getNameToDisplay()
-                            wasNameFilled = true
-                        }
-                    }
-
-                    if (!wasNameFilled) {
-                        val contact = contacts.filter { it.phoneNumbers.isNotEmpty() }.firstOrNull { it.phoneNumbers.first().normalizedNumber == recent.phoneNumber }
-                        if (contact != null) {
-                            recent.name = contact.getNameToDisplay()
-                        }
-                    }
-                }
-
-                //allContacts = contacts
-                gotContacts(contacts)
-                allRecentCall = recents
-                callback?.invoke()
-                this.runOnUiThread {
-                    if (recents.isEmpty()) {
-                        call_history_list_container.beGone()
-                        call_history_placeholder_container.beVisible()
-                    } else {
-                        call_history_list_container.beVisible()
-                        call_history_placeholder_container.beGone()
-                        gotRecents(allRecentCall)
-                        updateBackgroundColors()
-                        updateBackgroundHistory()
-                        updateButton()
-                        ContactsHelper(this).getContactSources {
-                            contactSources = it
-                            ensureBackgroundThread {
-                                if (getContactList() != null) initContact(getContactList()!!.id)
-                            }
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    private fun gotContacts(newContacts: java.util.ArrayList<Contact>) {
-        allContacts = newContacts
-
-        val privateContacts = MyContactsContentProvider.getContacts(this, privateCursor)
-        if (privateContacts.isNotEmpty()) {
-            allContacts.addAll(privateContacts)
-            allContacts.sort()
-        }
-
-//        runOnUiThread {
-//            if (!checkDialIntent() && dialpad_input.value.isEmpty()) {
-//                dialpadValueChanged("")
-//            }
-//        }
-    }
-
-    private fun gotRecents(recents: ArrayList<RecentCall>) {
-        if (recents.isEmpty()) {
-            call_history_list_container.beGone()
-            call_history_placeholder_container.beVisible()
-        } else {
-            call_history_list_container.beVisible()
-            call_history_placeholder_container.beGone()
-
-            val currAdapter = call_history_list.adapter
-            val recent = recents.filter { it.phoneNumber == getCurrentPhoneNumber()}.toMutableList() as ArrayList<RecentCall>
-            if (currAdapter == null) {
-                RecentCallsAdapter(this as SimpleActivity, recent, call_history_list, null) {
-                    /*val recentCall = it as RecentCall
-                if (this.config.showCallConfirmation) {
-                    CallConfirmationDialog(this as SimpleActivity, recentCall.name) {
-                        this.launchCallIntent(recentCall.phoneNumber)
-                    }
-                } else {
-                    this.launchCallIntent(recentCall.phoneNumber)
-                }*/
-                }.apply {
-                    call_history_list.adapter = this
-                }
-
-                if (this.areSystemAnimationsEnabled) {
-                    call_history_list.scheduleLayoutAnimation()
-                }
-                updateBackgroundColors()
-            } else {
-                (currAdapter as RecentCallsAdapter).updateItems(recent)
-            }
-        }
-    }
-
-    private fun initContact(id: Int) {
-        var wasLookupKeyUsed = false
-        var contactId: Int = id
-        if (contactId == 0 ) {
-            val data = intent.data
-            if (data != null) {
-                val rawId = if (data.path!!.contains("lookup")) {
-                    val lookupKey = getLookupKeyFromUri(data)
-                    if (lookupKey != null) {
-                        contact = ContactsHelper(this).getContactWithLookupKey(lookupKey)
-                        //fullContact = contact
-                        wasLookupKeyUsed = true
-                    }
-
-                    getLookupUriRawId(data)
-                } else {
-                    getContactUriRawId(data)
-                }
-
-                if (rawId != -1) {
-                    contactId = rawId
-                }
-            }
-        }
-
-        if (contactId != 0 && !wasLookupKeyUsed) {
-            contact = ContactsHelper(this).getContactWithId(contactId, intent.getBooleanExtra(IS_PRIVATE, false))
-            //fullContact = contact
-
-            if (contact == null) {
-               // toast(R.string.unknown_error_occurred)
-               // finish()
-            } else {
-                getDuplicateContacts {
-                    runOnUiThread {
-                        setupFavorite()
-                        setupVideoCallActions()
-                        setupMessengersActions()
-                        setupEmails()
-                        setupEvents()
-                    }
-                }
-            }
-        } else {
-            if (contact == null) {
-              //  finish()
-            } else {
-                getDuplicateContacts {
-                    runOnUiThread {
-                        setupFavorite()
-                        setupVideoCallActions()
-                        setupMessengersActions()
-                        setupEmails()
-                        setupEvents()
-                    }
-                }
-            }
-        }
-    }
-
-    private fun setupFavorite() {
-        call_history_toolbar.menu.findItem(R.id.favorite).isVisible = true
-        val favoriteIcon = getStarDrawable(contact!!.starred == 1)
-        favoriteIcon.setTint(getProperBackgroundColor().getContrastColor())
-        call_history_toolbar.menu.findItem(R.id.favorite).icon = favoriteIcon
-    }
-
-    private fun getDuplicateContacts(callback: () -> Unit) {
-        ContactsHelper(this).getDuplicatesOfContact(contact!!, false) { contacts ->
-            ensureBackgroundThread {
-                duplicateContacts.clear()
-                val displayContactSources = getVisibleContactSources()
-                contacts.filter { displayContactSources.contains(it.source) }.forEach {
-                    val duplicate = ContactsHelper(this).getContactWithId(it.id, it.isPrivate())
-                    if (duplicate != null) {
-                        duplicateContacts.add(duplicate)
-                    }
-                }
-
-                runOnUiThread {
-                    callback()
-                }
-            }
-        }
-    }
-
-    private fun setupVideoCallActions() {
-        if (contact != null) {
-            var sources = HashMap<Contact, String>()
-            sources[contact!!] = getPublicContactSourceSync(contact!!.source, contactSources)
-
-            duplicateContacts.forEach {
-                sources[it] = getPublicContactSourceSync(it.source, contactSources)
-            }
-
-            if (sources.size > 1) {
-                sources = sources.toList().sortedBy { (key, value) -> value.toLowerCase() }.toMap() as LinkedHashMap<Contact, String>
-            }
-
-            val videoActions = arrayListOf<SocialAction>()
-            for ((key, value) in sources) {
-
-                if (value.toLowerCase() == WHATSAPP) {
-                    val actions = getSocialActions(key.id)
-                    if (actions.firstOrNull() != null) {
-                        val whatsappVideoActions = actions.filter { it.type == 1 } as ArrayList<SocialAction>
-                        videoActions.addAll(whatsappVideoActions)
-                    }
-                }
-
-                if (value.toLowerCase() == SIGNAL) {
-                    val actions = getSocialActions(key.id)
-                    if (actions.firstOrNull() != null) {
-                        val signalVideoActions = actions.filter { it.type == 1 } as ArrayList<SocialAction>
-                        videoActions.addAll(signalVideoActions)
-                    }
-                }
-
-                if (value.toLowerCase() == VIBER) {
-                    val actions = getSocialActions(key.id)
-                    if (actions.firstOrNull() != null) {
-                        val viberVideoActions = actions.filter { it.type == 1 } as ArrayList<SocialAction>
-                        videoActions.addAll(viberVideoActions)
-                    }
-                }
-
-                if (value.toLowerCase() == TELEGRAM) {
-                    val actions = getSocialActions(key.id)
-                    if (actions.firstOrNull() != null) {
-                        val telegramVideoActions = actions.filter { it.type == 1 } as ArrayList<SocialAction>
-                        videoActions.addAll(telegramVideoActions)
-                    }
-                }
-
-                if (value.toLowerCase() == THREEMA) {
-                    val actions = getSocialActions(key.id)
-                    if (actions.firstOrNull() != null) {
-                        val threemaVideoActions = actions.filter { it.type == 1 } as ArrayList<SocialAction>
-                        videoActions.addAll(threemaVideoActions)
-                    }
-                }
-            }
-
-            threeButton.alpha = if (videoActions.isNotEmpty()) 1f else 0.5f
-
-            if (videoActions.isNotEmpty()) threeButton.setOnClickListener { showVideoCallAction(videoActions) }
-            threeButton.setOnLongClickListener { toast(R.string.video_call); true; }
-        }
-    }
-
-    private fun showVideoCallAction(actions: ArrayList<SocialAction>) {
-        ensureBackgroundThread {
-            runOnUiThread {
-                if (!isDestroyed && !isFinishing) {
-                    ChooseSocialDialog(this@CallHistoryActivity, actions) { action ->
-                        Intent(Intent.ACTION_VIEW).apply {
-                            val uri = ContentUris.withAppendedId(ContactsContract.Data.CONTENT_URI, action.dataId)
-                            setDataAndType(uri, action.mimetype)
-                            flags = Intent.FLAG_ACTIVITY_CLEAR_TASK
-                            try {
-                                startActivity(this)
-                            } catch (e: SecurityException) {
-                                handlePermission(PERMISSION_CALL_PHONE) { success ->
-                                    if (success) {
-                                        startActivity(this)
-                                    } else {
-                                        toast(R.string.no_phone_call_permission)
-                                    }
-                                }
-                            } catch (e: ActivityNotFoundException) {
-                                toast(R.string.no_app_found)
-                            } catch (e: Exception) {
-                                showErrorToast(e)
-                            }
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    private fun setupMessengersActions() {
-        contact_messengers_actions_holder.removeAllViews()
-        //val contact = allContacts.first { it.phoneNumbers.any {it.normalizedNumber == getCurrentPhoneNumber()} }//getContactList()
-        if (contact != null) {
-            var sources = HashMap<Contact, String>()
-            sources[contact!!] = getPublicContactSourceSync(contact!!.source, contactSources)
-
-            duplicateContacts.forEach {
-                sources[it] = getPublicContactSourceSync(it.source, contactSources)
-            }
-
-            if (sources.size > 1) {
-                sources = sources.toList().sortedBy { (key, value) -> value.lowercase() }.toMap() as LinkedHashMap<Contact, String>
-            }
-            for ((key, value) in sources) {
-                val isLastItem = sources.keys.last()
-                layoutInflater.inflate(R.layout.item_view_messengers_actions, contact_messengers_actions_holder, false).apply {
-                    contact_messenger_action_name.text = if (value == "") getString(R.string.phone_storage) else value
-                    contact_messenger_action_account.text = " (ID:" + key.source + ")"
-                    contact_messenger_action_name.setTextColor(getProperTextColor())
-                    contact_messenger_action_account.setTextColor(getProperTextColor())
-                    contact_messenger_action_holder.setOnClickListener {
-                        if (contact_messenger_action_account.isVisible()) contact_messenger_action_account.beGone()
-                        else contact_messenger_action_account.beVisible()
-                    }
-                    contact_messenger_action_number.setTextColor(getProperPrimaryColor())
-                    contact_messengers_actions_holder.addView(this)
-
-                    val whiteButton = AppCompatResources.getDrawable(this@CallHistoryActivity, R.drawable.call_history_button_white)
-                    if (baseConfig.backgroundColor == white || baseConfig.backgroundColor == gray) {
-                        contact_messengers_actions_holder.background = whiteButton
-                        val padding = resources.getDimensionPixelOffset(R.dimen.small_margin)
-                        contact_messengers_actions_holder.setPadding(padding, padding ,padding ,padding)
-                    }
-
-                    contact_messenger_action_message_icon.background.setTint(getProperTextColor())
-                    contact_messenger_action_message_icon.background.alpha = 40
-                    contact_messenger_action_message_icon.setColorFilter(getProperPrimaryColor())
-                    contact_messenger_action_call_icon.background.setTint(getProperTextColor())
-                    contact_messenger_action_call_icon.background.alpha = 40
-                    contact_messenger_action_call_icon.setColorFilter(getProperPrimaryColor())
-                    contact_messenger_action_video_icon.background.setTint(getProperTextColor())
-                    contact_messenger_action_video_icon.background.alpha = 40
-                    contact_messenger_action_video_icon.setColorFilter(getProperPrimaryColor())
-                    contact_messenger_action_holder.divider_contact_messenger_action.setBackgroundColor(getProperTextColor())
-                    contact_messenger_action_holder.divider_contact_messenger_action.beGoneIf(isLastItem == key)
-
-                    if (value.toLowerCase() == WHATSAPP) {
-                        val actions = getSocialActions(key.id)
-                        if (actions.firstOrNull() != null) {
-                            val plus = if (actions.firstOrNull()!!.label.contains("+", ignoreCase = true)) "+" else ""
-                            val number = plus + actions.firstOrNull()!!.label.filter { it.isDigit() }
-                            contact_messenger_action_number.text = number
-                            copyOnLongClick(number)
-                            contact_messengers_actions_holder.beVisible()
-                            contact_messenger_action_holder.beVisible()
-                            val callActions = actions.filter { it.type == 0 } as ArrayList<SocialAction>
-                            val videoActions = actions.filter { it.type == 1 } as ArrayList<SocialAction>
-                            val messageActions = actions.filter { it.type == 2 } as ArrayList<SocialAction>
-                            if (messageActions.isNotEmpty()) contact_messenger_action_message.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(messageActions)
-                                }
-                            }
-                            if (callActions.isNotEmpty()) contact_messenger_action_call.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(callActions)
-                                }
-                            }
-                            if (videoActions.isNotEmpty()) contact_messenger_action_video.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(videoActions)
-                                }
-                            }
-                        }
-                    }
-
-                    if (value.toLowerCase() == SIGNAL) {
-                        val actions = getSocialActions(key.id)
-                        if (actions.firstOrNull() != null) {
-                            val plus = if (actions.firstOrNull()!!.label.contains("+", ignoreCase = true)) "+" else ""
-                            val number = plus + actions.firstOrNull()!!.label.filter { it.isDigit() }
-                            contact_messenger_action_number.text = number
-                            copyOnLongClick(number)
-                            contact_messengers_actions_holder.beVisible()
-                            contact_messenger_action_holder.beVisible() //hide not messengers
-                            val callActions = actions.filter { it.type == 0 } as ArrayList<SocialAction>
-                            val videoActions = actions.filter { it.type == 1 } as ArrayList<SocialAction>
-                            val messageActions = actions.filter { it.type == 2 } as ArrayList<SocialAction>
-                            if (messageActions.isNotEmpty()) contact_messenger_action_message.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(messageActions)
-                                }
-                            }
-                            if (callActions.isNotEmpty()) contact_messenger_action_call.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(callActions)
-                                }
-                            }
-                            if (videoActions.isNotEmpty()) contact_messenger_action_video.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(videoActions)
-                                }
-                            }
-                        }
-                    }
-
-                    if (value.toLowerCase() == VIBER) {
-                        val actions = getSocialActions(key.id)
-                        if (actions.firstOrNull() != null) {
-                            val plus = if (actions.firstOrNull()!!.label.contains("+", ignoreCase = true)) "+" else ""
-                            val number = plus + actions.firstOrNull()!!.label.filter { it.isDigit() }
-                            contact_messenger_action_number.text = number
-                            copyOnLongClick(number)
-                            contact_messengers_actions_holder.beVisible()
-                            contact_messenger_action_holder.beVisible()
-                            val callActions = actions.filter { it.type == 0 } as ArrayList<SocialAction>
-                            val videoActions = actions.filter { it.type == 1 } as ArrayList<SocialAction>
-                            val messageActions = actions.filter { it.type == 2 } as ArrayList<SocialAction>
-                            contact_messenger_action_number.beGoneIf(contact!!.phoneNumbers.size > 1 && messageActions.isEmpty())
-                            if (messageActions.isNotEmpty()) contact_messenger_action_message.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(messageActions)
-                                }
-                            }
-                            if (callActions.isNotEmpty()) contact_messenger_action_call.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(callActions)
-                                }
-                            }
-                            if (videoActions.isNotEmpty()) contact_messenger_action_video.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(videoActions)
-                                }
-                            }
-                        }
-                    }
-
-                    if (value.toLowerCase() == TELEGRAM) {
-                        val actions = getSocialActions(key.id)
-                        if (actions.firstOrNull() != null) {
-                            val plus = if (actions.firstOrNull()!!.label.contains("+", ignoreCase = true)) "+" else ""
-                            val number = plus + actions.firstOrNull()!!.label.filter { it.isDigit() }
-                            contact_messenger_action_number.text = number
-                            copyOnLongClick(number)
-                            contact_messengers_actions_holder.beVisible()
-                            contact_messenger_action_holder.beVisible()
-                            val callActions = actions.filter { it.type == 0 } as ArrayList<SocialAction>
-                            val videoActions = actions.filter { it.type == 1 } as ArrayList<SocialAction>
-                            val messageActions = actions.filter { it.type == 2 } as ArrayList<SocialAction>
-                            if (messageActions.isNotEmpty()) contact_messenger_action_message.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    //startMessengerAction(messageActions)
-                                    showMessengerAction(messageActions)
-                                }
-                            }
-                            if (callActions.isNotEmpty()) contact_messenger_action_call.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    //startMessengerAction(callActions)
-                                    showMessengerAction(callActions)
-                                }
-                            }
-                            if (videoActions.isNotEmpty()) contact_messenger_action_video.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    //startMessengerAction(videoActions)
-                                    showMessengerAction(videoActions)
-                                }
-                            }
-                        }
-                    }
-
-                    if (value.toLowerCase() == THREEMA) {
-                        val actions = getSocialActions(key.id)
-                        if (actions.firstOrNull() != null) {
-                            val plus = if (actions.firstOrNull()!!.label.contains("+", ignoreCase = true)) "+" else ""
-                            val number = plus + actions.firstOrNull()!!.label.filter { it.isDigit() }
-                            contact_messenger_action_number.text = number
-                            copyOnLongClick(number)
-                            contact_messengers_actions_holder.beVisible()
-                            contact_messenger_action_holder.beVisible()
-                            val callActions = actions.filter { it.type == 0 } as ArrayList<SocialAction>
-                            val videoActions = actions.filter { it.type == 1 } as ArrayList<SocialAction>
-                            val messageActions = actions.filter { it.type == 2 } as ArrayList<SocialAction>
-                            if (messageActions.isNotEmpty()) contact_messenger_action_message.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(messageActions)
-                                }
-                            }
-                            if (callActions.isNotEmpty()) contact_messenger_action_call.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(callActions)
-                                }
-                            }
-                            if (videoActions.isNotEmpty()) contact_messenger_action_video.apply {
-                                beVisible()
-                                setOnClickListener {
-                                    showMessengerAction(videoActions)
-                                }
-                            }
-                        }
-                    }
-                }
-            }
-            //contact_messengers_actions_holder.beVisible()
-        } else {
-            contact_messengers_actions_holder.beGone()
-        }
-    }
-
-    private fun showMessengerAction(actions: ArrayList<SocialAction>) {
-        ensureBackgroundThread {
-            runOnUiThread {
-                if (!isDestroyed && !isFinishing) {
-                    if (actions.size > 1) {
-//                        ChooseSocialDialog(this@ViewContactActivity, actions) { action ->
-//                            Intent(Intent.ACTION_VIEW).apply {
-//                                val uri = ContentUris.withAppendedId(ContactsContract.Data.CONTENT_URI, action.dataId)
-//                                setDataAndType(uri, action.mimetype)
-//                                flags = Intent.FLAG_ACTIVITY_CLEAR_TASK
-//                                try {
-//                                    startActivity(this)
-//                                } catch (e: SecurityException) {
-//                                    handlePermission(PERMISSION_CALL_PHONE) { success ->
-//                                        if (success) {
-//                                            startActivity(this)
-//                                        } else {
-//                                            toast(R.string.no_phone_call_permission)
-//                                        }
-//                                    }
-//                                } catch (e: ActivityNotFoundException) {
-//                                    toast(R.string.no_app_found)
-//                                } catch (e: Exception) {
-//                                    showErrorToast(e)
-//                                }
-//                            }
-//                        }
-                    } else {
-                        val action = actions.first()
-                        Intent(Intent.ACTION_VIEW).apply {
-                            val uri = ContentUris.withAppendedId(ContactsContract.Data.CONTENT_URI, action.dataId)
-                            setDataAndType(uri, action.mimetype)
-                            flags = Intent.FLAG_ACTIVITY_CLEAR_TASK
-                            try {
-                                startActivity(this)
-                            } catch (e: SecurityException) {
-                                handlePermission(PERMISSION_CALL_PHONE) { success ->
-                                    if (success) {
-                                        startActivity(this)
-                                    } else {
-                                        toast(R.string.no_phone_call_permission)
-                                    }
-                                }
-                            } catch (e: ActivityNotFoundException) {
-                                toast(R.string.no_app_found)
-                            } catch (e: Exception) {
-                                showErrorToast(e)
-                            }
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    // a contact cannot have different emails per contact source. Such contacts are handled as separate ones, not duplicates of each other
-    private fun setupEmails() {
-        contact_emails_holder.removeAllViews()
-        val emails = contact!!.emails
-        if (emails.isNotEmpty()) {
-
-            fourButton.apply {
-                alpha = 1f
-                setOnClickListener {
-                    if (emails.size == 1) sendEmailIntent(emails.first().value)
-                    else {
-                        val items = java.util.ArrayList<RadioItem>()
-                        emails.forEachIndexed { index, email ->
-                            items.add(RadioItem(index, email.value))
-                        }
-
-                        RadioGroupDialog(this@CallHistoryActivity, items) {
-                            sendEmailIntent(emails[it as Int].value)
-                        }
-                    }
-                }
-                setOnLongClickListener { toast(R.string.email); true; }
-            }
-
-            val isFirstItem = emails.first()
-            val isLastItem = emails.last()
-            emails.forEach {
-                layoutInflater.inflate(R.layout.item_view_email, contact_emails_holder, false).apply {
-                    val email = it
-                    contact_emails_holder.addView(this)
-                    contact_email.text = email.value
-                    contact_email_type.text = getEmailTypeText(email.type, email.label)
-                    contact_email_type.setTextColor(getProperTextColor())
-                    copyOnLongClick(email.value)
-
-                    setOnClickListener {
-                        sendEmailIntent(email.value)
-                    }
-
-                    val whiteButton = AppCompatResources.getDrawable(this@CallHistoryActivity, R.drawable.call_history_button_white)
-                    if (baseConfig.backgroundColor == white || baseConfig.backgroundColor == gray) {
-                        contact_emails_holder.background = whiteButton
-                        val padding = resources.getDimensionPixelOffset(R.dimen.small_margin)
-                        contact_emails_holder.setPadding(padding, padding ,padding ,padding)
-                    }
-
-                    contact_email_holder.contact_email_icon.beVisibleIf(isFirstItem == email)
-                    contact_email_holder.contact_email_icon.setColorFilter(getProperTextColor())
-                    contact_email_holder.divider_contact_email.setBackgroundColor(getProperTextColor())
-                    contact_email_holder.divider_contact_email.beGoneIf(isLastItem == email)
-                    contact_email_holder.contact_email.setTextColor(getProperPrimaryColor())
-                }
-            }
-            contact_emails_holder.beVisible()
-        } else {
-            contact_emails_holder.beGone()
-        }
-    }
-
-    private fun getEmailTypeText(type: Int, label: String): String {
-        return if (type == ContactsContract.CommonDataKinds.BaseTypes.TYPE_CUSTOM) {
-            label
-        } else {
-            getString(
-                when (type) {
-                    ContactsContract.CommonDataKinds.Email.TYPE_HOME -> R.string.home
-                    ContactsContract.CommonDataKinds.Email.TYPE_WORK -> R.string.work
-                    ContactsContract.CommonDataKinds.Email.TYPE_MOBILE -> R.string.mobile
-                    else -> R.string.other
-                }
-            )
-        }
-    }
-
-    private fun setupEvents() {
-        if (contact != null) {
-            var events = contact!!.events.toMutableSet() as LinkedHashSet<Event>
-
-            duplicateContacts.forEach {
-                events.addAll(it.events)
-            }
-
-            events = events.sortedBy { it.type }.toMutableSet() as LinkedHashSet<Event>
-            allContacts.firstOrNull()!!.events = events.toMutableList() as ArrayList<Event>
-            contact_events_holder.removeAllViews()
-
-            if (events.isNotEmpty()) {
-                val isFirstItem = events.first()
-                val isLastItem = events.last()
-                events.forEach {
-                    layoutInflater.inflate(R.layout.item_view_event, contact_events_holder, false).apply {
-                        val event = it
-                        contact_events_holder.addView(this)
-                        it.value.getDateTimeFromDateString(true, contact_event)
-                        contact_event_type.setText(getEventTextId(it.type))
-                        contact_event_type.setTextColor(getProperTextColor())
-                        copyOnLongClick(it.value)
-
-                        val whiteButton = AppCompatResources.getDrawable(this@CallHistoryActivity, R.drawable.call_history_button_white)
-                        if (baseConfig.backgroundColor == white || baseConfig.backgroundColor == gray) {
-                            contact_events_holder.background = whiteButton
-                            val padding = resources.getDimensionPixelOffset(R.dimen.small_margin)
-                            contact_events_holder.setPadding(padding, padding, padding, padding)
-                        }
-
-                        contact_event_holder.contact_event_icon.beVisibleIf(isFirstItem == event)
-                        contact_event_holder.contact_event_icon.setColorFilter(getProperTextColor())
-                        contact_event_holder.divider_contact_event.setBackgroundColor(getProperTextColor())
-                        contact_event_holder.divider_contact_event.beGoneIf(isLastItem == event)
-                        contact_event_holder.contact_event.setTextColor(getProperPrimaryColor())
-                    }
-                }
-                contact_events_holder.beVisible()
-            } else {
-                contact_events_holder.beGone()
-            }
-        }
-    }
-
-    private fun getEventTextId(type: Int) = when (type) {
-        ContactsContract.CommonDataKinds.Event.TYPE_ANNIVERSARY -> R.string.anniversary
-        ContactsContract.CommonDataKinds.Event.TYPE_BIRTHDAY -> R.string.birthday
-        else -> R.string.other
-    }
-
-    private fun updateButton() {
-        val call: RecentCall? = getCallList().firstOrNull()
-        if (call != null) {
-
-            val contact = getContactList()
-            if (contact != null) {
-
-                if (contact.phoneNumbers.firstOrNull { it.normalizedNumber == getCurrentPhoneNumber() } != null) {
-                    call_history_number_type_container.beVisible()
-                    call_history_number_type.apply {
-                        beVisible()
-                        //text = contact.phoneNumbers.filter { it.normalizedNumber == getCurrentPhoneNumber()}.toString()
-                        val phoneNumberType = contact.phoneNumbers.first { it.normalizedNumber == getCurrentPhoneNumber() }.type
-                        val phoneNumberLabel = contact.phoneNumbers.first { it.normalizedNumber == getCurrentPhoneNumber() }.label
-                        text = getPhoneNumberTypeText(phoneNumberType, phoneNumberLabel)
-                    }
-                    call_history_favorite_icon.apply {
-                        beVisibleIf(contact.phoneNumbers.first { it.normalizedNumber == getCurrentPhoneNumber() }.isPrimary)
-                        applyColorFilter(getProperTextColor())
-                    }
-                }
-
-                arrayOf(
-                    call_history_image, call_history_name
-                ).forEach {
-                    it.setOnClickListener { viewContactInfo(contact) }
-                }
-                call_history_image.setOnLongClickListener { toast(R.string.contact_details); true; }
-            } else {
-                val country = if (getCurrentPhoneNumber().startsWith("+")) getCountryByNumber(this, getCurrentPhoneNumber()) else ""
-                if (country != "") {
-                    call_history_number_type_container.beVisible()
-                    call_history_number_type.apply {
-                        beVisible()
-                        text = country
-                    }
-                }
-
-                arrayOf(
-                    call_history_image, call_history_name
-                ).forEach {
-                    it.setOnClickListener {
-                        Intent().apply {
-                            action = Intent.ACTION_INSERT_OR_EDIT
-                            type = "vnd.android.cursor.item/contact"
-                            putExtra(KEY_PHONE, getCurrentPhoneNumber())
-                            launchActivityIntent(this)
-                        }
-                    }
-                }
-                call_history_image.setOnLongClickListener { toast(R.string.add_contact); true; }
-            }
-
-            if (call.phoneNumber == call.name || isDestroyed || isFinishing) {
-                //SimpleContactsHelper(this).loadContactImage(call.photoUri, call_history_image, call.name, letter = false)
-                val drawable = resources.getDrawable(R.drawable.placeholder_contact)
-                if (baseConfig.useColoredContacts) {
-                    val color = letterBackgroundColors[Math.abs(call.name.hashCode()) % letterBackgroundColors.size].toInt()
-                    (drawable as LayerDrawable).findDrawableByLayerId(R.id.placeholder_contact_background).applyColorFilter(color)
-                }
-                call_history_image.setImageDrawable(drawable)
-            } else {
-                SimpleContactsHelper(this.applicationContext).loadContactImage(call.photoUri, call_history_image, call.name)
-            }
-
-            call_history_placeholder_container.beGone()
-
-            var nameToShow = SpannableString(call.name)
-            if (nameToShow.startsWith("+")) nameToShow = SpannableString(getPhoneNumberFormat(this, number = nameToShow.toString()))
-            call_history_name.apply {
-                text = nameToShow
-                setTextColor(getProperTextColor())
-                setOnLongClickListener {
-                    copyToClipboard(nameToShow.toString())
-                    true
-                }
-            }
-
-            oneButton.apply {
-                setOnClickListener {
-                    launchSendSMSIntent(call.phoneNumber)
-                }
-                setOnLongClickListener { toast(R.string.send_sms); true; }
-            }
-
-            twoButton.apply {
-                setOnClickListener {
-                    makeCall(call)
-                }
-                setOnLongClickListener { toast(R.string.call); true; }
-            }
-
-            blockButton.apply {
-                setOnClickListener {
-                    askConfirmBlock()
-                }
-            }
-        } else {
-            call_history_list_container.beGone()
-            call_history_placeholder_container.beVisible()
-        }
-    }
-
-    private fun getItemCount() = getSelectedItems().size
-
-    private fun getSelectedItems() = allRecentCall.filter { getCurrentPhoneNumber().contains(it.phoneNumber) } as ArrayList<RecentCall>
-
-    private fun getCallList() = allRecentCall.filter { it.phoneNumber == getCurrentPhoneNumber()}.toMutableList() as ArrayList<RecentCall>
-
-    private fun getContactList() = allContacts.firstOrNull { it.doesContainPhoneNumber(getCurrentPhoneNumber()) }
-
-    private fun makeCall(call: RecentCall) {
-        if (config.showCallConfirmation) {
-            CallConfirmationDialog(this as SimpleActivity, call.name) {
-                launchCallIntent(call.phoneNumber)
-            }
-        } else {
-            launchCallIntent(call.phoneNumber)
-        }
-    }
-
-    private fun askConfirmBlock() {
-        val baseString = if (isNumberBlocked(getCurrentPhoneNumber(), getBlockedNumbers())) {
-            R.string.unblock_confirmation
-        } else { R.string.block_confirmation }
-        val question = String.format(resources.getString(baseString), getCurrentPhoneNumber())
-
-        ConfirmationDialog(this, question) {
-            blockNumbers()
-        }
-    }
-
-    private fun blockNumbers() {
-        val red = resources.getColor(R.color.red_missed)
-        //ensureBackgroundThread {
-        runOnUiThread {
-            if (isNumberBlocked(getCurrentPhoneNumber(), getBlockedNumbers())) {
-                deleteBlockedNumber(getCurrentPhoneNumber())
-                blockButton.text = getString(R.string.block_number)
-                blockButton.setTextColor(red)
-            } else {
-                addBlockedNumber(getCurrentPhoneNumber())
-                blockButton.text = getString(R.string.unblock_number)
-                blockButton.setTextColor(getProperPrimaryColor())
-            }
-        }
-    }
-
-    private fun askConfirmRemove() {
-        val message = if ((call_history_list?.adapter as? RecentCallsAdapter)?.getSelectedItems()!!.isEmpty()) {
-            getString(R.string.clear_history_confirmation)
-        } else getString(R.string.remove_confirmation)
-        ConfirmationDialog(this, message) {
-            handlePermission(PERMISSION_WRITE_CALL_LOG) {
-                removeRecents()
-            }
-        }
-    }
-
-    private fun removeRecents() {
-        if (getCurrentPhoneNumber().isEmpty()) {
-            return
-        }
-
-        val callsToRemove = getSelectedItems()
-        //val positions = getSelectedItemPositions()
-        val idsToRemove = ArrayList<Int>()
-        callsToRemove.forEach {
-            idsToRemove.add(it.id)
-            it.neighbourIDs.mapTo(idsToRemove, { it })
-        }
-
-        RecentsHelper(this).removeRecentCalls(idsToRemove) {
-            //allRecentCall.removeAll(callsToRemove)
-            runOnUiThread {
-                if (allRecentCall.isEmpty()) {
-                    refreshItems()
-                    finishActMode()
-                } else {
-                    refreshItems()//(call_history_list?.adapter as? RecentCallsAdapter)?.removePositions(positions)
-                }
-            }
-        }
-    }
-
-    private fun finishActMode() {
-        (call_history_list?.adapter as? RecentCallsAdapter)?.finishActMode()
-    }
-
-    private fun viewContactInfo(contact: Contact) {
-        this.startContactDetailsIntent(contact)
-    }
-
-    private fun launchShare() {
-        val text = getCurrentPhoneNumber()
-        Intent().apply {
-            action = Intent.ACTION_SEND
-            putExtra(Intent.EXTRA_SUBJECT, getCurrentPhoneNumber())
-            putExtra(Intent.EXTRA_TEXT, text)
-            type = "text/plain"
-            startActivity(Intent.createChooser(this, getString(R.string.invite_via)))
-        }
-    }
-
-    private fun View.copyOnLongClick(value: String) {
-        setOnLongClickListener {
-            copyToClipboard(value)
-            true
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/activities/ConferenceActivity.kt b/app/src/main/kotlin/com/goodwy/dialer/activities/ConferenceActivity.kt
deleted file mode 100755
index 904ef62..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/activities/ConferenceActivity.kt
+++ /dev/null
@@ -1,26 +0,0 @@
-package com.goodwy.dialer.activities
-
-import android.os.Bundle
-import com.goodwy.commons.helpers.NavigationIcon
-import com.goodwy.dialer.R
-import com.goodwy.dialer.adapters.ConferenceCallsAdapter
-import com.goodwy.dialer.helpers.CallManager
-import kotlinx.android.synthetic.main.activity_conference.*
-
-class ConferenceActivity : SimpleActivity() {
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        isMaterialActivity = true
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_conference)
-
-        updateMaterialActivityViews(conference_coordinator, conference_list, useTransparentNavigation = true, useTopSearchMenu = false)
-        setupMaterialScrollListener(conference_list, conference_toolbar)
-        conference_list.adapter = ConferenceCallsAdapter(this, conference_list, ArrayList(CallManager.getConferenceCalls())) {}
-    }
-
-    override fun onResume() {
-        super.onResume()
-        setupToolbar(conference_toolbar, NavigationIcon.Arrow)
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/activities/DialerActivity.kt b/app/src/main/kotlin/com/goodwy/dialer/activities/DialerActivity.kt
deleted file mode 100755
index 072faa8..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/activities/DialerActivity.kt
+++ /dev/null
@@ -1,88 +0,0 @@
-package com.goodwy.dialer.activities
-
-import android.annotation.SuppressLint
-import android.content.Intent
-import android.content.pm.ActivityInfo
-import android.net.Uri
-import android.os.Build
-import android.os.Bundle
-import android.provider.Settings
-import android.telecom.TelecomManager
-import android.widget.Toast
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.REQUEST_CODE_SET_DEFAULT_DIALER
-import com.goodwy.dialer.R
-import com.goodwy.dialer.extensions.getHandleToUse
-
-class DialerActivity : SimpleActivity() {
-    private var callNumber: Uri? = null
-
-    @SuppressLint("SourceLockedOrientationActivity")
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-
-        if (Build.VERSION.SDK_INT != Build.VERSION_CODES.O) {
-            requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT
-        }
-
-        if (intent.action == Intent.ACTION_CALL && intent.data != null) {
-            callNumber = intent.data
-
-            // make sure Simple Dialer is the default Phone app before initiating an outgoing call
-            if (!isDefaultDialer()) {
-                launchSetDefaultDialerIntent()
-            } else {
-                initOutgoingCall()
-            }
-        } else {
-            toast(R.string.unknown_error_occurred)
-            finish()
-        }
-    }
-
-    @SuppressLint("MissingPermission")
-    private fun initOutgoingCall() {
-        try {
-            if (isNumberBlocked(callNumber.toString().replace("tel:", ""), getBlockedNumbers())) {
-                toast(R.string.calling_blocked_number)
-                finish()
-                return
-            }
-
-            getHandleToUse(intent, callNumber.toString()) { handle ->
-                if (handle != null) {
-                    Bundle().apply {
-                        putParcelable(TelecomManager.EXTRA_PHONE_ACCOUNT_HANDLE, handle)
-                        putBoolean(TelecomManager.EXTRA_START_CALL_WITH_VIDEO_STATE, false)
-                        putBoolean(TelecomManager.EXTRA_START_CALL_WITH_SPEAKERPHONE, false)
-                        telecomManager.placeCall(callNumber, this)
-                    }
-                }
-                finish()
-            }
-        } catch (e: Exception) {
-            showErrorToast(e)
-            finish()
-        }
-    }
-
-    override fun onActivityResult(requestCode: Int, resultCode: Int, resultData: Intent?) {
-        super.onActivityResult(requestCode, resultCode, resultData)
-        if (requestCode == REQUEST_CODE_SET_DEFAULT_DIALER) {
-            if (!isDefaultDialer()) {
-                try {
-                    hideKeyboard()
-                    Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS).apply {
-                        data = Uri.parse("package:$packageName")
-                        startActivity(this)
-                    }
-                    toast(R.string.default_phone_app_prompt, Toast.LENGTH_LONG)
-                } catch (ignored: Exception) {
-                }
-                finish()
-            } else {
-                initOutgoingCall()
-            }
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/activities/DialpadActivity.kt b/app/src/main/kotlin/com/goodwy/dialer/activities/DialpadActivity.kt
deleted file mode 100755
index eb00624..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/activities/DialpadActivity.kt
+++ /dev/null
@@ -1,587 +0,0 @@
-package com.goodwy.dialer.activities
-
-import android.animation.Animator
-import android.annotation.SuppressLint
-import android.annotation.TargetApi
-import android.content.Intent
-import android.database.Cursor
-import android.net.Uri
-import android.os.Build
-import android.os.Bundle
-import android.os.Handler
-import android.os.Looper
-import android.provider.Telephony.Sms.Intents.SECRET_CODE_ACTION
-import android.telephony.PhoneNumberUtils
-import android.telephony.TelephonyManager
-import android.util.TypedValue
-import android.view.KeyEvent
-import android.view.MotionEvent
-import android.view.View
-import android.view.ViewConfiguration
-import androidx.core.view.isVisible
-import com.reddit.indicatorfastscroll.FastScrollItemIndicator
-import com.goodwy.commons.dialogs.CallConfirmationDialog
-import com.goodwy.commons.dialogs.RadioGroupDialog
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.*
-import com.goodwy.commons.models.RadioItem
-import com.goodwy.commons.models.contacts.Contact
-import com.goodwy.dialer.R
-import com.goodwy.dialer.adapters.ContactsAdapter
-import com.goodwy.dialer.extensions.*
-import com.goodwy.dialer.helpers.DIALPAD_TONE_LENGTH_MS
-import com.goodwy.dialer.helpers.ToneGeneratorHelper
-import com.goodwy.dialer.models.SpeedDial
-import kotlinx.android.synthetic.main.activity_dialpad.*
-import kotlinx.android.synthetic.main.activity_dialpad.dialpad_holder
-import kotlinx.android.synthetic.main.dialpad.*
-import java.util.*
-import kotlin.math.roundToInt
-import android.animation.AnimatorListenerAdapter
-import androidx.recyclerview.widget.RecyclerView
-import me.grantland.widget.AutofitHelper
-
-class DialpadActivity : SimpleActivity() {
-    private var allContacts = ArrayList<Contact>()
-    private var speedDialValues = ArrayList<SpeedDial>()
-    private val russianCharsMap = HashMap<Char, Int>()
-    private var hasRussianLocale = false
-    private var privateCursor: Cursor? = null
-    private var toneGeneratorHelper: ToneGeneratorHelper? = null
-    private val longPressTimeout = ViewConfiguration.getLongPressTimeout().toLong()
-    private val longPressHandler = Handler(Looper.getMainLooper())
-    private val pressedKeys = mutableSetOf<Char>()
-    private var hasBeenScrolled = false
-
-    @SuppressLint("MissingSuperCall")
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_dialpad)
-        hasRussianLocale = Locale.getDefault().language == "ru"
-
-        updateMaterialActivityViews(dialpad_coordinator, dialpad_holder, useTransparentNavigation = true, useTopSearchMenu = false)
-        //setupMaterialScrollListener(dialpad_list, dialpad_toolbar)
-        updateNavigationBarColor(getProperBackgroundColor())
-
-        if (checkAppSideloading()) {
-            return
-        }
-
-        if (config.hideDialpadNumbers) {
-            dialpad_1_holder.isVisible = false
-            dialpad_2_holder.isVisible = false
-            dialpad_3_holder.isVisible = false
-            dialpad_4_holder.isVisible = false
-            dialpad_5_holder.isVisible = false
-            dialpad_6_holder.isVisible = false
-            dialpad_7_holder.isVisible = false
-            dialpad_8_holder.isVisible = false
-            dialpad_9_holder.isVisible = false
-            //dialpad_plus_holder.isVisible = true
-            dialpad_0_holder.visibility = View.INVISIBLE
-        }
-
-        /*arrayOf(
-            dialpad_0_holder,
-            dialpad_1_holder,
-            dialpad_2_holder,
-            dialpad_3_holder,
-            dialpad_4_holder,
-            dialpad_5_holder,
-            dialpad_6_holder,
-            dialpad_7_holder,
-            dialpad_8_holder,
-            dialpad_9_holder,
-            //dialpad_plus_holder,
-            dialpad_asterisk_holder,
-            dialpad_hashtag_holder
-        ).forEach {
-            it.background = ResourcesCompat.getDrawable(resources, R.drawable.pill_background, theme)
-            it.background?.alpha = LOWER_ALPHA_INT
-        }*/
-
-        speedDialValues = config.getSpeedDialValues()
-        privateCursor = getMyContactsCursor(favoritesOnly = false, withPhoneNumbersOnly = true)
-
-        toneGeneratorHelper = ToneGeneratorHelper(this, DIALPAD_TONE_LENGTH_MS)
-
-        if (hasRussianLocale) {
-            initRussianChars()
-            dialpad_2_letters.append("\nАБВГ")
-            dialpad_3_letters.append("\nДЕЁЖЗ")
-            dialpad_4_letters.append("\nИЙКЛ")
-            dialpad_5_letters.append("\nМНОП")
-            dialpad_6_letters.append("\nРСТУ")
-            dialpad_7_letters.append("\nФХЦЧ")
-            dialpad_8_letters.append("\nШЩЪЫ")
-            dialpad_9_letters.append("\nЬЭЮЯ")
-
-            val fontSizeRu = getTextSize() - 12f//resources.getDimension(R.dimen.small_text_size)
-            arrayOf(
-                dialpad_2_letters, dialpad_3_letters, dialpad_4_letters, dialpad_5_letters, dialpad_6_letters, dialpad_7_letters, dialpad_8_letters,
-                dialpad_9_letters
-            ).forEach {
-                it.setTextSize(TypedValue.COMPLEX_UNIT_PX, fontSizeRu)
-            }
-        }
-
-        dialpad_input.onTextChangeListener { dialpadValueChanged(it) }
-        dialpad_input.requestFocus()
-        AutofitHelper.create(dialpad_input)
-        ContactsHelper(this).getContacts{ gotContacts(it) }
-        dialpad_input.disableKeyboard()
-
-//        ContactsHelper(this).getContacts { allContacts ->
-//            val contactsWithNumber = allContacts.filter { it.phoneNumbers.isNotEmpty() }.toMutableList() as ArrayList<Contact>
-//            gotContacts(contactsWithNumber)
-//        }
-        ContactsHelper(this).getContacts(showOnlyContactsWithNumbers = true) { allContacts ->
-            gotContacts(allContacts)
-        }
-    }
-
-    private fun initLetters() {
-        if (config.hideDialpadLetters) {
-            arrayOf(
-                dialpad_2_letters, dialpad_3_letters, dialpad_4_letters, dialpad_5_letters, dialpad_6_letters, dialpad_7_letters, dialpad_8_letters,
-                dialpad_9_letters
-            ).forEach {
-                it.beGone()
-            }
-        } else {
-            arrayOf(
-                dialpad_2_letters, dialpad_3_letters, dialpad_4_letters, dialpad_5_letters, dialpad_6_letters, dialpad_7_letters, dialpad_8_letters,
-                dialpad_9_letters
-            ).forEach {
-                it.beVisible()
-            }
-
-            val fontSize = getTextSize() - 8f//resources.getDimension(R.dimen.small_text_size)
-            arrayOf(
-                dialpad_2_letters, dialpad_3_letters, dialpad_4_letters, dialpad_5_letters, dialpad_6_letters, dialpad_7_letters, dialpad_8_letters,
-                dialpad_9_letters
-            ).forEach {
-                it.setTextSize(TypedValue.COMPLEX_UNIT_PX, fontSize)
-            }
-        }
-
-        //dialpad_holder.setOnClickListener { dialpad_input.setText(getTextFromClipboard()); true }
-        setupCharClick(dialpad_1_holder, '1')
-        setupCharClick(dialpad_2_holder, '2')
-        setupCharClick(dialpad_3_holder, '3')
-        setupCharClick(dialpad_4_holder, '4')
-        setupCharClick(dialpad_5_holder, '5')
-        setupCharClick(dialpad_6_holder, '6')
-        setupCharClick(dialpad_7_holder, '7')
-        setupCharClick(dialpad_8_holder, '8')
-        setupCharClick(dialpad_9_holder, '9')
-        setupCharClick(dialpad_0_holder, '0')
-        //setupCharClick(dialpad_plus_holder, '+', longClickable = false)
-        setupCharClick(dialpad_asterisk_holder, '*', longClickable = false)
-        setupCharClick(dialpad_hashtag_holder, '#', longClickable = false)
-        dialpad_down_holder.setOnClickListener { dialpadHide() }
-        dialpad_add_number.setOnClickListener { addNumberToContact() }
-        dialpad_clear_char_holder.setOnClickListener { clearChar(it) }
-        dialpad_clear_char_holder.setOnLongClickListener { clearInput(); true }
-        dialpad_call_button.setOnClickListener { initCall(dialpad_input.value, 0) }
-        dialpad_call_button.setOnLongClickListener {
-            if (dialpad_input.value.isEmpty()) {dialpad_input.setText(getTextFromClipboard()); true}
-            else {copyNumber(); true}
-        }
-    }
-
-    @SuppressLint("MissingSuperCall")
-    override fun onResume() {
-        super.onResume()
-        initLetters()
-        setupOptionsMenu()
-        updateTextColors(dialpad_holder)
-        dialpad_clear_char.applyColorFilter(getProperTextColor())
-        //updateNavigationBarColor(getProperBackgroundColor())
-        setupToolbar(dialpad_toolbar, NavigationIcon.Arrow)
-
-        arrayOf(dialpad_asterisk, dialpad_hashtag).forEach {
-            it.applyColorFilter(getProperTextColor())
-        }
-        dialpad_wrapper.setBackgroundColor(getProperBackgroundColor())
-        dialpad_buttom_bg.setBackgroundColor(getProperBackgroundColor())
-        dialpad_add_number.setTextColor(getProperPrimaryColor())
-        //dialpad_holder.setBackgroundColor(getProperBackgroundColor())
-        dialpad_down.applyColorFilter(getProperTextColor())
-        dialpad_list.addOnScrollListener(object : RecyclerView.OnScrollListener() {
-            override fun onScrollStateChanged(recyclerView: RecyclerView, newState: Int) {
-                super.onScrollStateChanged(recyclerView, newState)
-                if (!hasBeenScrolled) {
-                    hasBeenScrolled = true
-                    slideDown(dialpad_wrapper)
-                }
-            }
-        })
-
-        val properPrimaryColor = getProperPrimaryColor()
-        val callIconId = if (areMultipleSIMsAvailable()) {
-            val callIcon = resources.getColoredDrawableWithColor(R.drawable.ic_phone_two_vector, properPrimaryColor.getContrastColor())
-            dialpad_call_two_button.setImageDrawable(callIcon)
-            dialpad_call_two_button.background.applyColorFilter(properPrimaryColor)
-            dialpad_call_two_button.beVisible()
-            dialpad_call_two_button.setOnClickListener {
-                initCall(dialpad_input.value, 1)
-            }
-
-            R.drawable.ic_phone_one_vector
-        } else {
-            R.drawable.ic_phone_vector
-        }
-
-        val callIcon = resources.getColoredDrawableWithColor(callIconId, properPrimaryColor.getContrastColor())
-        dialpad_call_button.setImageDrawable(callIcon)
-        dialpad_call_button.background.applyColorFilter(config.accentColor)
-
-        letter_fastscroller.textColor = getProperTextColor().getColorStateList()
-        letter_fastscroller.pressedTextColor = properPrimaryColor
-        letter_fastscroller_thumb.setupWithFastScroller(letter_fastscroller)
-        letter_fastscroller_thumb.textColor = properPrimaryColor.getContrastColor()
-        letter_fastscroller_thumb.thumbColor = properPrimaryColor.getColorStateList()
-
-        invalidateOptionsMenu()
-    }
-
-    private fun setupOptionsMenu() {
-        dialpad_toolbar.menu.findItem(R.id.settings).setIcon(getSettingsIcon(config.settingsIcon))
-        dialpad_toolbar.setOnMenuItemClickListener { menuItem ->
-            when (menuItem.itemId) {
-                R.id.settings -> startActivity(Intent(applicationContext, SettingsActivity::class.java))
-                R.id.add_number_to_contact -> addNumberToContact()
-                else -> return@setOnMenuItemClickListener false
-            }
-            return@setOnMenuItemClickListener true
-        }
-    }
-
-    private fun copyNumber() {
-        val clip = dialpad_input.value
-        copyToClipboard(clip)
-    }
-
-    private fun checkDialIntent(): Boolean {
-        return if ((intent.action == Intent.ACTION_DIAL || intent.action == Intent.ACTION_VIEW) && intent.data != null && intent.dataString?.contains("tel:") == true) {
-            val number = Uri.decode(intent.dataString).substringAfter("tel:")
-            dialpad_input.setText(number)
-            dialpad_input.setSelection(number.length)
-            true
-        } else {
-            false
-        }
-    }
-
-    private fun addNumberToContact() {
-        Intent().apply {
-            action = Intent.ACTION_INSERT_OR_EDIT
-            type = "vnd.android.cursor.item/contact"
-            putExtra(KEY_PHONE, dialpad_input.value)
-            launchActivityIntent(this)
-        }
-    }
-
-    private fun dialpadPressed(char: Char, view: View?) {
-        dialpad_input.addCharacter(char)
-        maybePerformDialpadHapticFeedback(view)
-    }
-
-    private fun dialpadHide() {
-        if (dialpad_wrapper.visibility == View.VISIBLE) {
-            slideDown(dialpad_wrapper)
-        } else {
-            slideUp(dialpad_wrapper)
-        }
-    }
-
-    fun slideDown(view: View) {
-        view.animate()
-            .translationY(view.height.toFloat())
-            //.alpha(0f)
-            .setListener(object : AnimatorListenerAdapter() {
-                override fun onAnimationEnd(animation: Animator) {
-                    // superfluous restoration
-                    view.visibility = View.GONE
-                    //view.alpha = 1f
-                    view.translationY = 0f
-                }
-            })
-        hasBeenScrolled = false
-        dialpad_down.setImageDrawable(resources.getDrawable(R.drawable.ic_chevron_up_vector))
-    }
-
-    fun slideUp(view: View) {
-        view.visibility = View.VISIBLE
-        //view.alpha = 0f
-        if (view.height > 0) {
-            slideUpNow(view)
-        } else {
-            // wait till height is measured
-            view.post { slideUpNow(view) }
-        }
-        dialpad_down.setImageDrawable(resources.getDrawable(R.drawable.ic_chevron_down_vector))
-    }
-
-    private fun slideUpNow(view: View) {
-        view.translationY = view.height.toFloat()
-        view.animate()
-            .translationY(0f)
-            //.alpha(1f)
-            .setListener(object : AnimatorListenerAdapter() {
-                override fun onAnimationEnd(animation: Animator) {
-                    view.visibility = View.VISIBLE
-                    //view.alpha = 1f
-                }
-            })
-    }
-
-    private fun clearChar(view: View) {
-        dialpad_input.dispatchKeyEvent(dialpad_input.getKeyEvent(KeyEvent.KEYCODE_DEL))
-        maybePerformDialpadHapticFeedback(view)
-    }
-
-    private fun clearInput() {
-        dialpad_input.setText("")
-    }
-
-    private fun gotContacts(newContacts: ArrayList<Contact>) {
-        allContacts = newContacts
-
-        val privateContacts = MyContactsContentProvider.getContacts(this, privateCursor)
-        if (privateContacts.isNotEmpty()) {
-            allContacts.addAll(privateContacts)
-            allContacts.sort()
-        }
-
-        runOnUiThread {
-            if (!checkDialIntent() && dialpad_input.value.isEmpty()) {
-                dialpadValueChanged("")
-            }
-        }
-    }
-
-    @TargetApi(Build.VERSION_CODES.O)
-    private fun dialpadValueChanged(text: String) {
-        val len = text.length
-        if (len == 0 && dialpad_wrapper.visibility == View.GONE) {
-            slideUp(dialpad_wrapper)
-            dialpad_down.setImageDrawable(resources.getDrawable(R.drawable.ic_chevron_down_vector))
-        }
-        if (len > 8 && text.startsWith("*#*#") && text.endsWith("#*#*")) {
-            val secretCode = text.substring(4, text.length - 4)
-            if (isOreoPlus()) {
-                if (isDefaultDialer()) {
-                    getSystemService(TelephonyManager::class.java)?.sendDialerSpecialCode(secretCode)
-                } else {
-                    launchSetDefaultDialerIntent()
-                }
-            } else {
-                val intent = Intent(SECRET_CODE_ACTION, Uri.parse("android_secret_code://$secretCode"))
-                sendBroadcast(intent)
-            }
-            return
-        }
-
-        (dialpad_list.adapter as? ContactsAdapter)?.finishActMode()
-
-        val filtered = allContacts.filter {
-            var convertedName = PhoneNumberUtils.convertKeypadLettersToDigits(it.name.normalizeString())
-
-            if (hasRussianLocale) {
-                var currConvertedName = ""
-                convertedName.toLowerCase().forEach { char ->
-                    val convertedChar = russianCharsMap.getOrElse(char) { char }
-                    currConvertedName += convertedChar
-                }
-                convertedName = currConvertedName
-            }
-
-            it.doesContainPhoneNumber(text, true, true) || (convertedName.contains(text, true))
-        }.sortedWith(compareBy {
-            !it.doesContainPhoneNumber(text, true, true)
-        }).toMutableList() as ArrayList<Contact>
-
-        letter_fastscroller.setupWithRecyclerView(dialpad_list, { position ->
-            try {
-                val name = filtered[position].getNameToDisplay()
-                val character = if (name.isNotEmpty()) name.substring(0, 1) else ""
-                FastScrollItemIndicator.Text(character.toUpperCase(Locale.getDefault()))
-            } catch (e: Exception) {
-                FastScrollItemIndicator.Text("")
-            }
-        })
-
-        ContactsAdapter(this, filtered, dialpad_list, null, text, showNumber = true, allowLongClick = false) {
-            val contact = it as Contact
-//            if (contact.phoneNumbers.size <= 1) {
-//                if (config.showCallConfirmation) {
-//                    CallConfirmationDialog(this@DialpadActivity, contact.getNameToDisplay()) {
-//                        startCallIntent(contact.phoneNumbers.first().normalizedNumber)
-//                    }
-//                }else{
-//                    startCallIntent(contact.phoneNumbers.first().normalizedNumber)
-//                }
-//            } else {
-//                val items = ArrayList<RadioItem>()
-//                contact.phoneNumbers.forEachIndexed { index, phoneNumber ->
-//                    items.add(RadioItem(index, phoneNumber.normalizedNumber))
-//                }
-//
-//                RadioGroupDialog(this, items) { item ->
-//                    startCallIntent(contact.phoneNumbers[item as Int].normalizedNumber)
-//                }
-//            }
-            if (config.showCallConfirmation) {
-                CallConfirmationDialog(this@DialpadActivity, contact.getNameToDisplay()) {
-                    startCallIntent(contact.getPrimaryNumber() ?: return@CallConfirmationDialog)
-                }
-            } else {
-                startCallIntent(contact.getPrimaryNumber() ?: return@ContactsAdapter)
-            }
-        }.apply {
-            dialpad_list.adapter = this
-        }
-
-        dialpad_add_number.beVisibleIf(dialpad_input.value.isNotEmpty())
-        dialpad_add_number.setTextColor(getProperPrimaryColor())
-        dialpad_placeholder.beVisibleIf(filtered.isEmpty())
-        dialpad_list.beVisibleIf(filtered.isNotEmpty())
-        dialpad_down_holder.beVisibleIf(dialpad_input.value.isNotEmpty())
-        dialpad_clear_char_holder.beVisibleIf(dialpad_input.value.isNotEmpty())
-        dialpad_input.beVisibleIf(dialpad_input.value.isNotEmpty())
-        //dialpad_wrapper.beVisibleIf(dialpad_input.value.isEmpty())
-        dialpad_list.beVisibleIf(dialpad_input.value.isNotEmpty())
-    }
-
-    @SuppressLint("MissingSuperCall")
-    override fun onActivityResult(requestCode: Int, resultCode: Int, resultData: Intent?) {
-        super.onActivityResult(requestCode, resultCode, resultData)
-        if (requestCode == REQUEST_CODE_SET_DEFAULT_DIALER && isDefaultDialer()) {
-            dialpadValueChanged(dialpad_input.value)
-        }
-    }
-
-    private fun initCall(number: String = dialpad_input.value, handleIndex: Int) {
-        if (number.isNotEmpty()) {
-            if (handleIndex != -1 && areMultipleSIMsAvailable()) {
-                if (config.showCallConfirmation) {
-                    CallConfirmationDialog(this, number) {
-                        callContactWithSim(number, handleIndex == 0)
-                    }
-                } else {
-                    callContactWithSim(number, handleIndex == 0)
-                }
-            } else {
-                if (config.showCallConfirmation) {
-                    CallConfirmationDialog(this, number) {
-                        startCallIntent(number)
-                    }
-                } else {
-                    startCallIntent(number)
-                }
-            }
-        }
-    }
-
-    private fun speedDial(id: Int): Boolean {
-        if (dialpad_input.value.length == 1) {
-            val speedDial = speedDialValues.firstOrNull { it.id == id }
-            if (speedDial?.isValid() == true) {
-                initCall(speedDial.number, -1)
-                return true
-            }
-        }
-        return false
-    }
-
-    private fun initRussianChars() {
-        russianCharsMap['а'] = 2; russianCharsMap['б'] = 2; russianCharsMap['в'] = 2; russianCharsMap['г'] = 2
-        russianCharsMap['д'] = 3; russianCharsMap['е'] = 3; russianCharsMap['ё'] = 3; russianCharsMap['ж'] = 3; russianCharsMap['з'] = 3
-        russianCharsMap['и'] = 4; russianCharsMap['й'] = 4; russianCharsMap['к'] = 4; russianCharsMap['л'] = 4
-        russianCharsMap['м'] = 5; russianCharsMap['н'] = 5; russianCharsMap['о'] = 5; russianCharsMap['п'] = 5
-        russianCharsMap['р'] = 6; russianCharsMap['с'] = 6; russianCharsMap['т'] = 6; russianCharsMap['у'] = 6
-        russianCharsMap['ф'] = 7; russianCharsMap['х'] = 7; russianCharsMap['ц'] = 7; russianCharsMap['ч'] = 7
-        russianCharsMap['ш'] = 8; russianCharsMap['щ'] = 8; russianCharsMap['ъ'] = 8; russianCharsMap['ы'] = 8
-        russianCharsMap['ь'] = 9; russianCharsMap['э'] = 9; russianCharsMap['ю'] = 9; russianCharsMap['я'] = 9
-    }
-
-    private fun startDialpadTone(char: Char) {
-        if (config.dialpadBeeps) {
-            pressedKeys.add(char)
-            toneGeneratorHelper?.startTone(char)
-        }
-    }
-
-    private fun stopDialpadTone(char: Char) {
-        if (config.dialpadBeeps) {
-            if (!pressedKeys.remove(char)) return
-            if (pressedKeys.isEmpty()) {
-                toneGeneratorHelper?.stopTone()
-            } else {
-                startDialpadTone(pressedKeys.last())
-            }
-        }
-    }
-
-    private fun maybePerformDialpadHapticFeedback(view: View?) {
-        if (config.dialpadVibration) {
-            view?.performHapticFeedback()
-        }
-    }
-
-    private fun performLongClick(view: View, char: Char) {
-        if (char == '0') {
-            clearChar(view)
-            dialpadPressed('+', view)
-        } else {
-            val result = speedDial(char.digitToInt())
-            if (result) {
-                stopDialpadTone(char)
-                clearChar(view)
-            }
-        }
-    }
-
-    @SuppressLint("ClickableViewAccessibility")
-    private fun setupCharClick(view: View, char: Char, longClickable: Boolean = true) {
-        view.isClickable = true
-        view.isLongClickable = true
-        view.setOnTouchListener { _, event ->
-            when (event.action) {
-                MotionEvent.ACTION_DOWN -> {
-                    dialpadPressed(char, view)
-                    startDialpadTone(char)
-                    if (longClickable) {
-                        longPressHandler.removeCallbacksAndMessages(null)
-                        longPressHandler.postDelayed({
-                            performLongClick(view, char)
-                        }, longPressTimeout)
-                    }
-                }
-                MotionEvent.ACTION_UP, MotionEvent.ACTION_CANCEL -> {
-                    stopDialpadTone(char)
-                    if (longClickable) {
-                        longPressHandler.removeCallbacksAndMessages(null)
-                    }
-                }
-                MotionEvent.ACTION_MOVE -> {
-                    val viewContainsTouchEvent = if (event.rawX.isNaN() || event.rawY.isNaN()) {
-                        false
-                    } else {
-                        view.boundingBox.contains(event.rawX.roundToInt(), event.rawY.roundToInt())
-                    }
-
-                    if (!viewContainsTouchEvent) {
-                        stopDialpadTone(char)
-                        if (longClickable) {
-                            longPressHandler.removeCallbacksAndMessages(null)
-                        }
-                    }
-                }
-            }
-            false
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/activities/MainActivity.kt b/app/src/main/kotlin/com/goodwy/dialer/activities/MainActivity.kt
deleted file mode 100755
index ffc92c2..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/activities/MainActivity.kt
+++ /dev/null
@@ -1,856 +0,0 @@
-package com.goodwy.dialer.activities
-
-import android.annotation.SuppressLint
-import android.app.Activity
-import android.app.SearchManager
-import android.content.Context
-import android.content.Intent
-import android.content.pm.ShortcutInfo
-import android.content.res.ColorStateList
-import android.content.res.Configuration
-import android.graphics.drawable.Drawable
-import android.graphics.drawable.Icon
-import android.graphics.drawable.LayerDrawable
-import android.os.Build
-import android.os.Bundle
-import android.os.Handler
-import android.provider.Settings
-import android.view.Menu
-import android.view.MenuItem
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.TextView
-import android.widget.Toast
-import androidx.appcompat.widget.SearchView
-import androidx.core.view.MenuItemCompat
-import androidx.core.view.updateLayoutParams
-import androidx.viewpager.widget.ViewPager
-import com.behaviorule.arturdumchev.library.pixels
-import com.google.android.material.snackbar.Snackbar
-import com.goodwy.commons.dialogs.ConfirmationDialog
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.extensions.notificationManager
-import com.goodwy.commons.helpers.*
-import com.goodwy.commons.models.FAQItem
-import com.goodwy.commons.models.contacts.Contact
-import com.goodwy.dialer.BuildConfig
-import com.goodwy.dialer.R
-import com.goodwy.dialer.adapters.ViewPagerAdapter
-import com.goodwy.dialer.dialogs.ChangeSortingDialog
-import com.goodwy.dialer.dialogs.FilterContactSourcesDialog
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.extensions.launchCreateNewContactIntent
-import com.goodwy.dialer.extensions.updateUnreadCountBadge
-import com.goodwy.dialer.fragments.ContactsFragment
-import com.goodwy.dialer.fragments.FavoritesFragment
-import com.goodwy.dialer.fragments.MyViewPagerFragment
-import com.goodwy.dialer.helpers.OPEN_DIAL_PAD_AT_LAUNCH
-import com.goodwy.dialer.helpers.RecentsHelper
-import com.goodwy.dialer.helpers.tabsList
-import kotlinx.android.synthetic.main.activity_main.*
-import kotlinx.android.synthetic.main.fragment_contacts.*
-import kotlinx.android.synthetic.main.fragment_favorites.*
-import kotlinx.android.synthetic.main.fragment_recents.*
-import me.grantland.widget.AutofitHelper
-
-class MainActivity : SimpleActivity() {
-    private var launchedDialer = false
-    private var isSearchOpen = false
-    private var mSearchMenuItem: MenuItem? = null
-    private var storedShowTabs = 0
-    private var searchQuery = ""
-    private var storedStartNameWithSurname = false
-    private var storedShowPhoneNumbers = false
-    var cachedContacts = ArrayList<Contact>()
-
-    @SuppressLint("MissingSuperCall")
-    override fun onCreate(savedInstanceState: Bundle?) {
-        isMaterialActivity = true
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_main)
-        appLaunched(BuildConfig.APPLICATION_ID)
-        setupOptionsMenu()
-        refreshMenuItems()
-        config.tabsChanged = false
-        updateMaterialActivityViews(main_coordinator, main_holder, useTransparentNavigation = false, useTopSearchMenu = config.bottomNavigationBar)
-        // TODO TRANSPARENT Navigation Bar
-        var bottomPadding = 0
-        if (!config.bottomNavigationBar) {
-            setWindowTransparency(true) { _, bottomNavigationBarSize, leftNavigationBarSize, rightNavigationBarSize ->
-                main_coordinator.setPadding(leftNavigationBarSize, 0, rightNavigationBarSize, 0)
-                updateNavigationBarColor(getProperBackgroundColor())
-                main_dialpad_button.updateLayoutParams<ViewGroup.MarginLayoutParams> {
-                    setMargins(0, 0, 0, bottomNavigationBarSize + pixels(R.dimen.activity_margin).toInt())
-                }
-            }
-        }
-
-        val marginTop = if (config.bottomNavigationBar) actionBarSize + pixels(R.dimen.top_toolbar_search_height).toInt() else actionBarSize
-        main_holder.updateLayoutParams<ViewGroup.MarginLayoutParams> {
-            setMargins(0, marginTop, 0, 0)
-        }
-        main_menu.updateTitle(getString(R.string.app_launcher_name))
-        main_menu.searchBeVisibleIf(config.bottomNavigationBar)
-
-        launchedDialer = savedInstanceState?.getBoolean(OPEN_DIAL_PAD_AT_LAUNCH) ?: false
-
-        if (isDefaultDialer()) {
-            checkContactPermissions()
-
-            if (!config.wasOverlaySnackbarConfirmed && !Settings.canDrawOverlays(this)) {
-                val snackbar = Snackbar.make(main_holder, R.string.allow_displaying_over_other_apps, Snackbar.LENGTH_INDEFINITE).setAction(R.string.ok) {
-                    config.wasOverlaySnackbarConfirmed = true
-                    startActivity(Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION))
-                }
-
-                snackbar.setBackgroundTint(getProperBackgroundColor().darkenColor())
-                snackbar.setTextColor(getProperTextColor())
-                snackbar.setActionTextColor(getProperTextColor())
-                val snackBarView: View = snackbar.view
-                snackBarView.translationY = -pixels(R.dimen.snackbar_bottom_margin)
-                snackbar.show()
-            }
-
-            handleNotificationPermission { granted ->
-                if (!granted) {
-                    toast(R.string.no_post_notifications_permissions)
-                }
-            }
-        } else {
-            launchSetDefaultDialerIntent()
-        }
-
-        if (isQPlus() && config.blockUnknownNumbers) {
-            setDefaultCallerIdApp()
-        }
-
-        hideTabs()
-        setupTabs()
-
-        Contact.sorting = config.sorting
-    }
-
-    override fun onResume() {
-        super.onResume()
-        if (storedShowTabs != config.showTabs || config.tabsChanged || storedShowPhoneNumbers != config.showPhoneNumbers) {
-            config.lastUsedViewPagerPage = 0
-            System.exit(0)
-            return
-        }
-
-        //clearMissedCalls()
-        updateMenuColors()
-        refreshMenuItems()
-
-        val properPrimaryColor = getProperPrimaryColor()
-        val dialpadIcon = resources.getColoredDrawableWithColor(R.drawable.ic_dialpad_vector, properPrimaryColor.getContrastColor())
-        main_dialpad_button.setImageDrawable(dialpadIcon)
-
-        updateTextColors(main_holder)
-        setupTabColors()
-        setupToolbar(main_toolbar, searchMenuItem = mSearchMenuItem)
-
-        val configStartNameWithSurname = config.startNameWithSurname
-        if (storedStartNameWithSurname != configStartNameWithSurname) {
-            contacts_fragment?.startNameWithSurnameChanged(configStartNameWithSurname)
-            favorites_fragment?.startNameWithSurnameChanged(configStartNameWithSurname)
-            storedStartNameWithSurname = config.startNameWithSurname
-        }
-
-        if (view_pager.adapter != null) {
-
-            if (config.tabsChanged) {
-                if (config.useIconTabs) {
-                    main_top_tabs_holder.getTabAt(0)?.text = null
-                    main_top_tabs_holder.getTabAt(1)?.text = null
-                    main_top_tabs_holder.getTabAt(2)?.text = null
-                } else {
-                    main_top_tabs_holder.getTabAt(0)?.icon = null
-                    main_top_tabs_holder.getTabAt(1)?.icon = null
-                    main_top_tabs_holder.getTabAt(2)?.icon = null
-                }
-            }
-
-            getInactiveTabIndexes(view_pager.currentItem).forEach {
-                main_top_tabs_holder.getTabAt(it)?.icon?.applyColorFilter(getProperTextColor())
-                main_top_tabs_holder.getTabAt(it)?.icon?.alpha = 220 // max 255
-                main_top_tabs_holder.setTabTextColors(getProperTextColor(), getProperPrimaryColor())
-            }
-
-            main_top_tabs_holder.getTabAt(view_pager.currentItem)?.icon?.applyColorFilter(properPrimaryColor)
-            main_top_tabs_holder.getTabAt(view_pager.currentItem)?.icon?.alpha = 220 // max 255
-            getAllFragments().forEach {
-                if (it != null) it.setupColors(getProperTextColor(), getProperPrimaryColor(), getProperPrimaryColor())
-                main_top_tabs_holder.setTabTextColors(getProperTextColor(), getProperPrimaryColor())
-            }
-        }
-
-        if (!isSearchOpen && !config.bottomNavigationBar) {
-            refreshItems(true)
-        }
-
-        if (!main_menu.isSearchOpen && config.bottomNavigationBar) {
-            refreshItems(true)
-        }
-
-        checkShortcuts()
-        Handler().postDelayed({
-            recents_fragment?.refreshItems()
-        }, 2000)
-        invalidateOptionsMenu()
-
-        //Screen slide animation
-        val animation = when (config.screenSlideAnimation) {
-            1 -> ZoomOutPageTransformer()
-            2 -> DepthPageTransformer()
-            else -> null
-        }
-        view_pager.setPageTransformer(true, animation)
-
-        favorites_fragment?.setBackgroundColor(getProperBackgroundColor())
-        recents_fragment?.setBackgroundColor(getProperBackgroundColor())
-        contacts_fragment?.setBackgroundColor(getProperBackgroundColor())
-    }
-
-    @SuppressLint("MissingSuperCall")
-    override fun onDestroy() {
-        super.onDestroy()
-        storedShowTabs = config.showTabs
-        config.tabsChanged = false
-        config.lastUsedViewPagerPage = view_pager.currentItem
-    }
-
-    override fun onPause() {
-        super.onPause()
-        storedShowTabs = config.showTabs
-        config.tabsChanged = false
-        storedStartNameWithSurname = config.startNameWithSurname
-        storedShowPhoneNumbers = config.showPhoneNumbers
-        config.lastUsedViewPagerPage = view_pager.currentItem
-    }
-
-    @SuppressLint("MissingSuperCall")
-    override fun onActivityResult(requestCode: Int, resultCode: Int, resultData: Intent?) {
-        super.onActivityResult(requestCode, resultCode, resultData)
-        // we don't really care about the result, the app can work without being the default Dialer too
-        if (requestCode == REQUEST_CODE_SET_DEFAULT_DIALER) {
-            checkContactPermissions()
-        } else if (requestCode == REQUEST_CODE_SET_DEFAULT_CALLER_ID && resultCode != Activity.RESULT_OK) {
-            toast(R.string.must_make_default_caller_id_app, length = Toast.LENGTH_LONG)
-            baseConfig.blockUnknownNumbers = false
-        }
-    }
-
-    override fun onSaveInstanceState(outState: Bundle) {
-        super.onSaveInstanceState(outState)
-        outState.putBoolean(OPEN_DIAL_PAD_AT_LAUNCH, launchedDialer)
-    }
-
-    override fun onConfigurationChanged(newConfig: Configuration) {
-        super.onConfigurationChanged(newConfig)
-        refreshItems()
-    }
-
-    override fun onBackPressed() {
-        if (main_menu.isSearchOpen) {
-            main_menu.closeSearch()
-        } else if (isSearchOpen && mSearchMenuItem != null) {
-            mSearchMenuItem!!.collapseActionView()
-        } else {
-            super.onBackPressed()
-        }
-    }
-
-    private fun refreshMenuItems() {
-        val currentFragment = getCurrentFragment()
-//        main_toolbar.menu.apply {
-        main_menu.getToolbar().menu.apply {
-            findItem(R.id.search).isVisible = !config.bottomNavigationBar
-            findItem(R.id.clear_call_history).isVisible = currentFragment == recents_fragment
-            findItem(R.id.sort).isVisible = currentFragment != recents_fragment
-            findItem(R.id.create_new_contact).isVisible = currentFragment == contacts_fragment
-            //findItem(R.id.more_apps_from_us).isVisible = !resources.getBoolean(R.bool.hide_google_relations)
-            findItem(R.id.settings).setIcon(getSettingsIcon(config.settingsIcon))
-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                findItem(R.id.settings).iconTintList = ColorStateList.valueOf(getProperTextColor())
-            }
-        }
-    }
-
-    private fun setupOptionsMenu() {
-//        setupSearch(main_toolbar.menu)
-//        main_toolbar.setOnMenuItemClickListener { menuItem ->
-        main_menu.getToolbar().inflateMenu(R.menu.menu)
-        main_menu.toggleHideOnScroll(false)
-        main_menu.setupMenu()
-
-        main_menu.onSearchClosedListener = {
-            getAllFragments().forEach {
-                it?.onSearchQueryChanged("")
-            }
-        }
-
-        main_menu.onSearchTextChangedListener = { text ->
-            getCurrentFragment()?.onSearchQueryChanged(text)
-        }
-
-        main_menu.getToolbar().setOnMenuItemClickListener { menuItem ->
-            when (menuItem.itemId) {
-                R.id.clear_call_history -> clearCallHistory()
-                R.id.create_new_contact -> launchCreateNewContactIntent()
-                R.id.sort -> showSortingDialog(showCustomSorting = getCurrentFragment() is FavoritesFragment)
-                R.id.filter -> showFilterDialog()
-                R.id.settings -> launchSettings()
-                R.id.about -> launchAbout()
-                else -> return@setOnMenuItemClickListener false
-            }
-            return@setOnMenuItemClickListener true
-        }
-        setupSearch(main_menu.getToolbar().menu)
-    }
-
-    private fun updateMenuColors() {
-        updateStatusbarColor(getProperBackgroundColor())
-        main_menu.updateColors()
-    }
-
-    private fun checkContactPermissions() {
-        handlePermission(PERMISSION_READ_CONTACTS) {
-            initFragments()
-        }
-    }
-
-    private fun setupSearch(menu: Menu) {
-        updateMenuItemColors(menu)
-        val searchManager = getSystemService(Context.SEARCH_SERVICE) as SearchManager
-        mSearchMenuItem = menu.findItem(R.id.search)
-        (mSearchMenuItem!!.actionView as SearchView).apply {
-            setSearchableInfo(searchManager.getSearchableInfo(componentName))
-            isSubmitButtonEnabled = false
-            queryHint = getString(R.string.search)
-            //setBackgroundColor(getProperTextColor())
-            setOnQueryTextListener(object : SearchView.OnQueryTextListener {
-                override fun onQueryTextSubmit(query: String) = false
-
-                override fun onQueryTextChange(newText: String): Boolean {
-                    if (isSearchOpen) {
-                        searchQuery = newText
-                        getCurrentFragment()?.onSearchQueryChanged(newText)
-                    }
-                    return true
-                }
-            })
-        }
-
-        MenuItemCompat.setOnActionExpandListener(mSearchMenuItem, object : MenuItemCompat.OnActionExpandListener {
-            override fun onMenuItemActionExpand(item: MenuItem?): Boolean {
-                isSearchOpen = true
-                main_dialpad_button.beGone()
-                return true
-            }
-
-            override fun onMenuItemActionCollapse(item: MenuItem?): Boolean {
-                if (isSearchOpen) {
-                    getCurrentFragment()?.onSearchClosed()
-                }
-
-                isSearchOpen = false
-                main_dialpad_button.beVisible()
-                return true
-            }
-        })
-    }
-
-    private fun clearCallHistory() {
-        val confirmationText = "${getString(R.string.remove_confirmation)}\n\n${getString(R.string.cannot_be_undone)}"
-        ConfirmationDialog(this, confirmationText) {
-            RecentsHelper(this).removeAllRecentCalls(this) {
-                runOnUiThread {
-                    recents_fragment?.refreshItems()
-                }
-            }
-        }
-    }
-
-    @SuppressLint("NewApi")
-    private fun checkShortcuts() {
-        val appIconColor = config.appIconColor
-        if (isNougatMR1Plus() && config.lastHandledShortcutColor != appIconColor) {
-            val launchDialpad = getLaunchDialpadShortcut(appIconColor)
-
-            try {
-                shortcutManager.dynamicShortcuts = listOf(launchDialpad)
-                config.lastHandledShortcutColor = appIconColor
-            } catch (ignored: Exception) {
-            }
-        }
-    }
-
-    @SuppressLint("NewApi")
-    private fun getLaunchDialpadShortcut(appIconColor: Int): ShortcutInfo {
-        val newEvent = getString(R.string.dialpad)
-        val drawable = resources.getDrawable(R.drawable.shortcut_dialpad)
-        (drawable as LayerDrawable).findDrawableByLayerId(R.id.shortcut_dialpad_background).applyColorFilter(appIconColor)
-        val bmp = drawable.convertToBitmap()
-
-        val intent = Intent(this, DialpadActivity::class.java)
-        intent.action = Intent.ACTION_VIEW
-        return ShortcutInfo.Builder(this, "launch_dialpad")
-            .setShortLabel(newEvent)
-            .setLongLabel(newEvent)
-            .setIcon(Icon.createWithBitmap(bmp))
-            .setIntent(intent)
-            .build()
-    }
-
-    private fun setupTabColors() {
-        // bottom tab bar
-        val activeView = main_tabs_holder.getTabAt(view_pager.currentItem)?.customView
-//        updateBottomTabItemColors(activeView, true)
-        updateBottomTabItemColors(activeView, true, getSelectedTabDrawableIds()[view_pager.currentItem])
-
-        getInactiveTabIndexes(view_pager.currentItem).forEach { index ->
-            val inactiveView = main_tabs_holder.getTabAt(index)?.customView
-//            updateBottomTabItemColors(inactiveView, false)
-            updateBottomTabItemColors(inactiveView, false, getDeselectedTabDrawableIds()[index])
-        }
-
-        val bottomBarColor = getBottomNavigationBackgroundColor()
-        main_tabs_holder.setBackgroundColor(bottomBarColor)
-        if (config.bottomNavigationBar) updateNavigationBarColor(bottomBarColor)
-
-        // top tab bar
-        val lastUsedPage = getDefaultTab()
-        main_top_tabs_holder.apply {
-            //background = ColorDrawable(getProperBackgroundColor())
-            setSelectedTabIndicatorColor(getProperBackgroundColor())
-            getTabAt(lastUsedPage)?.select()
-            getTabAt(lastUsedPage)?.icon?.applyColorFilter(getProperPrimaryColor())
-            getTabAt(lastUsedPage)?.icon?.alpha = 220 // max 255
-
-            getInactiveTabIndexes(lastUsedPage).forEach {
-                getTabAt(it)?.icon?.applyColorFilter(getProperTextColor())
-                getTabAt(it)?.icon?.alpha = 220 // max 255
-            }
-        }
-
-        main_top_tabs_holder.onTabSelectionChanged(
-            tabUnselectedAction = {
-                it.icon?.applyColorFilter(getProperTextColor())
-                it.icon?.alpha = 220 // max 255
-                favorites_fragment?.refreshItems() //to save sorting
-            },
-            tabSelectedAction = {
-                view_pager.currentItem = it.position
-                it.icon?.applyColorFilter(getProperPrimaryColor())
-                it.icon?.alpha = 220 // max 255
-
-            }
-        )
-    }
-
-    private fun getInactiveTabIndexes(activeIndex: Int) = (0 until main_tabs_holder.tabCount).filter { it != activeIndex }
-
-    private fun getSelectedTabDrawableIds(): ArrayList<Int> {
-        val showTabs = config.showTabs
-        val icons = ArrayList<Int>()
-
-        if (showTabs and TAB_FAVORITES != 0) {
-            icons.add(R.drawable.ic_star_vector)
-        }
-
-        if (showTabs and TAB_CALL_HISTORY != 0) {
-            icons.add(R.drawable.ic_clock_filled_vector)
-        }
-
-        if (showTabs and TAB_CONTACTS != 0) {
-            icons.add(R.drawable.ic_person_rounded)
-        }
-
-        return icons
-    }
-
-    private fun getDeselectedTabDrawableIds(): ArrayList<Int> {
-        val showTabs = config.showTabs
-        val icons = ArrayList<Int>()
-
-        if (showTabs and TAB_FAVORITES != 0) {
-            icons.add(R.drawable.ic_star_vector)
-        }
-
-        if (showTabs and TAB_CALL_HISTORY != 0) {
-            icons.add(R.drawable.ic_clock_filled_vector)
-        }
-
-        if (showTabs and TAB_CONTACTS != 0) {
-            icons.add(R.drawable.ic_person_rounded)
-        }
-
-        return icons
-    }
-
-    private fun initFragments() {
-        view_pager.offscreenPageLimit = 2
-        view_pager.addOnPageChangeListener(object : ViewPager.OnPageChangeListener {
-            override fun onPageScrollStateChanged(state: Int) {}
-
-            override fun onPageScrolled(position: Int, positionOffset: Float, positionOffsetPixels: Int) {}
-
-            override fun onPageSelected(position: Int) {
-                main_tabs_holder.getTabAt(position)?.select()
-                main_top_tabs_holder.getTabAt(position)?.select()
-                getAllFragments().forEach {
-                    if (it != null) it.finishActMode()
-                }
-                refreshMenuItems()
-                if (getCurrentFragment() == recents_fragment) {
-                    ensureBackgroundThread {
-                        clearMissedCalls()
-                    }
-                }
-            }
-        })
-
-        // selecting the proper tab sometimes glitches, add an extra selector to make sure we have it right
-        main_tabs_holder.onGlobalLayout {
-            Handler().postDelayed({
-                var wantedTab = getDefaultTab()
-
-                // open the Recents tab if we got here by clicking a missed call notification
-                if (intent.action == Intent.ACTION_VIEW && config.showTabs and TAB_CALL_HISTORY > 0) {
-                    wantedTab = main_tabs_holder.tabCount - 2
-                    ensureBackgroundThread {
-                        clearMissedCalls()
-                    }
-                }
-
-                main_tabs_holder.getTabAt(wantedTab)?.select()
-                refreshMenuItems()
-            }, 100L)
-        }
-        main_top_tabs_holder.onGlobalLayout {
-            Handler().postDelayed({
-                var wantedTab = getDefaultTab()
-
-                // open the Recents tab if we got here by clicking a missed call notification
-                if (intent.action == Intent.ACTION_VIEW && config.showTabs and TAB_CALL_HISTORY > 0) {
-                    wantedTab = main_top_tabs_holder.tabCount - 2
-                    ensureBackgroundThread {
-                        clearMissedCalls()
-                    }
-                }
-
-                main_top_tabs_holder.getTabAt(wantedTab)?.select()
-                refreshMenuItems()
-            }, 100L)
-        }
-
-        main_dialpad_button.setOnClickListener {
-            launchDialpad()
-        }
-
-        view_pager.onGlobalLayout {
-            refreshMenuItems()
-        }
-
-        if (config.openDialPadAtLaunch && !launchedDialer) {
-            launchDialpad()
-            launchedDialer = true
-        }
-    }
-
-    private fun hideTabs() {
-        // top tab bar
-        val selectedTabIndex = main_top_tabs_holder.selectedTabPosition
-        view_pager.adapter = null
-        main_top_tabs_holder.removeAllTabs()
-        var skippedTabs = 0
-        var isAnySelected = false
-        tabsList.forEachIndexed { index, value ->
-            if (config.showTabs and value == 0) {
-                skippedTabs++
-            } else {
-                val tab = if (config.useIconTabs) main_top_tabs_holder.newTab().setIcon(getTabIcon(index)) else main_top_tabs_holder.newTab().setText(getTabLabel(index))
-                tab.contentDescription = getTabContentDescription(index)
-                val wasAlreadySelected = selectedTabIndex > -1 && selectedTabIndex == index - skippedTabs
-                val shouldSelect = !isAnySelected && wasAlreadySelected
-                if (shouldSelect) {
-                    isAnySelected = true
-                }
-                main_top_tabs_holder.addTab(tab, index - skippedTabs, shouldSelect)
-                main_top_tabs_holder.setTabTextColors(getProperTextColor(),
-                    getProperPrimaryColor())
-            }
-        }
-        if (!isAnySelected) {
-            main_top_tabs_holder.selectTab(main_top_tabs_holder.getTabAt(getDefaultTab()))
-        }
-        main_top_tabs_container.beGoneIf(main_top_tabs_holder.tabCount == 1 || config.bottomNavigationBar)
-        storedShowTabs = config.showTabs
-        config.tabsChanged = false
-    }
-
-    private fun setupTabs() {
-        // bottom tab bar
-        view_pager.adapter = null
-        main_tabs_holder.removeAllTabs()
-        tabsList.forEachIndexed { index, value ->
-            if (config.showTabs and value != 0) {
-                main_tabs_holder.newTab().setCustomView(R.layout.bottom_tablayout_item).apply {
-                    customView?.findViewById<ImageView>(R.id.tab_item_icon)?.apply {
-                        setImageDrawable(getTabIcon(index))
-                        alpha = 0.86f
-                    }
-                    customView?.findViewById<TextView>(R.id.tab_item_label)?.apply {
-                        text = getTabLabel(index)
-                        alpha = 0.86f
-                        beGoneIf(config.useIconTabs)
-                    }
-                    AutofitHelper.create(customView?.findViewById(R.id.tab_item_label))
-                    main_tabs_holder.addTab(this)
-                }
-            }
-        }
-
-        main_tabs_holder.onTabSelectionChanged(
-            tabUnselectedAction = {
-//                updateBottomTabItemColors(it.customView, false)
-                updateBottomTabItemColors(it.customView, false, getDeselectedTabDrawableIds()[it.position])
-            },
-            tabSelectedAction = {
-                closeSearch()
-                main_menu.closeSearch()
-                view_pager.currentItem = it.position
-//                updateBottomTabItemColors(it.customView, true)
-                updateBottomTabItemColors(it.customView, true, getSelectedTabDrawableIds()[it.position])
-                if (getCurrentFragment() is ContactsFragment && config.openSearch) {
-                    if (config.bottomNavigationBar) main_menu.requestFocusAndShowKeyboard()
-                    else mSearchMenuItem!!.expandActionView()
-                }
-            }
-        )
-
-        main_tabs_holder.beGoneIf(main_tabs_holder.tabCount == 1 || !config.bottomNavigationBar)
-        storedShowTabs = config.showTabs
-        storedStartNameWithSurname = config.startNameWithSurname
-        storedShowPhoneNumbers = config.showPhoneNumbers
-    }
-
-    private fun getTabLabel(position: Int): String {
-        val stringId = when (position) {
-            0 -> R.string.favorites_tab
-            1 -> R.string.recents
-            else -> R.string.contacts_tab
-        }
-
-        return resources.getString(stringId)
-    }
-
-    private fun getTabIcon(position: Int): Drawable {
-        val drawableId = when (position) {
-            0 -> R.drawable.ic_star_vector
-            1 -> R.drawable.ic_clock_filled_vector
-            else -> R.drawable.ic_person_rounded
-        }
-        return resources.getColoredDrawableWithColor(drawableId, getProperTextColor())
-    }
-
-    private fun getTabContentDescription(position: Int): String {
-        val stringId = when (position) {
-            0 -> R.string.favorites_tab
-            1 -> R.string.call_history_tab
-            else -> R.string.contacts_tab
-        }
-
-        return resources.getString(stringId)
-    }
-
-    private fun refreshItems(openLastTab: Boolean = false) {
-        if (isDestroyed || isFinishing) {
-            return
-        }
-
-        if (view_pager.adapter == null) {
-            view_pager.adapter = ViewPagerAdapter(this)
-            //view_pager.currentItem = if (openLastTab) main_top_tabs_holder.selectedTabPosition else getDefaultTab()
-            view_pager.currentItem = if (openLastTab) config.lastUsedViewPagerPage else getDefaultTab()
-            view_pager.onGlobalLayout {
-                refreshFragments()
-            }
-        } else {
-            refreshFragments()
-        }
-    }
-
-    private fun launchDialpad() {
-        Intent(applicationContext, DialpadActivity::class.java).apply {
-            startActivity(this)
-        }
-    }
-
-    fun refreshFragments() {
-        favorites_fragment?.refreshItems()
-        recents_fragment?.refreshItems()
-        contacts_fragment?.refreshItems()
-    }
-
-    private fun getAllFragments(): ArrayList<MyViewPagerFragment> {
-        val showTabs = config.showTabs
-        val fragments = arrayListOf<MyViewPagerFragment>()
-
-        if (showTabs and TAB_FAVORITES > 0) {
-            fragments.add(favorites_fragment)
-        }
-
-        if (showTabs and TAB_CALL_HISTORY > 0) {
-            fragments.add(recents_fragment)
-        }
-
-        if (showTabs and TAB_CONTACTS > 0) {
-            fragments.add(contacts_fragment)
-        }
-
-        return fragments
-    }
-
-    private fun getCurrentFragment(): MyViewPagerFragment? = getAllFragments().getOrNull(view_pager.currentItem)
-
-    private fun getDefaultTab(): Int {
-        val showTabsMask = config.showTabs
-        return when (config.defaultTab) {
-            TAB_LAST_USED -> if (config.lastUsedViewPagerPage < main_top_tabs_holder.tabCount) config.lastUsedViewPagerPage else 0
-            TAB_FAVORITES -> 0
-            TAB_CALL_HISTORY -> if (showTabsMask and TAB_FAVORITES > 0) 1 else 0
-            else -> {
-                if (showTabsMask and TAB_CONTACTS > 0) {
-                    if (showTabsMask and TAB_FAVORITES > 0) {
-                        if (showTabsMask and TAB_CALL_HISTORY > 0) {
-                            2
-                        } else {
-                            1
-                        }
-                    } else {
-                        if (showTabsMask and TAB_CALL_HISTORY > 0) {
-                            1
-                        } else {
-                            0
-                        }
-                    }
-                } else {
-                    0
-                }
-            }
-        }
-    }
-
-    @SuppressLint("MissingPermission")
-    private fun clearMissedCalls() {
-        try {
-            // notification cancellation triggers MissedCallNotifier.clearMissedCalls() which, in turn,
-            // should update the database and reset the cached missed call count in MissedCallNotifier.java
-            // https://android.googlesource.com/platform/packages/services/Telecomm/+/master/src/com/android/server/telecom/ui/MissedCallNotifierImpl.java#170
-            telecomManager.cancelMissedCallsNotification()
-
-            notificationManager.cancel(420)
-            config.numberMissedCalls = 0
-            updateUnreadCountBadge(0)
-        } catch (ignored: Exception) {
-        }
-    }
-
-    private fun launchSettings() {
-        closeSearch()
-        hideKeyboard()
-        startActivity(Intent(applicationContext, SettingsActivity::class.java))
-    }
-
-    private fun launchAbout() {
-        closeSearch()
-        val licenses = LICENSE_GLIDE or LICENSE_INDICATOR_FAST_SCROLL or LICENSE_AUTOFITTEXTVIEW
-
-        val faqItems = arrayListOf(
-            FAQItem(R.string.faq_1_title, R.string.faq_1_text),
-            FAQItem(R.string.faq_9_title_commons, R.string.faq_9_text_commons)
-        )
-
-        if (!resources.getBoolean(R.bool.hide_google_relations)) {
-            faqItems.add(FAQItem(R.string.faq_2_title_commons, R.string.faq_2_text_commons_g))
-            //faqItems.add(FAQItem(R.string.faq_6_title_commons, R.string.faq_6_text_commons))
-        }
-
-        startAboutActivity(R.string.app_name_g, licenses, BuildConfig.VERSION_NAME, faqItems, true, BuildConfig.GOOGLE_PLAY_LICENSING_KEY, BuildConfig.PRODUCT_ID_X1, BuildConfig.PRODUCT_ID_X2, BuildConfig.PRODUCT_ID_X3)
-    }
-
-    private fun showSortingDialog(showCustomSorting: Boolean) {
-        ChangeSortingDialog(this, showCustomSorting) {
-            favorites_fragment?.refreshItems {
-                if (isSearchOpen) {
-                    getCurrentFragment()?.onSearchQueryChanged(searchQuery)
-                }
-                if (main_menu.isSearchOpen) {
-                    getCurrentFragment()?.onSearchQueryChanged(main_menu.getCurrentQuery())
-                }
-            }
-
-            contacts_fragment?.refreshItems {
-                if (isSearchOpen) {
-                    getCurrentFragment()?.onSearchQueryChanged(searchQuery)
-                }
-                if (main_menu.isSearchOpen) {
-                    getCurrentFragment()?.onSearchQueryChanged(main_menu.getCurrentQuery())
-                }
-            }
-        }
-    }
-
-    private fun closeSearch() {
-        if (isSearchOpen) {
-            getAllFragments().forEach {
-                it?.onSearchQueryChanged("")
-            }
-            mSearchMenuItem?.collapseActionView()
-        }
-    }
-
-    private fun showFilterDialog() {
-        FilterContactSourcesDialog(this) {
-            favorites_fragment?.refreshItems {
-                if (main_menu.isSearchOpen) {
-                    getCurrentFragment()?.onSearchQueryChanged(main_menu.getCurrentQuery())
-                }
-            }
-
-            contacts_fragment?.refreshItems {
-                if (main_menu.isSearchOpen) {
-                    getCurrentFragment()?.onSearchQueryChanged(main_menu.getCurrentQuery())
-                }
-            }
-
-            recents_fragment?.refreshItems{
-                if (main_menu.isSearchOpen) {
-                    getCurrentFragment()?.onSearchQueryChanged(main_menu.getCurrentQuery())
-                }
-            }
-        }
-    }
-
-    fun cacheContacts(contacts: List<Contact>) {
-        try {
-            cachedContacts.clear()
-            cachedContacts.addAll(contacts)
-        } catch (e: Exception) {
-        }
-    }
-
-    /*private fun actionBarSize(): Float {
-        val styledAttributes = theme.obtainStyledAttributes(IntArray(1) { android.R.attr.actionBarSize })
-        val actionBarSize = styledAttributes.getDimension(0, 0F)
-        styledAttributes.recycle()
-        return actionBarSize
-    }*/
-
-    private val actionBarSize
-        get() = theme.obtainStyledAttributes(intArrayOf(android.R.attr.actionBarSize))
-            .let { attrs -> attrs.getDimension(0, 0F).toInt().also { attrs.recycle() } }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/activities/ManageSpeedDialActivity.kt b/app/src/main/kotlin/com/goodwy/dialer/activities/ManageSpeedDialActivity.kt
deleted file mode 100755
index 29eb711..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/activities/ManageSpeedDialActivity.kt
+++ /dev/null
@@ -1,77 +0,0 @@
-package com.goodwy.dialer.activities
-
-import android.os.Bundle
-import com.google.gson.Gson
-import com.goodwy.commons.extensions.updateTextColors
-import com.goodwy.commons.helpers.ContactsHelper
-import com.goodwy.commons.helpers.NavigationIcon
-import com.goodwy.commons.models.contacts.Contact
-import com.goodwy.dialer.R
-import com.goodwy.dialer.adapters.SpeedDialAdapter
-import com.goodwy.dialer.dialogs.SelectContactDialog
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.interfaces.RemoveSpeedDialListener
-import com.goodwy.dialer.models.SpeedDial
-import kotlinx.android.synthetic.main.activity_manage_speed_dial.*
-
-class ManageSpeedDialActivity : SimpleActivity(), RemoveSpeedDialListener {
-    private var allContacts = ArrayList<Contact>()
-    private var speedDialValues = ArrayList<SpeedDial>()
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        isMaterialActivity = true
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_manage_speed_dial)
-
-        updateMaterialActivityViews(manage_speed_dial_coordinator, manage_speed_dial_holder, useTransparentNavigation = true, useTopSearchMenu = false)
-        setupMaterialScrollListener(manage_speed_dial_scrollview, manage_speed_dial_toolbar)
-
-        speedDialValues = config.getSpeedDialValues()
-        updateAdapter()
-        ContactsHelper(this).getContacts(showOnlyContactsWithNumbers = true) { contacts ->
-            allContacts = contacts
-        }
-
-        updateTextColors(manage_speed_dial_scrollview)
-    }
-
-    override fun onResume() {
-        super.onResume()
-        setupToolbar(manage_speed_dial_toolbar, NavigationIcon.Arrow)
-    }
-
-    override fun onStop() {
-        super.onStop()
-        config.speedDial = Gson().toJson(speedDialValues)
-    }
-
-    private fun updateAdapter() {
-        SpeedDialAdapter(this, speedDialValues, this, speed_dial_list) {
-            val clickedContact = it as SpeedDial
-            if (allContacts.isEmpty()) {
-                return@SpeedDialAdapter
-            }
-
-            SelectContactDialog(this, allContacts) { selectedContact ->
-                speedDialValues.first { it.id == clickedContact.id }.apply {
-                    displayName = selectedContact.getNameToDisplay()
-                    number = selectedContact.phoneNumbers.first().normalizedNumber
-                }
-                updateAdapter()
-            }
-        }.apply {
-            speed_dial_list.adapter = this
-        }
-    }
-
-    override fun removeSpeedDial(ids: ArrayList<Int>) {
-        ids.forEach {
-            val dialId = it
-            speedDialValues.first { it.id == dialId }.apply {
-                displayName = ""
-                number = ""
-            }
-        }
-        updateAdapter()
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/activities/SettingsActivity.kt b/app/src/main/kotlin/com/goodwy/dialer/activities/SettingsActivity.kt
deleted file mode 100755
index 424d293..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/activities/SettingsActivity.kt
+++ /dev/null
@@ -1,598 +0,0 @@
-package com.goodwy.dialer.activities
-
-import android.annotation.SuppressLint
-import android.annotation.TargetApi
-import android.content.Intent
-import android.os.Build
-import android.os.Bundle
-import android.view.Menu
-import com.goodwy.commons.activities.ManageBlockedNumbersActivity
-import com.goodwy.commons.dialogs.BottomSheetChooserDialog
-import com.goodwy.commons.dialogs.ChangeDateTimeFormatDialog
-import com.goodwy.commons.dialogs.RadioGroupDialog
-import com.goodwy.commons.dialogs.SettingsIconDialog
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.*
-import com.goodwy.commons.models.FAQItem
-import com.goodwy.commons.models.RadioItem
-import com.goodwy.commons.models.SimpleListItem
-import com.goodwy.dialer.App.Companion.isProVersion
-import com.goodwy.dialer.BuildConfig
-import com.goodwy.dialer.R
-import com.goodwy.dialer.dialogs.ManageVisibleTabsDialog
-import com.goodwy.dialer.extensions.areMultipleSIMsAvailable
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.helpers.AVATAR
-import com.goodwy.dialer.helpers.BLUR_AVATAR
-import com.goodwy.dialer.helpers.THEME_BACKGROUND
-import com.goodwy.dialer.helpers.TRANSPARENT_BACKGROUND
-import kotlinx.android.synthetic.main.activity_settings.*
-import java.util.*
-import kotlin.system.exitProcess
-
-class SettingsActivity : SimpleActivity() {
-
-    @SuppressLint("MissingSuperCall")
-    override fun onCreate(savedInstanceState: Bundle?) {
-        isMaterialActivity = true
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_settings)
-
-        updateMaterialActivityViews(settings_coordinator, settings_holder, useTransparentNavigation = false, useTopSearchMenu = false)
-        setupMaterialScrollListener(settings_nested_scrollview, settings_toolbar)
-        // TODO TRANSPARENT Navigation Bar
-        if (config.transparentNavigationBar) {
-            setWindowTransparency(true) { _, bottomNavigationBarSize, leftNavigationBarSize, rightNavigationBarSize ->
-                settings_coordinator.setPadding(leftNavigationBarSize, 0, rightNavigationBarSize, 0)
-                updateNavigationBarColor(getProperBackgroundColor())
-            }
-        }
-    }
-
-    @SuppressLint("MissingSuperCall")
-    override fun onResume() {
-        super.onResume()
-        setupToolbar(settings_toolbar, NavigationIcon.Arrow)
-
-        setupPurchaseThankYou()
-        setupCustomizeColors()
-        setupDefaultTab()
-        setupManageShownTabs()
-        setupBottomNavigationBar()
-        setupNavigationBarStyle()
-        setupUseIconTabs()
-        setupScreenSlideAnimation()
-        setupMaterialDesign3()
-        setupSettingsIcon()
-        setupUseColoredContacts()
-        setupColorSimIcons()
-        setupOpenSearch()
-        setupManageBlockedNumbers()
-        setupManageSpeedDial()
-        setupChangeDateTimeFormat()
-        setupFontSize()
-        setupDialPadOpen()
-        setupBackgroundCallScreen()
-        setupTransparentCallScreen()
-        setupAlwaysShowFullscreen()
-        setupMissedCallNotifications()
-        setupHideDialpadLetters()
-        setupDialpadNumbers()
-        setupGroupSubsequentCalls()
-        setupShowDividers()
-        setupShowContactThumbnails()
-        setupShowPhoneNumbers()
-        setupStartNameWithSurname()
-        setupShowCallConfirmation()
-        setupUseEnglish()
-        setupLanguage()
-        setupTipJar()
-        setupAbout()
-        setupDisableProximitySensor()
-        setupDialpadVibrations()
-        setupDialpadBeeps()
-        setupDisableSwipeToAnswer()
-        setupUseRelativeDate()
-        updateTextColors(settings_holder)
-
-        arrayOf(
-            settings_appearance_label,
-            settings_tabs_label,
-            settings_general_label,
-            settings_calls_label,
-            settings_list_view_label,
-            settings_other_label).forEach {
-            it.setTextColor(getProperPrimaryColor())
-        }
-
-        arrayOf(
-            settings_color_customization_holder,
-            settings_tabs_holder,
-            settings_general_holder,
-            settings_calls_holder,
-            settings_list_view_holder,
-            settings_other_holder
-        ).forEach {
-            it.background.applyColorFilter(getBottomNavigationBackgroundColor())
-        }
-
-        arrayOf(
-            settings_customize_colors_chevron,
-            settings_manage_shown_tabs_chevron,
-            settings_manage_blocked_numbers_chevron,
-            settings_manage_speed_dial_chevron,
-            settings_change_date_time_format_chevron,
-            settings_tip_jar_chevron,
-            settings_about_chevron
-        ).forEach {
-            it.applyColorFilter(getProperTextColor())
-        }
-    }
-
-    override fun onCreateOptionsMenu(menu: Menu): Boolean {
-        updateMenuItemColors(menu)
-        return super.onCreateOptionsMenu(menu)
-    }
-
-    private fun setupPurchaseThankYou() {
-        settings_purchase_thank_you_holder.beGoneIf(isOrWasThankYouInstalled() || isProVersion())
-        settings_purchase_thank_you_holder.setOnClickListener {
-            launchPurchase() //launchPurchaseThankYouIntent()
-        }
-        moreButton.setOnClickListener {
-            launchPurchase()
-        }
-        val appDrawable = resources.getColoredDrawableWithColor(R.drawable.ic_plus_support, getProperPrimaryColor())
-        purchase_logo.setImageDrawable(appDrawable)
-        val drawable = resources.getColoredDrawableWithColor(R.drawable.button_gray_bg, getProperPrimaryColor())
-        moreButton.background = drawable
-        moreButton.setTextColor(getProperBackgroundColor())
-        moreButton.setPadding(2,2,2,2)
-    }
-
-    private fun setupCustomizeColors() {
-        settings_customize_colors_label.text = if (isOrWasThankYouInstalled() || isProVersion()) {
-            getString(R.string.customize_colors)
-        } else {
-            getString(R.string.customize_colors_locked)
-        }
-        settings_customize_colors_holder.setOnClickListener {
-            //handleCustomizeColorsClick()
-            /*if (isOrWasThankYouInstalled() || isProVersion()) {
-                startCustomizationActivity()
-            } else {
-                launchPurchase()
-            }*/
-            startCustomizationActivity(true, isOrWasThankYouInstalled() || isProVersion(), BuildConfig.GOOGLE_PLAY_LICENSING_KEY, BuildConfig.PRODUCT_ID_X1, BuildConfig.PRODUCT_ID_X2, BuildConfig.PRODUCT_ID_X3)
-        }
-    }
-
-    private fun setupUseEnglish() {
-        settings_use_english_holder.beVisibleIf((config.wasUseEnglishToggled || Locale.getDefault().language != "en") && !isTiramisuPlus())
-        settings_use_english.isChecked = config.useEnglish
-        settings_use_english_holder.setOnClickListener {
-            settings_use_english.toggle()
-            config.useEnglish = settings_use_english.isChecked
-            exitProcess(0)
-        }
-    }
-
-    private fun setupLanguage() {
-        settings_language.text = Locale.getDefault().displayLanguage
-        settings_language_holder.beVisibleIf(isTiramisuPlus())
-
-        settings_language_holder.setOnClickListener {
-            launchChangeAppLanguageIntent()
-        }
-    }
-
-    // support for device-wise blocking came on Android 7, rely only on that
-    @TargetApi(Build.VERSION_CODES.N)
-    private fun setupManageBlockedNumbers() {
-        settings_manage_blocked_numbers_chevron.applyColorFilter(getProperTextColor())
-        settings_manage_blocked_numbers_holder.beVisibleIf(isNougatPlus())
-        settings_manage_blocked_numbers_holder.setOnClickListener {
-            Intent(this, ManageBlockedNumbersActivity::class.java).apply {
-                startActivity(this)
-            }
-        }
-    }
-
-    private fun setupManageSpeedDial() {
-        settings_manage_speed_dial_chevron.applyColorFilter(getProperTextColor())
-        settings_manage_speed_dial_holder.setOnClickListener {
-            Intent(this, ManageSpeedDialActivity::class.java).apply {
-                startActivity(this)
-            }
-        }
-    }
-
-    private fun setupChangeDateTimeFormat() {
-        settings_change_date_time_format_chevron.applyColorFilter(getProperTextColor())
-        settings_change_date_time_format_holder.setOnClickListener {
-            ChangeDateTimeFormatDialog(this) {}
-        }
-    }
-
-    private fun setupFontSize() {
-        settings_font_size.text = getFontSizeText()
-        settings_font_size_holder.setOnClickListener {
-            val items = arrayListOf(
-                RadioItem(FONT_SIZE_SMALL, getString(R.string.small)),
-                RadioItem(FONT_SIZE_MEDIUM, getString(R.string.medium)),
-                RadioItem(FONT_SIZE_LARGE, getString(R.string.large)),
-                RadioItem(FONT_SIZE_EXTRA_LARGE, getString(R.string.extra_large)))
-
-            RadioGroupDialog(this@SettingsActivity, items, config.fontSize) {
-                config.fontSize = it as Int
-                settings_font_size.text = getFontSizeText()
-            }
-        }
-    }
-
-    private fun setupDefaultTab() {
-        settings_default_tab.text = getDefaultTabText()
-        settings_default_tab_holder.setOnClickListener {
-            val items = arrayListOf(
-                RadioItem(TAB_LAST_USED, getString(R.string.last_used_tab)),
-                RadioItem(TAB_FAVORITES, getString(R.string.favorites_tab)),
-                RadioItem(TAB_CALL_HISTORY, getString(R.string.recents)),
-                RadioItem(TAB_CONTACTS, getString(R.string.contacts_tab)))
-
-            RadioGroupDialog(this@SettingsActivity, items, config.defaultTab) {
-                config.defaultTab = it as Int
-                settings_default_tab.text = getDefaultTabText()
-            }
-        }
-    }
-
-    private fun getDefaultTabText() = getString(
-        when (baseConfig.defaultTab) {
-            TAB_FAVORITES -> R.string.favorites_tab
-            TAB_CALL_HISTORY -> R.string.recents
-            TAB_CONTACTS -> R.string.contacts_tab
-            else -> R.string.last_used_tab
-        }
-    )
-
-    private fun setupBottomNavigationBar() {
-        settings_bottom_navigation_bar.isChecked = config.bottomNavigationBar
-        settings_bottom_navigation_bar_holder.setOnClickListener {
-            settings_bottom_navigation_bar.toggle()
-            config.bottomNavigationBar = settings_bottom_navigation_bar.isChecked
-            config.tabsChanged = true
-        }
-    }
-
-    private fun setupNavigationBarStyle() {
-        settings_navigation_bar_style.text = getNavigationBarStyleText()
-        settings_navigation_bar_style_holder.setOnClickListener {
-            launchNavigationBarStyleDialog()
-        }
-    }
-
-    private fun launchNavigationBarStyleDialog() {
-        BottomSheetChooserDialog.createChooser(
-            fragmentManager = supportFragmentManager,
-            title = R.string.tab_navigation,
-            items = arrayOf(
-                SimpleListItem(0, R.string.top, R.drawable.ic_tab_top, selected = !config.bottomNavigationBar),
-                SimpleListItem(1, R.string.bottom, R.drawable.ic_tab_bottom, selected = config.bottomNavigationBar)
-            )
-        ) {
-            config.bottomNavigationBar = it.id == 1
-            config.tabsChanged = true
-            settings_navigation_bar_style.text = getNavigationBarStyleText()
-        }
-    }
-
-    private fun setupUseIconTabs() {
-        settings_use_icon_tabs.isChecked = config.useIconTabs
-        settings_use_icon_tabs_holder.setOnClickListener {
-            settings_use_icon_tabs.toggle()
-            config.useIconTabs = settings_use_icon_tabs.isChecked
-            config.tabsChanged = true
-        }
-    }
-
-    private fun setupManageShownTabs() {
-        settings_manage_shown_tabs_chevron.applyColorFilter(getProperTextColor())
-        settings_manage_shown_tabs_holder.setOnClickListener {
-            ManageVisibleTabsDialog(this)
-        }
-    }
-
-    private fun setupScreenSlideAnimation() {
-        settings_screen_slide_animation.text = getScreenSlideAnimationText()
-        settings_screen_slide_animation_holder.setOnClickListener {
-            val items = arrayListOf(
-                RadioItem(0, getString(R.string.no)),
-                RadioItem(1, getString(R.string.screen_slide_animation_zoomout)),
-                RadioItem(2, getString(R.string.screen_slide_animation_depth)))
-
-            RadioGroupDialog(this@SettingsActivity, items, config.screenSlideAnimation) {
-                config.screenSlideAnimation = it as Int
-                config.tabsChanged = true
-                settings_screen_slide_animation.text = getScreenSlideAnimationText()
-            }
-        }
-    }
-
-    private fun setupDialPadOpen() {
-        settings_open_dialpad_at_launch.isChecked = config.openDialPadAtLaunch
-        settings_open_dialpad_at_launch_holder.setOnClickListener {
-            settings_open_dialpad_at_launch.toggle()
-            config.openDialPadAtLaunch = settings_open_dialpad_at_launch.isChecked
-        }
-    }
-
-    private fun setupShowDividers() {
-        settings_show_dividers.isChecked = config.useDividers
-        settings_show_dividers_holder.setOnClickListener {
-            settings_show_dividers.toggle()
-            config.useDividers = settings_show_dividers.isChecked
-        }
-    }
-
-    private fun setupShowContactThumbnails() {
-        settings_show_contact_thumbnails.isChecked = config.showContactThumbnails
-        settings_show_contact_thumbnails_holder.setOnClickListener {
-            settings_show_contact_thumbnails.toggle()
-            config.showContactThumbnails = settings_show_contact_thumbnails.isChecked
-        }
-    }
-
-    private fun setupShowPhoneNumbers() {
-        settings_show_phone_numbers.isChecked = config.showPhoneNumbers
-        settings_show_phone_numbers_holder.setOnClickListener {
-            settings_show_phone_numbers.toggle()
-            config.showPhoneNumbers = settings_show_phone_numbers.isChecked
-        }
-    }
-
-    private fun setupUseColoredContacts() {
-        settings_colored_contacts.isChecked = config.useColoredContacts
-        settings_colored_contacts_holder.setOnClickListener {
-            settings_colored_contacts.toggle()
-            config.useColoredContacts = settings_colored_contacts.isChecked
-        }
-    }
-
-    private fun setupBackgroundCallScreen() {
-        settings_background_call_screen.text = getBackgroundCallScreenText()
-        settings_background_call_screen_holder.setOnClickListener {
-            val items = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {
-                arrayListOf(
-                    RadioItem(THEME_BACKGROUND, getString(R.string.theme)),
-                    RadioItem(BLUR_AVATAR, getString(R.string.blurry_contact_photo)),
-                    RadioItem(AVATAR, getString(R.string.contact_photo))
-                )
-            } else {
-                arrayListOf(
-                    RadioItem(THEME_BACKGROUND, getString(R.string.theme)),
-                    RadioItem(BLUR_AVATAR, getString(R.string.blurry_contact_photo)),
-                    RadioItem(AVATAR, getString(R.string.contact_photo)),
-                    RadioItem(TRANSPARENT_BACKGROUND, getString(R.string.blurry_wallpaper))
-                )
-            }
-
-            RadioGroupDialog(this@SettingsActivity, items, config.backgroundCallScreen) {
-                if (it as Int == TRANSPARENT_BACKGROUND) {
-                    if (hasPermission(PERMISSION_READ_STORAGE)) {
-                        config.backgroundCallScreen = it
-                        settings_background_call_screen.text = getBackgroundCallScreenText()
-                    } else {
-                        handlePermission(PERMISSION_READ_STORAGE) { permission ->
-                            if (permission) {
-                                config.backgroundCallScreen = it
-                                settings_background_call_screen.text = getBackgroundCallScreenText()
-                            } else {
-                                toast(R.string.no_storage_permissions)
-                            }
-                        }
-                    }
-                } else {
-                    config.backgroundCallScreen = it
-                    settings_background_call_screen.text = getBackgroundCallScreenText()
-                }
-            }
-        }
-    }
-
-    private fun getBackgroundCallScreenText() = getString(
-        when (config.backgroundCallScreen) {
-            BLUR_AVATAR -> R.string.blurry_contact_photo
-            AVATAR -> R.string.contact_photo
-            TRANSPARENT_BACKGROUND -> R.string.blurry_wallpaper
-            else -> R.string.theme
-        }
-    )
-
-    private fun setupTransparentCallScreen() {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) settings_transparent_call_screen_holder.beGone()
-        else {
-            if (hasPermission(PERMISSION_READ_STORAGE)) {
-                settings_transparent_call_screen.isChecked = config.transparentCallScreen
-            } else settings_transparent_call_screen.isChecked = false
-            settings_transparent_call_screen_holder.setOnClickListener {
-                if (hasPermission(PERMISSION_READ_STORAGE)) {
-                    settings_transparent_call_screen.toggle()
-                    config.transparentCallScreen = settings_transparent_call_screen.isChecked
-                } else {
-                    handlePermission(PERMISSION_READ_STORAGE) {
-                        if (it) {
-                            settings_transparent_call_screen.toggle()
-                            config.transparentCallScreen = settings_transparent_call_screen.isChecked
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    private fun setupAlwaysShowFullscreen() {
-        settings_always_show_fullscreen.isChecked = config.showIncomingCallsFullScreen
-        settings_always_show_fullscreen_holder.setOnClickListener {
-            settings_always_show_fullscreen.toggle()
-            config.showIncomingCallsFullScreen = settings_always_show_fullscreen.isChecked
-        }
-    }
-
-    private fun setupMissedCallNotifications() {
-        settings_missed_call_notifications.isChecked = config.missedCallNotifications
-        settings_missed_call_notifications_holder.setOnClickListener {
-            settings_missed_call_notifications.toggle()
-            config.missedCallNotifications = settings_missed_call_notifications.isChecked
-        }
-    }
-
-    private fun setupHideDialpadLetters() {
-        settings_hide_dialpad_letters.isChecked = config.hideDialpadLetters
-        settings_hide_dialpad_letters_holder.setOnClickListener {
-            settings_hide_dialpad_letters.toggle()
-            config.hideDialpadLetters = settings_hide_dialpad_letters.isChecked
-        }
-    }
-
-    private fun setupDialpadNumbers() {
-        settings_hide_dialpad_numbers.isChecked = config.hideDialpadNumbers
-        settings_hide_dialpad_numbers_holder.setOnClickListener {
-            settings_hide_dialpad_numbers.toggle()
-            config.hideDialpadNumbers = settings_hide_dialpad_numbers.isChecked
-        }
-    }
-
-    private fun setupGroupSubsequentCalls() {
-        settings_group_subsequent_calls.isChecked = config.groupSubsequentCalls
-        settings_group_subsequent_calls_holder.setOnClickListener {
-            settings_group_subsequent_calls.toggle()
-            config.groupSubsequentCalls = settings_group_subsequent_calls.isChecked
-        }
-    }
-
-    private fun setupStartNameWithSurname() {
-        settings_start_name_with_surname.isChecked = config.startNameWithSurname
-        settings_start_name_with_surname_holder.setOnClickListener {
-            settings_start_name_with_surname.toggle()
-            config.startNameWithSurname = settings_start_name_with_surname.isChecked
-        }
-    }
-
-    private fun setupShowCallConfirmation() {
-        settings_show_call_confirmation.isChecked = config.showCallConfirmation
-        settings_show_call_confirmation_holder.setOnClickListener {
-            settings_show_call_confirmation.toggle()
-            config.showCallConfirmation = settings_show_call_confirmation.isChecked
-        }
-    }
-
-    private fun setupMaterialDesign3() {
-        settings_material_design_3.isChecked = config.materialDesign3
-        settings_material_design_3_holder.setOnClickListener {
-            settings_material_design_3.toggle()
-            config.materialDesign3 = settings_material_design_3.isChecked
-            config.tabsChanged = true
-        }
-    }
-
-    private fun setupSettingsIcon() {
-        settings_icon.applyColorFilter(getProperTextColor())
-        settings_icon.setImageResource(getSettingsIcon(config.settingsIcon))
-        settings_icon_holder.setOnClickListener {
-            SettingsIconDialog(this) {
-                config.settingsIcon = it as Int
-                settings_icon.setImageResource(getSettingsIcon(it))
-            }
-        }
-    }
-
-    private fun setupColorSimIcons() {
-        settings_color_sim_card_icons_holder.beGoneIf(!areMultipleSIMsAvailable())
-        settings_color_sim_card_icons.isChecked = config.colorSimIcons
-        settings_color_sim_card_icons_holder.setOnClickListener {
-            settings_color_sim_card_icons.toggle()
-            config.colorSimIcons = settings_color_sim_card_icons.isChecked
-        }
-    }
-
-    private fun setupOpenSearch() {
-        settings_open_search.isChecked = config.openSearch
-        settings_open_search_holder.setOnClickListener {
-            settings_open_search.toggle()
-            config.openSearch = settings_open_search.isChecked
-        }
-    }
-
-    private fun setupTipJar() {
-        settings_tip_jar_holder.beVisibleIf(isOrWasThankYouInstalled() || isProVersion())
-        settings_tip_jar_chevron.applyColorFilter(getProperTextColor())
-        settings_tip_jar_holder.setOnClickListener {
-            launchPurchase()
-        }
-    }
-
-    private fun setupAbout() {
-        settings_about_chevron.applyColorFilter(getProperTextColor())
-        settings_about_version.text = "Version: " + BuildConfig.VERSION_NAME
-        settings_about_holder.setOnClickListener {
-            launchAbout()
-        }
-    }
-
-    private fun launchAbout() {
-        val licenses = LICENSE_GLIDE or LICENSE_INDICATOR_FAST_SCROLL
-
-        val faqItems = arrayListOf(
-            FAQItem(R.string.faq_2_title_commons, R.string.faq_2_text_commons_g),
-            //FAQItem(R.string.faq_6_title_commons, R.string.faq_6_text_commons),
-            FAQItem(R.string.faq_7_title_commons, R.string.faq_7_text_commons),
-            FAQItem(R.string.faq_9_title_commons, R.string.faq_9_text_commons)
-        )
-
-        startAboutActivity(R.string.app_name_g, licenses, BuildConfig.VERSION_NAME, faqItems, true, BuildConfig.GOOGLE_PLAY_LICENSING_KEY, BuildConfig.PRODUCT_ID_X1, BuildConfig.PRODUCT_ID_X2, BuildConfig.PRODUCT_ID_X3)
-    }
-
-    private fun launchPurchase() {
-        startPurchaseActivity(R.string.app_name_g, BuildConfig.GOOGLE_PLAY_LICENSING_KEY, BuildConfig.PRODUCT_ID_X1, BuildConfig.PRODUCT_ID_X2, BuildConfig.PRODUCT_ID_X3)
-    }
-
-    private fun setupDisableProximitySensor() {
-        settings_disable_proximity_sensor.isChecked = config.disableProximitySensor
-        settings_disable_proximity_sensor_holder.setOnClickListener {
-            settings_disable_proximity_sensor.toggle()
-            config.disableProximitySensor = settings_disable_proximity_sensor.isChecked
-        }
-    }
-
-    private fun setupDialpadVibrations() {
-        settings_dialpad_vibration.isChecked = config.dialpadVibration
-        settings_dialpad_vibration_holder.setOnClickListener {
-            settings_dialpad_vibration.toggle()
-            config.dialpadVibration = settings_dialpad_vibration.isChecked
-        }
-    }
-
-    private fun setupDialpadBeeps() {
-        settings_dialpad_beeps.isChecked = config.dialpadBeeps
-        settings_dialpad_beeps_holder.setOnClickListener {
-            settings_dialpad_beeps.toggle()
-            config.dialpadBeeps = settings_dialpad_beeps.isChecked
-        }
-    }
-
-    private fun setupDisableSwipeToAnswer() {
-        settings_disable_swipe_to_answer.isChecked = config.disableSwipeToAnswer
-        settings_disable_swipe_to_answer_holder.setOnClickListener {
-            settings_disable_swipe_to_answer.toggle()
-            config.disableSwipeToAnswer = settings_disable_swipe_to_answer.isChecked
-        }
-    }
-
-    private fun setupUseRelativeDate() {
-        settings_relative_date.isChecked = config.useRelativeDate
-        settings_relative_date_holder.setOnClickListener {
-            settings_relative_date.toggle()
-            config.useRelativeDate = settings_relative_date.isChecked
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/activities/SimpleActivity.kt b/app/src/main/kotlin/com/goodwy/dialer/activities/SimpleActivity.kt
deleted file mode 100755
index 7acb356..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/activities/SimpleActivity.kt
+++ /dev/null
@@ -1,30 +0,0 @@
-package com.goodwy.dialer.activities
-
-import com.goodwy.commons.activities.BaseSimpleActivity
-import com.goodwy.dialer.R
-
-open class SimpleActivity : BaseSimpleActivity() {
-    override fun getAppIconIDs() = arrayListOf(
-        R.mipmap.ic_launcher_red,
-        R.mipmap.ic_launcher_pink,
-        R.mipmap.ic_launcher_purple,
-        R.mipmap.ic_launcher_deep_purple,
-        R.mipmap.ic_launcher_indigo,
-        R.mipmap.ic_launcher_blue,
-        R.mipmap.ic_launcher_light_blue,
-        R.mipmap.ic_launcher_cyan,
-        R.mipmap.ic_launcher_teal,
-        R.mipmap.ic_launcher_green,
-        R.mipmap.ic_launcher_light_green,
-        R.mipmap.ic_launcher_lime,
-        R.mipmap.ic_launcher_yellow,
-        R.mipmap.ic_launcher_amber,
-        R.mipmap.ic_launcher,
-        R.mipmap.ic_launcher_deep_orange,
-        R.mipmap.ic_launcher_brown,
-        R.mipmap.ic_launcher_blue_grey,
-        R.mipmap.ic_launcher_grey_black
-    )
-
-    override fun getAppLauncherName() = getString(R.string.app_launcher_name)
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/activities/SplashActivity.kt b/app/src/main/kotlin/com/goodwy/dialer/activities/SplashActivity.kt
deleted file mode 100755
index 6c61c07..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/activities/SplashActivity.kt
+++ /dev/null
@@ -1,11 +0,0 @@
-package com.goodwy.dialer.activities
-
-import android.content.Intent
-import com.goodwy.commons.activities.BaseSplashActivity
-
-class SplashActivity : BaseSplashActivity() {
-    override fun initActivity() {
-        startActivity(Intent(this, MainActivity::class.java))
-        finish()
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/adapters/ConferenceCallsAdapter.kt b/app/src/main/kotlin/com/goodwy/dialer/adapters/ConferenceCallsAdapter.kt
deleted file mode 100755
index 229b845..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/adapters/ConferenceCallsAdapter.kt
+++ /dev/null
@@ -1,93 +0,0 @@
-package com.goodwy.dialer.adapters
-
-import android.telecom.Call
-import android.view.Menu
-import android.view.ViewGroup
-import com.bumptech.glide.Glide
-import com.goodwy.commons.adapters.MyRecyclerViewAdapter
-import com.goodwy.commons.extensions.applyColorFilter
-import com.goodwy.commons.extensions.getProperPrimaryColor
-import com.goodwy.commons.helpers.LOWER_ALPHA
-import com.goodwy.commons.helpers.SimpleContactsHelper
-import com.goodwy.commons.views.MyRecyclerView
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.extensions.hasCapability
-import com.goodwy.dialer.helpers.getCallContact
-import kotlinx.android.synthetic.main.item_conference_call.view.*
-
-class ConferenceCallsAdapter(
-    activity: SimpleActivity, recyclerView: MyRecyclerView, val data: ArrayList<Call>, itemClick: (Any) -> Unit
-) : MyRecyclerViewAdapter(activity, recyclerView, itemClick) {
-
-    override fun actionItemPressed(id: Int) {}
-
-    override fun getActionMenuId(): Int = 0
-
-    override fun getIsItemSelectable(position: Int): Boolean = false
-
-    override fun getItemCount(): Int = data.size
-
-    override fun getItemKeyPosition(key: Int): Int = -1
-
-    override fun getItemSelectionKey(position: Int): Int? = null
-
-    override fun getSelectableItemCount(): Int = data.size
-
-    override fun onActionModeCreated() {}
-
-    override fun onActionModeDestroyed() {}
-
-    override fun prepareActionMode(menu: Menu) {}
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int) = createViewHolder(R.layout.item_conference_call, parent)
-
-    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
-        val call = data[position]
-        holder.bindView(call, allowSingleClick = false, allowLongClick = false) { itemView, _ ->
-            getCallContact(itemView.context, call) { callContact ->
-                itemView.post {
-                    itemView.item_conference_call_name.setTextColor(textColor)
-                    itemView.item_conference_call_name.text = callContact.name.ifEmpty { itemView.context.getString(R.string.unknown_caller) }
-                    SimpleContactsHelper(activity.applicationContext).loadContactImage(
-                        callContact.photoUri,
-                        itemView.item_conference_call_image,
-                        callContact.name
-                    )
-                }
-            }
-            val canSeparate = call.hasCapability(Call.Details.CAPABILITY_SEPARATE_FROM_CONFERENCE)
-            val canDisconnect = call.hasCapability(Call.Details.CAPABILITY_DISCONNECT_FROM_CONFERENCE)
-            itemView.item_conference_call_split.applyColorFilter(textColor)
-            itemView.item_conference_call_split.isEnabled = canSeparate
-            itemView.item_conference_call_split.alpha = if (canSeparate) 1.0f else LOWER_ALPHA
-            itemView.item_conference_call_split.setOnClickListener {
-                call.splitFromConference()
-                data.removeAt(position)
-                notifyItemRemoved(position)
-                if (data.size == 1) {
-                    activity.finish()
-                }
-            }
-            //itemView.item_conference_call_end.applyColorFilter(textColor)
-            itemView.item_conference_call_end.isEnabled = canDisconnect
-            itemView.item_conference_call_end.alpha = if (canDisconnect) 1.0f else LOWER_ALPHA
-            itemView.item_conference_call_end.setOnClickListener {
-                call.disconnect()
-                data.removeAt(position)
-                notifyItemRemoved(position)
-                if (data.size == 1) {
-                    activity.finish()
-                }
-            }
-        }
-        bindViewHolder(holder)
-    }
-
-    override fun onViewRecycled(holder: ViewHolder) {
-        super.onViewRecycled(holder)
-        if (!activity.isDestroyed && !activity.isFinishing) {
-            Glide.with(activity).clear(holder.itemView.item_conference_call_image)
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/adapters/ContactsAdapter.kt b/app/src/main/kotlin/com/goodwy/dialer/adapters/ContactsAdapter.kt
deleted file mode 100755
index b04e25a..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/adapters/ContactsAdapter.kt
+++ /dev/null
@@ -1,381 +0,0 @@
-package com.goodwy.dialer.adapters
-
-import android.annotation.SuppressLint
-import android.content.Intent
-import android.content.pm.ShortcutInfo
-import android.graphics.drawable.Icon
-import android.net.Uri
-import android.text.TextUtils
-import android.util.TypedValue
-import android.view.Menu
-import android.view.MotionEvent
-import android.view.View
-import android.view.ViewGroup
-import android.widget.FrameLayout
-import android.widget.ImageView
-import android.widget.TextView
-import androidx.recyclerview.widget.ItemTouchHelper
-import androidx.recyclerview.widget.RecyclerView
-import com.bumptech.glide.Glide
-import com.goodwy.commons.adapters.MyRecyclerViewAdapter
-import com.goodwy.commons.dialogs.ConfirmationDialog
-import com.goodwy.commons.dialogs.FeatureLockedDialog
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.PERMISSION_CALL_PHONE
-import com.goodwy.commons.helpers.PERMISSION_WRITE_CONTACTS
-import com.goodwy.commons.helpers.SimpleContactsHelper
-import com.goodwy.commons.helpers.isOreoPlus
-import com.goodwy.commons.interfaces.ItemMoveCallback
-import com.goodwy.commons.interfaces.ItemTouchHelperContract
-import com.goodwy.commons.interfaces.StartReorderDragListener
-import com.goodwy.commons.models.contacts.Contact
-import com.goodwy.commons.views.MyRecyclerView
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.extensions.areMultipleSIMsAvailable
-import com.goodwy.dialer.extensions.callContactWithSim
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.extensions.startContactDetailsIntent
-import com.goodwy.dialer.interfaces.RefreshItemsListener
-import java.util.*
-
-class ContactsAdapter(
-    activity: SimpleActivity,
-    var contacts: ArrayList<Contact>,
-    recyclerView: MyRecyclerView,
-    val refreshItemsListener: RefreshItemsListener? = null,
-    highlightText: String = "",
-    val showDeleteButton: Boolean = true,
-    private val enableDrag: Boolean = false,
-    val showIcon: Boolean = true,
-    val showNumber: Boolean = false,
-    val allowLongClick: Boolean = true,
-    itemClick: (Any) -> Unit
-    ) : MyRecyclerViewAdapter(activity, recyclerView, itemClick), ItemTouchHelperContract {
-
-    private var textToHighlight = highlightText
-    private var fontSize = activity.getTextSize()
-    private var touchHelper: ItemTouchHelper? = null
-    private var startReorderDragListener: StartReorderDragListener? = null
-    var onDragEndListener: (() -> Unit)? = null
-
-    init {
-        setupDragListener(true)
-
-        if (enableDrag) {
-            touchHelper = ItemTouchHelper(ItemMoveCallback(this))
-            touchHelper!!.attachToRecyclerView(recyclerView)
-
-            startReorderDragListener = object : StartReorderDragListener {
-                override fun requestDrag(viewHolder: RecyclerView.ViewHolder) {
-                    touchHelper?.startDrag(viewHolder)
-                }
-            }
-        }
-    }
-
-    override fun getActionMenuId() = R.menu.cab_contacts
-
-    override fun prepareActionMode(menu: Menu) {
-        val hasMultipleSIMs = activity.areMultipleSIMsAvailable()
-        val isOneItemSelected = isOneItemSelected()
-        val selectedNumber = "tel:${getSelectedPhoneNumber()}"
-
-        menu.apply {
-            findItem(R.id.cab_call_sim_1).isVisible = hasMultipleSIMs && isOneItemSelected
-            findItem(R.id.cab_call_sim_2).isVisible = hasMultipleSIMs && isOneItemSelected
-            findItem(R.id.cab_remove_default_sim).isVisible = isOneItemSelected && activity.config.getCustomSIM(selectedNumber) != ""
-
-            findItem(R.id.cab_delete).isVisible = showDeleteButton
-            findItem(R.id.cab_create_shortcut).title = activity.getString(R.string.create_shortcut)//activity.addLockedLabelIfNeeded(R.string.create_shortcut)
-            findItem(R.id.cab_create_shortcut).isVisible = isOneItemSelected && isOreoPlus()
-            findItem(R.id.cab_view_details).isVisible = isOneItemSelected
-        }
-    }
-
-    override fun actionItemPressed(id: Int) {
-        if (selectedKeys.isEmpty()) {
-            return
-        }
-
-        when (id) {
-            R.id.cab_call_sim_1 -> callContact(true)
-            R.id.cab_call_sim_2 -> callContact(false)
-            R.id.cab_remove_default_sim -> removeDefaultSIM()
-            R.id.cab_delete -> askConfirmDelete()
-            R.id.cab_send_sms -> sendSMS()
-            R.id.cab_view_details -> viewContactDetails()
-            R.id.cab_create_shortcut -> tryCreateShortcut()
-            R.id.cab_select_all -> selectAll()
-        }
-    }
-
-    override fun getSelectableItemCount() = contacts.size
-
-    override fun getIsItemSelectable(position: Int) = true
-
-    override fun getItemSelectionKey(position: Int) = contacts.getOrNull(position)?.rawId
-
-    override fun getItemKeyPosition(key: Int) = contacts.indexOfFirst { it.rawId == key }
-
-    override fun onActionModeCreated() {
-        notifyDataSetChanged()
-    }
-
-    override fun onActionModeDestroyed() {
-        notifyDataSetChanged()
-    }
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int) = createViewHolder(R.layout.item_contact_with_number_info, parent)
-
-    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
-        val contact = contacts[position]
-        holder.bindView(contact, true, allowLongClick) { itemView, layoutPosition ->
-            setupView(itemView, contact, holder)
-        }
-        bindViewHolder(holder)
-    }
-
-    override fun getItemCount() = contacts.size
-
-    fun updateItems(newItems: ArrayList<Contact>, highlightText: String = "") {
-        if (newItems.hashCode() != contacts.hashCode()) {
-            contacts = newItems.clone() as ArrayList<Contact>
-            textToHighlight = highlightText
-            notifyDataSetChanged()
-            finishActMode()
-        } else if (textToHighlight != highlightText) {
-            textToHighlight = highlightText
-            notifyDataSetChanged()
-        }
-    }
-
-    @SuppressLint("MissingPermission")
-    private fun callContact(useSimOne: Boolean) {
-        val number = getSelectedPhoneNumber() ?: return
-        activity.callContactWithSim(number, useSimOne)
-    }
-
-    private fun removeDefaultSIM() {
-        val phoneNumber = getSelectedPhoneNumber() ?: return
-        activity.config.removeCustomSIM("tel:$phoneNumber")
-        finishActMode()
-    }
-
-    private fun sendSMS() {
-        val numbers = ArrayList<String>()
-        getSelectedItems().map { simpleContact ->
-            val contactNumbers = simpleContact.phoneNumbers
-            val primaryNumber = contactNumbers.firstOrNull { it.isPrimary }
-            val normalizedNumber = primaryNumber?.normalizedNumber ?: contactNumbers.firstOrNull()?.normalizedNumber
-
-            if (normalizedNumber != null) {
-                numbers.add(normalizedNumber)
-            }
-        }
-
-        val recipient = TextUtils.join(";", numbers)
-        activity.launchSendSMSIntent(recipient)
-    }
-
-    private fun viewContactDetails() {
-        val contact = getSelectedItems().firstOrNull() ?: return
-        activity.startContactDetailsIntent(contact)
-    }
-
-    private fun askConfirmDelete() {
-        val itemsCnt = selectedKeys.size
-        val firstItem = getSelectedItems().firstOrNull() ?: return
-        val items = if (itemsCnt == 1) {
-            "\"${firstItem.getNameToDisplay()}\""
-        } else {
-            resources.getQuantityString(R.plurals.delete_contacts, itemsCnt, itemsCnt)
-        }
-
-        val baseString = R.string.deletion_confirmation
-        val question = String.format(resources.getString(baseString), items)
-
-        ConfirmationDialog(activity, question) {
-            activity.handlePermission(PERMISSION_WRITE_CONTACTS) {
-                deleteContacts()
-            }
-        }
-    }
-
-    private fun deleteContacts() {
-        if (selectedKeys.isEmpty()) {
-            return
-        }
-
-        val contactsToRemove = getSelectedItems()
-        val positions = getSelectedItemPositions()
-        contacts.removeAll(contactsToRemove)
-        val idsToRemove = contactsToRemove.map { it.rawId }.toMutableList() as ArrayList<Int>
-
-        SimpleContactsHelper(activity).deleteContactRawIDs(idsToRemove) {
-            activity.runOnUiThread {
-                if (contacts.isEmpty()) {
-                    refreshItemsListener?.refreshItems()
-                    finishActMode()
-                } else {
-                    removeSelectedItems(positions)
-                }
-            }
-        }
-    }
-
-    private fun getSelectedItems() = contacts.filter { selectedKeys.contains(it.rawId) } as ArrayList<Contact>
-
-    private fun getLastItem() = contacts.last()
-
-    private fun getSelectedPhoneNumber(): String? {
-//        val numbers = getSelectedItems().firstOrNull()?.phoneNumbers
-//        val primaryNumber = numbers?.firstOrNull { it.isPrimary }
-//        return primaryNumber?.normalizedNumber ?: numbers?.firstOrNull()?.normalizedNumber
-        return getSelectedItems().firstOrNull()?.getPrimaryNumber()
-    }
-
-    private fun tryCreateShortcut() {
-        /*if (activity.isOrWasThankYouInstalled()) {
-            createShortcut()
-        } else {
-            FeatureLockedDialog(activity) { }
-        }*/
-        createShortcut()
-    }
-
-    @SuppressLint("NewApi")
-    private fun createShortcut() {
-        val contact = contacts.firstOrNull { selectedKeys.contains(it.rawId) } ?: return
-        val manager = activity.shortcutManager
-        if (manager.isRequestPinShortcutSupported) {
-            SimpleContactsHelper(activity).getShortcutImage(contact.photoUri, contact.getNameToDisplay()) { image ->
-                activity.runOnUiThread {
-                    activity.handlePermission(PERMISSION_CALL_PHONE) { hasPermission ->
-                        val action = if (hasPermission) Intent.ACTION_CALL else Intent.ACTION_DIAL
-                        val intent = Intent(action).apply {
-                            data = Uri.fromParts("tel", getSelectedPhoneNumber(), null)
-                        }
-
-                        val shortcut = ShortcutInfo.Builder(activity, contact.hashCode().toString())
-                            .setShortLabel(contact.getNameToDisplay())
-                            .setIcon(Icon.createWithBitmap(image))
-                            .setIntent(intent)
-                            .build()
-
-                        manager.requestPinShortcut(shortcut, null)
-                    }
-                }
-            }
-        }
-    }
-
-    override fun onViewRecycled(holder: ViewHolder) {
-        super.onViewRecycled(holder)
-        if (!activity.isDestroyed && !activity.isFinishing) {
-            Glide.with(activity).clear(holder.itemView.findViewById<ImageView>(R.id.item_contact_image))
-        }
-    }
-
-    private fun setupView(view: View, contact: Contact, holder: ViewHolder) {
-        view.apply {
-            findViewById<ImageView>(R.id.divider)?.setBackgroundColor(textColor)
-            if (getLastItem() == contact || !context.config.useDividers) findViewById<ImageView>(R.id.divider)?.beInvisible() else findViewById<ImageView>(R.id.divider)?.beVisible()
-
-            findViewById<FrameLayout>(R.id.item_contact_frame).isSelected = selectedKeys.contains(contact.rawId)
-            findViewById<TextView>(R.id.item_contact_name).apply {
-                setTextColor(textColor)
-                setTextSize(TypedValue.COMPLEX_UNIT_PX, fontSize)
-
-                val name = contact.getNameToDisplay()
-                text = if (textToHighlight.isEmpty()) name else {
-                    if (name.contains(textToHighlight, true)) {
-                        name.highlightTextPart(textToHighlight, properPrimaryColor)
-                    } else {
-                        name.highlightTextFromNumbers(textToHighlight, properPrimaryColor)
-                    }
-                }
-
-            }
-            findViewById<TextView>(R.id.item_contact_number).apply {
-                beGoneIf(!showNumber)
-                setTextColor(textColor)
-                setTextSize(TypedValue.COMPLEX_UNIT_PX, fontSize * 0.8f)
-
-//                val numbers = contact.phoneNumbers.firstOrNull {
-//                    it.normalizedNumber.contains(textToHighlight)
-//                }
-//                text = if (textToHighlight.isEmpty()) "" else {
-//                    numbers?.value?.highlightTextFromNumbers(textToHighlight, context.getProperPrimaryColor()) ?: ""
-//                }
-                val phoneNumberToUse = if (textToHighlight.isEmpty()) {
-                    contact.phoneNumbers.firstOrNull { it.isPrimary } ?: contact.phoneNumbers.firstOrNull()
-                } else {
-                    contact.phoneNumbers.firstOrNull { it.value.contains(textToHighlight) } ?: contact.phoneNumbers.firstOrNull()
-                }
-
-                val numberText = phoneNumberToUse?.value ?: ""
-                text = if (textToHighlight.isEmpty()) numberText else numberText.highlightTextPart(textToHighlight, properPrimaryColor, false, true)
-            }
-            findViewById<ImageView>(R.id.item_contact_info).applyColorFilter(context.getProperPrimaryColor())
-            findViewById<FrameLayout>(R.id.item_contact_info_holder).apply {
-                beVisibleIf(showIcon && selectedKeys.isEmpty())
-                setOnClickListener {
-                    viewContactInfo(contact)
-                }
-            }
-
-            val dragIcon = findViewById<ImageView>(R.id.drag_handle_icon)
-            if (enableDrag && textToHighlight.isEmpty()) {
-                dragIcon.apply {
-                    beVisibleIf(selectedKeys.isNotEmpty())
-                    applyColorFilter(textColor)
-                    setOnTouchListener { _, event ->
-                        if (event.action == MotionEvent.ACTION_DOWN) {
-                            startReorderDragListener?.requestDrag(holder)
-                        }
-                        false
-                    }
-                }
-            } else {
-                dragIcon.apply {
-                    beGone()
-                    setOnTouchListener(null)
-                }
-            }
-
-            if (!activity.isDestroyed) {
-                findViewById<ImageView>(R.id.item_contact_image).beVisibleIf(activity.config.showContactThumbnails)
-                if (activity.config.showContactThumbnails) {
-                    SimpleContactsHelper(context).loadContactImage(contact.photoUri, findViewById(R.id.item_contact_image), contact.getNameToDisplay())
-                }
-            }
-        }
-    }
-
-    override fun onRowMoved(fromPosition: Int, toPosition: Int) {
-        activity.config.isCustomOrderSelected = true
-
-        if (fromPosition < toPosition) {
-            for (i in fromPosition until toPosition) {
-                Collections.swap(contacts, i, i + 1)
-            }
-        } else {
-            for (i in fromPosition downTo toPosition + 1) {
-                Collections.swap(contacts, i, i - 1)
-            }
-        }
-
-        notifyItemMoved(fromPosition, toPosition)
-    }
-
-    override fun onRowSelected(myViewHolder: ViewHolder?) {}
-
-    override fun onRowClear(myViewHolder: ViewHolder?) {
-        onDragEndListener?.invoke()
-    }
-
-    private fun viewContactInfo(contact: Contact) {
-        activity.startContactDetailsIntent(contact)
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/adapters/FilterContactSourcesAdapter.kt b/app/src/main/kotlin/com/goodwy/dialer/adapters/FilterContactSourcesAdapter.kt
deleted file mode 100644
index a058e7b..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/adapters/FilterContactSourcesAdapter.kt
+++ /dev/null
@@ -1,78 +0,0 @@
-package com.goodwy.dialer.adapters
-
-import android.view.View
-import android.view.ViewGroup
-import androidx.recyclerview.widget.RecyclerView
-import com.goodwy.commons.extensions.getProperBackgroundColor
-import com.goodwy.commons.extensions.getProperPrimaryColor
-import com.goodwy.commons.extensions.getProperTextColor
-import com.goodwy.commons.helpers.SMT_PRIVATE
-import com.goodwy.commons.models.contacts.ContactSource
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import kotlinx.android.synthetic.main.item_filter_contact_source.view.*
-
-class FilterContactSourcesAdapter(
-    val activity: SimpleActivity,
-    private val contactSources: List<ContactSource>,
-    private val displayContactSources: ArrayList<String>
-) : RecyclerView.Adapter<FilterContactSourcesAdapter.ViewHolder>() {
-
-    private val selectedKeys = HashSet<Int>()
-
-    init {
-        contactSources.forEachIndexed { index, contactSource ->
-            if (displayContactSources.contains(contactSource.name)) {
-                selectedKeys.add(contactSource.hashCode())
-            }
-
-            if (contactSource.type == SMT_PRIVATE && displayContactSources.contains(SMT_PRIVATE)) {
-                selectedKeys.add(contactSource.hashCode())
-            }
-        }
-    }
-
-    private fun toggleItemSelection(select: Boolean, contactSource: ContactSource, position: Int) {
-        if (select) {
-            selectedKeys.add(contactSource.hashCode())
-        } else {
-            selectedKeys.remove(contactSource.hashCode())
-        }
-
-        notifyItemChanged(position)
-    }
-
-    fun getSelectedContactSources() = contactSources.filter { selectedKeys.contains(it.hashCode()) }
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
-        val view = activity.layoutInflater.inflate(R.layout.item_filter_contact_source, parent, false)
-        return ViewHolder(view)
-    }
-
-    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
-        val contactSource = contactSources[position]
-        holder.bindView(contactSource)
-    }
-
-    override fun getItemCount() = contactSources.size
-
-    inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {
-        fun bindView(contactSource: ContactSource): View {
-            val isSelected = selectedKeys.contains(contactSource.hashCode())
-            itemView.apply {
-                filter_contact_source_checkbox.isChecked = isSelected
-                filter_contact_source_checkbox.setColors(activity.getProperTextColor(), activity.getProperPrimaryColor(), activity.getProperBackgroundColor())
-                val countText = if (contactSource.count >= 0) " (${contactSource.count})" else ""
-                val displayName = "${contactSource.publicName}$countText"
-                filter_contact_source_checkbox.text = displayName
-                filter_contact_source_holder.setOnClickListener { viewClicked(!isSelected, contactSource) }
-            }
-
-            return itemView
-        }
-
-        private fun viewClicked(select: Boolean, contactSource: ContactSource) {
-            toggleItemSelection(select, contactSource, adapterPosition)
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/adapters/RecentCallsAdapter.kt b/app/src/main/kotlin/com/goodwy/dialer/adapters/RecentCallsAdapter.kt
deleted file mode 100755
index 5d9710e..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/adapters/RecentCallsAdapter.kt
+++ /dev/null
@@ -1,583 +0,0 @@
-package com.goodwy.dialer.adapters
-
-import android.content.Intent
-import android.graphics.drawable.Drawable
-import android.provider.CallLog.Calls
-import android.text.SpannableString
-import android.text.TextUtils
-import android.text.format.DateUtils
-import android.util.TypedValue
-import android.view.*
-import android.widget.PopupMenu
-import com.bumptech.glide.Glide
-import com.goodwy.commons.adapters.MyRecyclerViewAdapter
-import com.goodwy.commons.dialogs.ConfirmationDialog
-import com.goodwy.commons.dialogs.FeatureLockedDialog
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.*
-import com.goodwy.commons.models.contacts.Contact
-import com.goodwy.commons.views.MyRecyclerView
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.CallHistoryActivity
-import com.goodwy.dialer.activities.MainActivity
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.dialogs.ShowGroupedCallsDialog
-import com.goodwy.dialer.extensions.*
-import com.goodwy.dialer.helpers.RecentsHelper
-import com.goodwy.dialer.interfaces.RefreshItemsListener
-import com.goodwy.dialer.models.RecentCall
-import kotlinx.android.synthetic.main.item_call_history.view.*
-import kotlinx.android.synthetic.main.item_recent_call.view.*
-import kotlinx.android.synthetic.main.item_recent_call.view.item_recents_date_time
-import kotlinx.android.synthetic.main.item_recent_call.view.item_recents_duration
-import kotlinx.android.synthetic.main.item_recent_call.view.item_recents_frame
-import kotlinx.android.synthetic.main.item_recent_call.view.item_recents_image
-import kotlinx.android.synthetic.main.item_recent_call.view.item_recents_info
-import kotlinx.android.synthetic.main.item_recent_call.view.item_recents_name
-import kotlinx.android.synthetic.main.item_recent_call.view.item_recents_number
-import kotlinx.android.synthetic.main.item_recent_call.view.item_recents_sim_id
-import kotlinx.android.synthetic.main.item_recent_call.view.item_recents_sim_image
-import kotlinx.android.synthetic.main.item_recent_call.view.item_recents_type
-import kotlin.time.Duration.Companion.days
-import kotlin.time.Duration.Companion.minutes
-
-class RecentCallsAdapter(
-    activity: SimpleActivity,
-    var recentCalls: ArrayList<RecentCall>,
-    recyclerView: MyRecyclerView,
-    private val refreshItemsListener: RefreshItemsListener?,
-    private val showOverflowMenu: Boolean = false,
-    private val showIcon: Boolean = false,
-    private val hideTimeAtOtherDays: Boolean = false,
-    itemClick: (Any) -> Unit
-) : MyRecyclerViewAdapter(activity, recyclerView, itemClick) {
-
-    private lateinit var outgoingCallIcon: Drawable
-    private lateinit var incomingCallIcon: Drawable
-    private lateinit var incomingMissedCallIcon: Drawable
-    private lateinit var outgoingCallText: String
-    private lateinit var incomingCallText: String
-    private lateinit var incomingMissedCallText: String
-    private lateinit var infoIcon: Drawable
-    private var fontSize = activity.getTextSize()
-    private val areMultipleSIMsAvailable = activity.areMultipleSIMsAvailable()
-    private val redColor = resources.getColor(R.color.red_missed) //md_red_700
-    private var textToHighlight = ""
-    private var durationPadding = resources.getDimension(R.dimen.normal_margin).toInt()
-
-    init {
-        initDrawables()
-        initString()
-        setupDragListener(true)
-    }
-
-    override fun getActionMenuId() = R.menu.cab_recent_calls
-
-    override fun prepareActionMode(menu: Menu) {
-        val hasMultipleSIMs = activity.areMultipleSIMsAvailable()
-        val selectedItems = getSelectedItems()
-        val isOneItemSelected = selectedItems.size == 1
-        val selectedNumber = "tel:${getSelectedPhoneNumber()}"
-
-        menu.apply {
-            findItem(R.id.cab_call_sim_1).isVisible = hasMultipleSIMs && isOneItemSelected && showIcon
-            findItem(R.id.cab_call_sim_2).isVisible = hasMultipleSIMs && isOneItemSelected && showIcon
-            findItem(R.id.cab_remove_default_sim).isVisible = isOneItemSelected && activity.config.getCustomSIM(selectedNumber) != "" && showIcon
-
-            findItem(R.id.cab_block_number).title = activity.getString(R.string.block_number)//activity.addLockedLabelIfNeeded(R.string.block_number)
-            findItem(R.id.cab_block_number).isVisible = isNougatPlus() && showIcon
-            findItem(R.id.cab_add_number).isVisible = isOneItemSelected && showIcon
-            findItem(R.id.cab_send_sms).isVisible = showIcon
-            findItem(R.id.cab_show_call_details).isVisible = isOneItemSelected && showIcon
-            findItem(R.id.cab_copy_number).isVisible = isOneItemSelected && showIcon
-            //findItem(R.id.cab_remove).isVisible = showIcon
-            //findItem(R.id.cab_select_all).isVisible = showIcon
-            findItem(R.id.cab_view_details)?.isVisible = isOneItemSelected && findContactByCall(selectedItems.first()) != null
-        }
-    }
-
-    override fun actionItemPressed(id: Int) {
-        if (selectedKeys.isEmpty()) {
-            return
-        }
-
-        when (id) {
-            R.id.cab_call_sim_1 -> callContact(true)
-            R.id.cab_call_sim_2 -> callContact(false)
-            R.id.cab_remove_default_sim -> removeDefaultSIM()
-            R.id.cab_block_number -> tryBlocking()
-            R.id.cab_add_number -> addNumberToContact()
-            R.id.cab_send_sms -> sendSMS()
-            R.id.cab_show_call_details -> showCallDetails()
-            R.id.cab_copy_number -> copyNumber()
-            R.id.cab_remove -> askConfirmRemove()
-            R.id.cab_select_all -> selectAll()
-            R.id.cab_view_details -> launchContactDetailsIntent(findContactByCall(getSelectedItems().first()))
-        }
-    }
-
-    override fun getSelectableItemCount() = recentCalls.size
-
-    override fun getIsItemSelectable(position: Int) = true
-
-    override fun getItemSelectionKey(position: Int) = recentCalls.getOrNull(position)?.id
-
-    override fun getItemKeyPosition(key: Int) = recentCalls.indexOfFirst { it.id == key }
-
-    override fun onActionModeCreated() {}
-
-    override fun onActionModeDestroyed() {}
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int) = if (showIcon) createViewHolder(R.layout.item_recent_call, parent) else createViewHolder(R.layout.item_call_history, parent)
-
-    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
-        val recentCall = recentCalls[position]
-        holder.bindView(recentCall, refreshItemsListener != null, refreshItemsListener != null) { itemView, layoutPosition ->
-            setupView(itemView, recentCall)
-        }
-        bindViewHolder(holder)
-    }
-
-    override fun getItemCount() = recentCalls.size
-
-    override fun onViewRecycled(holder: ViewHolder) {
-        super.onViewRecycled(holder)
-        if (!activity.isDestroyed && !activity.isFinishing && holder.itemView.item_recents_image != null) {
-            Glide.with(activity).clear(holder.itemView.item_recents_image)
-        }
-    }
-
-    fun initDrawables() {
-        outgoingCallIcon = resources.getColoredDrawableWithColor(R.drawable.ic_outgoing_call_vector, activity.getProperTextColor())
-        incomingCallIcon = resources.getColoredDrawableWithColor(R.drawable.ic_incoming_call_vector, activity.getProperTextColor())
-        incomingMissedCallIcon = resources.getColoredDrawableWithColor(R.drawable.ic_missed_call_vector, activity.getProperTextColor())
-        infoIcon = resources.getColoredDrawableWithColor(R.drawable.ic_info, activity.getProperPrimaryColor())
-    }
-
-    fun initString() {
-        outgoingCallText = resources.getString(R.string.outgoing_call)
-        incomingCallText = resources.getString(R.string.incoming_call)
-        incomingMissedCallText = resources.getString(R.string.missed_call)
-    }
-
-    private fun callContact(useSimOne: Boolean) {
-        val phoneNumber = getSelectedPhoneNumber() ?: return
-        activity.callContactWithSim(phoneNumber, useSimOne)
-    }
-
-    private fun callContact() {
-        val phoneNumber = getSelectedPhoneNumber() ?: return
-        (activity as SimpleActivity).startCallIntent(phoneNumber)
-    }
-
-    private fun removeDefaultSIM() {
-        val phoneNumber = getSelectedPhoneNumber() ?: return
-        activity.config.removeCustomSIM("tel:$phoneNumber")
-        finishActMode()
-    }
-
-    private fun tryBlocking() {
-        /*if (activity.isOrWasThankYouInstalled()) {
-            askConfirmBlock()
-        } else {
-            FeatureLockedDialog(activity) { }
-        }*/
-        askConfirmBlock()
-    }
-
-    private fun askConfirmBlock() {
-        val numbers = TextUtils.join(", ", getSelectedItems().distinctBy { it.phoneNumber }.map { it.phoneNumber })
-        val baseString = R.string.block_confirmation
-        val question = String.format(resources.getString(baseString), numbers)
-
-        ConfirmationDialog(activity, question) {
-            blockNumbers()
-        }
-    }
-
-    private fun blockNumbers() {
-        if (selectedKeys.isEmpty()) {
-            return
-        }
-
-        val callsToBlock = getSelectedItems()
-        val positions = getSelectedItemPositions()
-        recentCalls.removeAll(callsToBlock)
-
-        ensureBackgroundThread {
-            callsToBlock.map { it.phoneNumber }.forEach { number ->
-                activity.addBlockedNumber(number)
-            }
-
-            activity.runOnUiThread {
-                removeSelectedItems(positions)
-                finishActMode()
-            }
-        }
-    }
-
-    private fun addNumberToContact() {
-        val phoneNumber = getSelectedPhoneNumber() ?: return
-        Intent().apply {
-            action = Intent.ACTION_INSERT_OR_EDIT
-            type = "vnd.android.cursor.item/contact"
-            putExtra(KEY_PHONE, phoneNumber)
-            activity.launchActivityIntent(this)
-        }
-    }
-
-    private fun sendSMS() {
-        val numbers = getSelectedItems().map { it.phoneNumber }
-        val recipient = TextUtils.join(";", numbers)
-        activity.launchSendSMSIntent(recipient)
-    }
-
-    private fun showCallDetails() {
-        val recentCall = getSelectedItems().firstOrNull() ?: return
-        val callIds = recentCall.neighbourIDs.map { it }.toMutableList() as ArrayList<Int>
-        callIds.add(recentCall.id)
-        ShowGroupedCallsDialog(activity, callIds)
-    }
-
-    private fun copyNumber() {
-        val recentCall = getSelectedItems().firstOrNull() ?: return
-        activity.copyToClipboard(recentCall.phoneNumber)
-        finishActMode()
-    }
-
-    private fun askConfirmRemove() {
-        ConfirmationDialog(activity, activity.getString(R.string.remove_confirmation)) {
-            activity.handlePermission(PERMISSION_WRITE_CALL_LOG) {
-                removeRecents()
-            }
-        }
-    }
-
-    private fun removeRecents() {
-        if (selectedKeys.isEmpty()) {
-            return
-        }
-
-        val callsToRemove = getSelectedItems()
-        val positions = getSelectedItemPositions()
-        val idsToRemove = ArrayList<Int>()
-        callsToRemove.forEach {
-            idsToRemove.add(it.id)
-            it.neighbourIDs.mapTo(idsToRemove, { it })
-        }
-
-        RecentsHelper(activity).removeRecentCalls(idsToRemove) {
-            recentCalls.removeAll(callsToRemove)
-            activity.runOnUiThread {
-                if (recentCalls.isEmpty()) {
-                    refreshItemsListener?.refreshItems()
-                    finishActMode()
-                } else {
-                    removeSelectedItems(positions)
-                }
-            }
-        }
-    }
-
-    private fun findContactByCall(recentCall: RecentCall): Contact? {
-        return (activity as MainActivity).cachedContacts.find { it.name == recentCall.name && it.doesHavePhoneNumber(recentCall.phoneNumber) }
-    }
-
-    private fun launchContactDetailsIntent(contact: Contact?) {
-        if (contact != null) {
-            activity.startContactDetailsIntent(contact)
-        }
-    }
-
-    fun updateItems(newItems: ArrayList<RecentCall>, highlightText: String = "") {
-        if (newItems.hashCode() != recentCalls.hashCode()) {
-            recentCalls = newItems.clone() as ArrayList<RecentCall>
-            textToHighlight = highlightText
-            notifyDataSetChanged()
-            finishActMode()
-        } else if (textToHighlight != highlightText) {
-            textToHighlight = highlightText
-            notifyDataSetChanged()
-        }
-    }
-
-    fun getSelectedItems() = recentCalls.filter { selectedKeys.contains(it.id) } as ArrayList<RecentCall>
-
-    private fun getLastItem() = recentCalls.last()
-
-    private fun getSelectedPhoneNumber() = getSelectedItems().firstOrNull()?.phoneNumber
-
-    private fun setupView(view: View, call: RecentCall) {
-        view.apply {
-            divider?.setBackgroundColor(textColor)
-            if (getLastItem() == call || !context.config.useDividers) divider?.visibility = View.INVISIBLE else divider?.visibility = View.VISIBLE
-
-            item_recents_frame.isSelected = selectedKeys.contains(call.id)
-            //val name = findContactByCall(call)?.getNameToDisplay() ?: call.name
-            var nameToShow = SpannableString(call.name)
-
-            if (nameToShow.startsWith("+")) nameToShow = SpannableString(getPhoneNumberFormat(activity, number = nameToShow.toString()))
-            if (call.neighbourIDs.isNotEmpty()) {
-                nameToShow = SpannableString("$nameToShow (${call.neighbourIDs.size + 1})")
-            }
-
-            if (textToHighlight.isNotEmpty() && nameToShow.contains(textToHighlight, true)) {
-                nameToShow = SpannableString(nameToShow.toString().highlightTextPart(textToHighlight, properPrimaryColor))
-            }
-
-            item_recents_name?.apply {
-                text = nameToShow
-                setTextColor(if (call.type == Calls.MISSED_TYPE) redColor else textColor) //(textColor)
-                setTextSize(TypedValue.COMPLEX_UNIT_PX, fontSize)
-            }
-
-            item_recents_number.apply {
-                if (showIcon) {
-                    beVisible()
-                    setTextColor(textColor)
-                    setTextSize(TypedValue.COMPLEX_UNIT_PX, fontSize * 0.8f)
-                    text = if (call.phoneNumber == call.name) {
-                        val country = if (call.phoneNumber.startsWith("+")) getCountryByNumber(activity, call.phoneNumber) else ""
-                        country
-                    } else {
-                        val phoneNumber = if (call.phoneNumber.startsWith("+")) getPhoneNumberFormat(activity, number = call.phoneNumber) else call.phoneNumber
-                        if (call.specificType.isNotEmpty() && call.specificNumber.isNotEmpty()) call.specificType else phoneNumber
-                        //setTextColor(if (call.type == Calls.MISSED_TYPE) redColor else textColor)
-                    }
-                }
-            }
-
-            item_recents_date_time.apply {
-
-                val relativeDate = DateUtils.getRelativeDateTimeString(
-                    context,
-                    call.startTS * 1000L,
-                    1.minutes.inWholeMilliseconds,
-                    2.days.inWholeMilliseconds,
-                    0,
-                )
-                val date = call.startTS.formatDateOrTime(context, hideTimeAtOtherDays = hideTimeAtOtherDays, false)
-                text = if (showIcon && activity.config.useRelativeDate) relativeDate else date
-                //setTextColor(if (call.type == Calls.MISSED_TYPE) redColor else textColor)
-                setTextColor(textColor)
-                setTextSize(TypedValue.COMPLEX_UNIT_PX, fontSize * 0.8f)
-            }
-
-            item_recents_duration.apply {
-                text = call.duration.getFormattedDuration()
-                setTextColor(textColor)
-                beVisibleIf(call.type != Calls.MISSED_TYPE && call.type != Calls.REJECTED_TYPE && call.duration > 0)
-                setTextSize(TypedValue.COMPLEX_UNIT_PX, fontSize * 0.8f)
-            }
-
-            item_recents_sim_image.beVisibleIf(areMultipleSIMsAvailable && call.simID != -1)
-            item_recents_sim_id.beVisibleIf(areMultipleSIMsAvailable && call.simID != -1)
-            if (areMultipleSIMsAvailable && call.simID != -1) {
-                val simColor = if (!activity.config.colorSimIcons) textColor else if (call.simID == 1) accentColor else properPrimaryColor
-                item_recents_sim_image.applyColorFilter(simColor)
-                item_recents_sim_image.alpha = if (!activity.config.colorSimIcons) 0.6f else 1f
-                item_recents_sim_id.setTextColor(simColor.getContrastColor())
-                item_recents_sim_id.text = call.simID.toString()
-            }
-
-            item_recents_image?.beVisibleIf(activity.config.showContactThumbnails)
-            item_recents_image_icon?.beVisibleIf(activity.config.showContactThumbnails)
-            if (activity.config.showContactThumbnails && item_recents_image != null) {
-                if (call.phoneNumber == call.name) {
-                    SimpleContactsHelper(context.applicationContext).loadContactImage(call.photoUri, item_recents_image, call.name, letter = false)
-                    item_recents_image_icon?.beVisibleIf(call.photoUri == "")
-                } else {
-                    SimpleContactsHelper(context.applicationContext).loadContactImage(call.photoUri, item_recents_image, call.name)
-                    item_recents_image_icon?.beGone()
-                }
-            }
-
-            val drawable = when (call.type) {
-                Calls.OUTGOING_TYPE -> outgoingCallIcon
-                Calls.MISSED_TYPE -> incomingMissedCallIcon
-                else -> incomingCallIcon
-            }
-            item_recents_type.setImageDrawable(drawable)
-
-            val type = when (call.type) {
-                Calls.OUTGOING_TYPE -> outgoingCallText
-                Calls.MISSED_TYPE -> incomingMissedCallText
-                else -> incomingCallText
-            }
-            item_recents_type_name?.apply {
-                text = type
-                setTextColor(if (call.type == Calls.MISSED_TYPE) redColor else textColor)
-                setTextSize(TypedValue.COMPLEX_UNIT_PX, fontSize * 0.8f)
-            }
-
-            item_recents_info.apply {
-                beVisibleIf(showIcon)
-                applyColorFilter(context.getProperPrimaryColor())
-                setImageDrawable(infoIcon)
-                setOnClickListener {
-                    showCallHistory(call)
-                }
-            }
-            //In order not to miss the icon item_recents_info
-            item_recents_info_holder?.apply {
-                setOnClickListener {
-                    showCallHistory(call)
-                }
-            }
-
-            overflow_menu_icon?.beVisibleIf(showOverflowMenu)
-            if (showOverflowMenu) {
-                overflow_menu_icon?.drawable?.apply {
-                    mutate()
-                    setTint(activity.getProperTextColor())
-                }
-
-                overflow_menu_icon?.setOnClickListener {
-                    showPopupMenu(overflow_menu_anchor, call)
-                }
-            }
-        }
-    }
-
-    private fun showPopupMenu(view: View, call: RecentCall) {
-        finishActMode()
-        val theme = activity.getPopupMenuTheme()
-        val contextTheme = ContextThemeWrapper(activity, theme)
-        val contact = findContactByCall(call)
-        val selectedNumber = "tel:${call.phoneNumber}"
-
-        PopupMenu(contextTheme, view, Gravity.END).apply {
-            inflate(R.menu.menu_recent_item_options)
-            menu.apply {
-                val areMultipleSIMsAvailable = activity.areMultipleSIMsAvailable()
-                findItem(R.id.cab_call).isVisible = !areMultipleSIMsAvailable
-                findItem(R.id.cab_call_sim_1).isVisible = areMultipleSIMsAvailable
-                findItem(R.id.cab_call_sim_2).isVisible = areMultipleSIMsAvailable
-                findItem(R.id.cab_view_details).isVisible = contact != null
-                findItem(R.id.cab_block_number).title = activity.getString(R.string.block_number)//activity.addLockedLabelIfNeeded(R.string.block_number)
-                findItem(R.id.cab_block_number).isVisible = isNougatPlus()
-                findItem(R.id.cab_remove_default_sim).isVisible = activity.config.getCustomSIM(selectedNumber) != ""
-            }
-            setOnMenuItemClickListener { item ->
-                val callId = call.id
-                when (item.itemId) {
-                    R.id.cab_call -> {
-                        executeItemMenuOperation(callId) {
-                            callContact()
-                        }
-                    }
-                    R.id.cab_call_sim_1 -> {
-                        executeItemMenuOperation(callId) {
-                            callContact(true)
-                        }
-                    }
-                    R.id.cab_call_sim_2 -> {
-                        executeItemMenuOperation(callId) {
-                            callContact(false)
-                        }
-                    }
-                    R.id.cab_send_sms -> {
-                        executeItemMenuOperation(callId) {
-                            sendSMS()
-                        }
-                    }
-                    R.id.cab_view_details -> {
-                        executeItemMenuOperation(callId) {
-                            launchContactDetailsIntent(contact)
-                        }
-                    }
-                    R.id.cab_add_number -> {
-                        executeItemMenuOperation(callId) {
-                            addNumberToContact()
-                        }
-                    }
-                    R.id.cab_show_call_details -> {
-                        executeItemMenuOperation(callId) {
-                            showCallDetails()
-                        }
-                    }
-                    R.id.cab_block_number -> {
-                        selectedKeys.add(callId)
-                        tryBlocking()
-                    }
-                    R.id.cab_remove -> {
-                        selectedKeys.add(callId)
-                        askConfirmRemove()
-                    }
-                    R.id.cab_copy_number -> {
-                        executeItemMenuOperation(callId) {
-                            copyNumber()
-                        }
-                    }
-                    R.id.cab_remove_default_sim -> {
-                        executeItemMenuOperation(callId) {
-                            removeDefaultSIM()
-                        }
-                    }
-                }
-                true
-            }
-            show()
-        }
-    }
-
-    private fun executeItemMenuOperation(callId: Int, callback: () -> Unit) {
-        selectedKeys.add(callId)
-        callback()
-        selectedKeys.remove(callId)
-    }
-
-    private fun getCallList(call: RecentCall) = recentCalls.filter { it.phoneNumber == call.phoneNumber}.toMutableList() as ArrayList<RecentCall>
-
-    private fun showCallHistory(call: RecentCall) {
-        val callIdList : ArrayList<Int> = arrayListOf()
-        for (i in getCallList(call)){ callIdList.add(i.id) } // добавляем все отдельные записи
-        for (n in getCallList(call)){ callIdList.addAll(n.neighbourIDs) } // добавляем все сгруппированные записи
-        //ShowCallHistoryDialog(activity, recentCalls, callIdList, call)
-        //activity.launchActivityIntent(Intent(activity, CallHistoryActivity::class.java))
-        Intent(activity, CallHistoryActivity::class.java).apply {
-            putExtra(CURRENT_PHONE_NUMBER, call.phoneNumber)
-            activity.launchActivityIntent(this)
-        }
-    }
-
-    private fun confirmRemove(call: RecentCall) {
-        ConfirmationDialog(activity, activity.getString(R.string.remove_confirmation)) {
-            activity.handlePermission(PERMISSION_WRITE_CALL_LOG) {
-                removeRecent(call)
-            }
-        }
-    }
-
-    private fun removeRecent(call: RecentCall) {
-       /*if (selectedKeys.isEmpty()) {
-            return
-        }*/
-
-        val callsToRemove = ArrayList<RecentCall>()
-        callsToRemove.add(call)
-        val positions = ArrayList<Int>(0)
-        val idsToRemove = ArrayList<Int>()
-        idsToRemove.add(call.id)
-        /*callsToRemove.forEach {
-            idsToRemove.add(it.id)
-            it.neighbourIDs.mapTo(idsToRemove, { it })
-        }*/
-
-        RecentsHelper(activity).removeRecentCalls(idsToRemove) {
-            recentCalls.removeAll(callsToRemove)
-            (activity as CallHistoryActivity).refreshItems()
-            /*activity.runOnUiThread {
-                removeSelectedItems(idsToRemove)
-                refreshItemsListener?.refreshItems()
-                (activity as CallHistoryActivity).refreshItems()
-                finishActMode()
-            }*/
-        }
-    }
-
-
-    /*private fun viewContactInfo(contact: SimpleContact) {
-        activity.startContactDetailsIntent(contact)
-    }*/
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/adapters/SpeedDialAdapter.kt b/app/src/main/kotlin/com/goodwy/dialer/adapters/SpeedDialAdapter.kt
deleted file mode 100755
index 3f2477a..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/adapters/SpeedDialAdapter.kt
+++ /dev/null
@@ -1,81 +0,0 @@
-package com.goodwy.dialer.adapters
-
-import android.view.Menu
-import android.view.View
-import android.view.ViewGroup
-import com.goodwy.commons.adapters.MyRecyclerViewAdapter
-import com.goodwy.commons.views.MyRecyclerView
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.interfaces.RemoveSpeedDialListener
-import com.goodwy.dialer.models.SpeedDial
-import kotlinx.android.synthetic.main.item_speed_dial.view.*
-import java.util.*
-
-class SpeedDialAdapter(
-    activity: SimpleActivity, var speedDialValues: ArrayList<SpeedDial>, private val removeListener: RemoveSpeedDialListener,
-    recyclerView: MyRecyclerView, itemClick: (Any) -> Unit
-) : MyRecyclerViewAdapter(activity, recyclerView, itemClick) {
-    init {
-        setupDragListener(true)
-    }
-
-    override fun getActionMenuId() = R.menu.cab_delete_only
-
-    override fun prepareActionMode(menu: Menu) {}
-
-    override fun actionItemPressed(id: Int) {
-        if (selectedKeys.isEmpty()) {
-            return
-        }
-
-        when (id) {
-            R.id.cab_delete -> deleteSpeedDial()
-        }
-    }
-
-    override fun getSelectableItemCount() = speedDialValues.size
-
-    override fun getIsItemSelectable(position: Int) = speedDialValues[position].isValid()
-
-    override fun getItemSelectionKey(position: Int) = speedDialValues.getOrNull(position)?.hashCode()
-
-    override fun getItemKeyPosition(key: Int) = speedDialValues.indexOfFirst { it.hashCode() == key }
-
-    override fun onActionModeCreated() {}
-
-    override fun onActionModeDestroyed() {}
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int) = createViewHolder(R.layout.item_speed_dial, parent)
-
-    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
-        val speedDial = speedDialValues[position]
-        holder.bindView(speedDial, true, true) { itemView, layoutPosition ->
-            setupView(itemView, speedDial)
-        }
-        bindViewHolder(holder)
-    }
-
-    override fun getItemCount() = speedDialValues.size
-
-    private fun getSelectedItems() = speedDialValues.filter { selectedKeys.contains(it.hashCode()) } as ArrayList<SpeedDial>
-
-    private fun deleteSpeedDial() {
-        val ids = getSelectedItems().map { it.id }.toMutableList() as ArrayList<Int>
-        removeListener.removeSpeedDial(ids)
-        finishActMode()
-    }
-
-    private fun setupView(view: View, speedDial: SpeedDial) {
-        view.apply {
-            var displayName = "${speedDial.id}. "
-            displayName += if (speedDial.isValid()) speedDial.displayName else ""
-
-            speed_dial_label.apply {
-                text = displayName
-                isSelected = selectedKeys.contains(speedDial.hashCode())
-                setTextColor(textColor)
-            }
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/adapters/ViewPagerAdapter.kt b/app/src/main/kotlin/com/goodwy/dialer/adapters/ViewPagerAdapter.kt
deleted file mode 100755
index 1d3c06a..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/adapters/ViewPagerAdapter.kt
+++ /dev/null
@@ -1,54 +0,0 @@
-package com.goodwy.dialer.adapters
-
-import android.view.View
-import android.view.ViewGroup
-import androidx.viewpager.widget.PagerAdapter
-import com.goodwy.commons.helpers.TAB_CALL_HISTORY
-import com.goodwy.commons.helpers.TAB_CONTACTS
-import com.goodwy.commons.helpers.TAB_FAVORITES
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.fragments.MyViewPagerFragment
-import com.goodwy.dialer.helpers.tabsList
-
-class ViewPagerAdapter(val activity: SimpleActivity) : PagerAdapter() {
-
-    override fun instantiateItem(container: ViewGroup, position: Int): Any {
-        val layout = getFragment(position)
-        val view = activity.layoutInflater.inflate(layout, container, false)
-        container.addView(view)
-
-        (view as MyViewPagerFragment).apply {
-            setupFragment(activity)
-        }
-
-        return view
-    }
-
-    override fun destroyItem(container: ViewGroup, position: Int, item: Any) {
-        container.removeView(item as View)
-    }
-
-    override fun getCount() = tabsList.filter { it and activity.config.showTabs != 0 }.size
-
-    override fun isViewFromObject(view: View, item: Any) = view == item
-
-    private fun getFragment(position: Int): Int {
-        val showTabs = activity.config.showTabs
-        val fragments = arrayListOf<Int>()
-        if (showTabs and TAB_FAVORITES > 0) {
-            fragments.add(R.layout.fragment_favorites)
-        }
-
-        if (showTabs and TAB_CALL_HISTORY > 0) {
-            fragments.add(R.layout.fragment_recents)
-        }
-
-        if (showTabs and TAB_CONTACTS > 0) {
-            fragments.add(R.layout.fragment_contacts)
-        }
-
-        return if (position < fragments.size) fragments[position] else fragments.last()
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/databases/AppDatabase.kt b/app/src/main/kotlin/com/goodwy/dialer/databases/AppDatabase.kt
deleted file mode 100644
index 08a09ee..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/databases/AppDatabase.kt
+++ /dev/null
@@ -1,65 +0,0 @@
-package com.goodwy.dialer.databases
-
-import android.content.Context
-import androidx.room.Database
-import androidx.room.Room
-import androidx.room.RoomDatabase
-import androidx.room.TypeConverters
-import androidx.sqlite.db.SupportSQLiteDatabase
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.helpers.Converters
-import com.goodwy.dialer.interfaces.TimerDao
-import com.goodwy.dialer.models.Timer
-import com.goodwy.dialer.models.TimerState
-import java.util.concurrent.Executors
-
-@Database(entities = [Timer::class], version = 1)
-@TypeConverters(Converters::class)
-abstract class AppDatabase : RoomDatabase() {
-
-    abstract fun TimerDao(): TimerDao
-
-    companion object {
-        private var db: AppDatabase? = null
-
-        fun getInstance(context: Context): AppDatabase {
-            if (db == null) {
-                synchronized(AppDatabase::class) {
-                    if (db == null) {
-                        db = Room.databaseBuilder(context.applicationContext, AppDatabase::class.java, "app.db")
-                            .fallbackToDestructiveMigration()
-                            .addCallback(object : Callback() {
-                                override fun onCreate(db: SupportSQLiteDatabase) {
-                                    super.onCreate(db)
-                                    insertDefaultTimer(context)
-                                }
-                            })
-                            .build()
-                    }
-                }
-            }
-            return db!!
-        }
-
-        private fun insertDefaultTimer(context: Context) {
-            Executors.newSingleThreadScheduledExecutor().execute {
-                val config = context.config
-                db!!.TimerDao().insertOrUpdateTimer(
-                    Timer(
-                        id = null,
-                        seconds = config.timerSeconds,
-                        state = TimerState.Idle,
-                        vibrate = config.timerVibrate,
-                        soundUri = config.timerSoundUri,
-                        soundTitle = config.timerSoundTitle,
-                        title = config.timerTitle ?: "",
-                        label = config.timerLabel ?: "",
-                        description = config.timerDescription ?: "",
-                        createdAt = System.currentTimeMillis(),
-                        channelId = config.timerChannelId,
-                    )
-                )
-            }
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/dialogs/ChangeSortingDialog.kt b/app/src/main/kotlin/com/goodwy/dialer/dialogs/ChangeSortingDialog.kt
deleted file mode 100755
index d181934..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/dialogs/ChangeSortingDialog.kt
+++ /dev/null
@@ -1,98 +0,0 @@
-package com.goodwy.dialer.dialogs
-
-import com.goodwy.commons.activities.BaseSimpleActivity
-import com.goodwy.commons.extensions.beGoneIf
-import com.goodwy.commons.extensions.getAlertDialogBuilder
-import com.goodwy.commons.extensions.setupDialogStuff
-import com.goodwy.commons.helpers.*
-import com.goodwy.dialer.R
-import com.goodwy.dialer.extensions.config
-import kotlinx.android.synthetic.main.dialog_change_sorting.view.*
-
-class ChangeSortingDialog(val activity: BaseSimpleActivity, private val showCustomSorting: Boolean = false, private val callback: () -> Unit) {
-    private var currSorting = 0
-    private var config = activity.config
-    private var view = activity.layoutInflater.inflate(R.layout.dialog_change_sorting, null)
-
-    init {
-        activity.getAlertDialogBuilder()
-            .setPositiveButton(R.string.ok) { dialog, which -> dialogConfirmed() }
-            .setNegativeButton(R.string.cancel, null)
-            .apply {
-                activity.setupDialogStuff(view, this, R.string.sort_by)
-            }
-
-        currSorting = if (showCustomSorting && config.isCustomOrderSelected) {
-            SORT_BY_CUSTOM
-        } else {
-            config.sorting
-        }
-
-        setupSortRadio()
-        setupOrderRadio()
-    }
-
-    private fun setupSortRadio() {
-        val sortingRadio = view.sorting_dialog_radio_sorting
-
-        sortingRadio.setOnCheckedChangeListener { group, checkedId ->
-            val isCustomSorting = checkedId == sortingRadio.sorting_dialog_radio_custom.id
-            view.sorting_dialog_radio_order.beGoneIf(isCustomSorting)
-            view.divider.beGoneIf(isCustomSorting)
-        }
-
-        val sortBtn = when {
-            currSorting and SORT_BY_FIRST_NAME != 0 -> sortingRadio.sorting_dialog_radio_first_name
-            currSorting and SORT_BY_MIDDLE_NAME != 0 -> sortingRadio.sorting_dialog_radio_middle_name
-            currSorting and SORT_BY_SURNAME != 0 -> sortingRadio.sorting_dialog_radio_surname
-            currSorting and SORT_BY_FULL_NAME != 0 -> sortingRadio.sorting_dialog_radio_full_name
-            currSorting and SORT_BY_CUSTOM != 0 -> sortingRadio.sorting_dialog_radio_custom
-            else -> sortingRadio.sorting_dialog_radio_date_created
-        }
-        sortBtn.isChecked = true
-
-        if (showCustomSorting) {
-            sortingRadio.sorting_dialog_radio_custom.isChecked = config.isCustomOrderSelected
-        }
-        view.sorting_dialog_radio_custom.beGoneIf(!showCustomSorting)
-    }
-
-    private fun setupOrderRadio() {
-        val orderRadio = view.sorting_dialog_radio_order
-        var orderBtn = orderRadio.sorting_dialog_radio_ascending
-
-        if (currSorting and SORT_DESCENDING != 0) {
-            orderBtn = orderRadio.sorting_dialog_radio_descending
-        }
-        orderBtn.isChecked = true
-    }
-
-    private fun dialogConfirmed() {
-        val sortingRadio = view.sorting_dialog_radio_sorting
-        var sorting = when (sortingRadio.checkedRadioButtonId) {
-            R.id.sorting_dialog_radio_first_name -> SORT_BY_FIRST_NAME
-            R.id.sorting_dialog_radio_middle_name -> SORT_BY_MIDDLE_NAME
-            R.id.sorting_dialog_radio_surname -> SORT_BY_SURNAME
-            R.id.sorting_dialog_radio_full_name -> SORT_BY_FULL_NAME
-            R.id.sorting_dialog_radio_custom -> SORT_BY_CUSTOM
-            else -> SORT_BY_DATE_CREATED
-        }
-
-        if (sorting != SORT_BY_CUSTOM && view.sorting_dialog_radio_order.checkedRadioButtonId == R.id.sorting_dialog_radio_descending) {
-            sorting = sorting or SORT_DESCENDING
-        }
-
-        if (showCustomSorting) {
-            if (sorting == SORT_BY_CUSTOM) {
-                config.isCustomOrderSelected = true
-            } else {
-                config.isCustomOrderSelected = false
-                config.sorting = sorting
-            }
-        } else {
-            config.sorting = sorting
-        }
-
-        callback()
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/dialogs/ChooseSocialDialog.kt b/app/src/main/kotlin/com/goodwy/dialer/dialogs/ChooseSocialDialog.kt
deleted file mode 100755
index 8d8a5c6..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/dialogs/ChooseSocialDialog.kt
+++ /dev/null
@@ -1,50 +0,0 @@
-package com.goodwy.dialer.dialogs
-
-import android.app.Activity
-import android.view.ViewGroup
-import android.widget.RadioGroup
-import android.widget.RelativeLayout
-import androidx.appcompat.app.AlertDialog
-import com.goodwy.commons.extensions.beGone
-import com.goodwy.commons.extensions.getAlertDialogBuilder
-import com.goodwy.commons.extensions.setupDialogStuff
-import com.goodwy.dialer.R
-import com.goodwy.dialer.extensions.getPackageDrawable
-import com.goodwy.commons.models.contacts.SocialAction
-import kotlinx.android.synthetic.main.dialog_choose_social.view.*
-import kotlinx.android.synthetic.main.item_choose_social.view.*
-
-class ChooseSocialDialog(val activity: Activity, actions: ArrayList<SocialAction>, val callback: (action: SocialAction) -> Unit) {
-    private lateinit var dialog: AlertDialog
-
-    init {
-        val view = activity.layoutInflater.inflate(R.layout.dialog_choose_social, null)
-        actions.sortBy { it.type }
-        actions.forEach { action ->
-            val item = (activity.layoutInflater.inflate(R.layout.item_choose_social, null) as RelativeLayout).apply {
-                item_social_label.text = action.label
-                setOnClickListener {
-                    callback(action)
-                    dialog.dismiss()
-                }
-
-                val drawable = activity.getPackageDrawable(action.packageName)
-                if (drawable == null) {
-                    item_social_image.beGone()
-                } else {
-                    item_social_image.setImageDrawable(drawable)
-                }
-            }
-
-            view.dialog_choose_social.addView(item, RadioGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT))
-        }
-
-        val builder = activity.getAlertDialogBuilder()
-
-        builder.apply {
-            activity.setupDialogStuff(view, this) { alertDialog ->
-                dialog = alertDialog
-            }
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/dialogs/DynamicBottomSheetChooserDialog.kt b/app/src/main/kotlin/com/goodwy/dialer/dialogs/DynamicBottomSheetChooserDialog.kt
deleted file mode 100644
index 7051299..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/dialogs/DynamicBottomSheetChooserDialog.kt
+++ /dev/null
@@ -1,70 +0,0 @@
-package com.goodwy.dialer.dialogs
-
-import android.os.Bundle
-import android.view.ViewGroup
-import androidx.fragment.app.FragmentManager
-import com.goodwy.commons.adapters.SimpleListItemAdapter
-import com.goodwy.commons.fragments.BaseBottomSheetDialogFragment
-import com.goodwy.commons.models.SimpleListItem
-import com.goodwy.dialer.R
-import kotlinx.android.synthetic.main.layout_simple_recycler_view.*
-
-// same as BottomSheetChooserDialog but with dynamic updates
-class DynamicBottomSheetChooserDialog : BaseBottomSheetDialogFragment() {
-
-    var onItemClick: ((SimpleListItem) -> Unit)? = null
-
-    override fun setupContentView(parent: ViewGroup) {
-        val child = layoutInflater.inflate(R.layout.layout_simple_recycler_view, parent, false)
-        parent.addView(child)
-        setupRecyclerView()
-    }
-
-    private fun setupRecyclerView() {
-        @Suppress("UNCHECKED_CAST")
-        val listItems = arguments?.getParcelableArray(ITEMS) as Array<SimpleListItem>
-        getRecyclerViewAdapter().submitList(listItems.toList())
-    }
-
-    private fun getRecyclerViewAdapter(): SimpleListItemAdapter {
-        var adapter = recycler_view.adapter as? SimpleListItemAdapter
-        if (adapter == null) {
-            adapter = SimpleListItemAdapter(requireActivity()) {
-                onItemClick?.invoke(it)
-                dismissAllowingStateLoss()
-            }
-            recycler_view.adapter = adapter
-        }
-        return adapter
-    }
-
-    fun updateChooserItems(newItems: Array<SimpleListItem>) {
-        if (isAdded) {
-            getRecyclerViewAdapter().submitList(newItems.toList())
-        }
-    }
-
-    companion object {
-        private const val TAG = "BottomSheetChooserDialog"
-        private const val ITEMS = "data"
-
-        fun createChooser(
-            fragmentManager: FragmentManager,
-            title: Int?,
-            items: Array<SimpleListItem>,
-            callback: (SimpleListItem) -> Unit
-        ): DynamicBottomSheetChooserDialog {
-            val extras = Bundle().apply {
-                if (title != null) {
-                    putInt(BOTTOM_SHEET_TITLE, title)
-                }
-                putParcelableArray(ITEMS, items)
-            }
-            return DynamicBottomSheetChooserDialog().apply {
-                arguments = extras
-                onItemClick = callback
-                show(fragmentManager, TAG)
-            }
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/dialogs/FilterContactSourcesDialog.kt b/app/src/main/kotlin/com/goodwy/dialer/dialogs/FilterContactSourcesDialog.kt
deleted file mode 100644
index 664671e..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/dialogs/FilterContactSourcesDialog.kt
+++ /dev/null
@@ -1,91 +0,0 @@
-package com.goodwy.dialer.dialogs
-
-import androidx.appcompat.app.AlertDialog
-import com.goodwy.commons.extensions.getAlertDialogBuilder
-import com.goodwy.commons.extensions.getMyContactsCursor
-import com.goodwy.commons.extensions.setupDialogStuff
-import com.goodwy.commons.helpers.SMT_PRIVATE
-import com.goodwy.commons.extensions.getVisibleContactSources
-import com.goodwy.commons.helpers.ContactsHelper
-import com.goodwy.commons.helpers.MyContactsContentProvider
-import com.goodwy.commons.models.contacts.*
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.adapters.FilterContactSourcesAdapter
-import com.goodwy.dialer.extensions.config
-import kotlinx.android.synthetic.main.dialog_filter_contact_sources.view.*
-
-class FilterContactSourcesDialog(val activity: SimpleActivity, private val callback: () -> Unit) {
-    private var dialog: AlertDialog? = null
-    private val view = activity.layoutInflater.inflate(R.layout.dialog_filter_contact_sources, null)
-    private var contactSources = ArrayList<ContactSource>()
-    private var contacts = ArrayList<Contact>()
-    private var isContactSourcesReady = false
-    private var isContactsReady = false
-
-    init {
-            val contactHelper = ContactsHelper(activity)
-            contactHelper.getContactSources { contactSources ->
-            contactSources.mapTo(this@FilterContactSourcesDialog.contactSources) { it.copy() }
-            isContactSourcesReady = true
-            processDataIfReady()
-        }
-
-        contactHelper.getContacts(getAll = true) {
-            it.mapTo(contacts) { contact -> contact.copy() }
-            val privateCursor = activity.getMyContactsCursor(false, true)
-            val privateContacts = MyContactsContentProvider.getContacts(activity, privateCursor)
-            this.contacts.addAll(privateContacts)
-            isContactsReady = true
-            processDataIfReady()
-        }
-    }
-
-    private fun processDataIfReady() {
-        if (!isContactSourcesReady) {
-            return
-        }
-
-        val contactSourcesWithCount = ArrayList<ContactSource>()
-        for (contactSource in contactSources) {
-            val count = if (isContactsReady) {
-                contacts.filter { it.source == contactSource.name }.count()
-            } else {
-                -1
-            }
-            contactSourcesWithCount.add(contactSource.copy(count = count))
-        }
-
-        contactSources.clear()
-        contactSources.addAll(contactSourcesWithCount)
-
-        activity.runOnUiThread {
-            val selectedSources = activity.getVisibleContactSources()
-            view.filter_contact_sources_list.adapter = FilterContactSourcesAdapter(activity, contactSourcesWithCount, selectedSources)
-
-            if (dialog == null) {
-                activity.getAlertDialogBuilder()
-                    .setPositiveButton(R.string.ok) { dialogInterface, i -> confirmContactSources() }
-                    .setNegativeButton(R.string.cancel, null)
-                    .apply {
-                        activity.setupDialogStuff(view, this) { alertDialog ->
-                            dialog = alertDialog
-                        }
-                    }
-            }
-        }
-    }
-
-    private fun confirmContactSources() {
-        val selectedContactSources = (view.filter_contact_sources_list.adapter as FilterContactSourcesAdapter).getSelectedContactSources()
-        val ignoredContactSources = contactSources.filter { !selectedContactSources.contains(it) }.map {
-            if (it.type == SMT_PRIVATE) SMT_PRIVATE else it.getFullIdentifier()
-        }.toHashSet()
-
-        if (activity.getVisibleContactSources() != ignoredContactSources) {
-            activity.config.ignoredContactSources = ignoredContactSources
-            callback()
-        }
-        dialog?.dismiss()
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/dialogs/ManageVisibleTabsDialog.kt b/app/src/main/kotlin/com/goodwy/dialer/dialogs/ManageVisibleTabsDialog.kt
deleted file mode 100755
index 25fdde1..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/dialogs/ManageVisibleTabsDialog.kt
+++ /dev/null
@@ -1,52 +0,0 @@
-package com.goodwy.dialer.dialogs
-
-import com.goodwy.commons.activities.BaseSimpleActivity
-import com.goodwy.commons.extensions.getAlertDialogBuilder
-import com.goodwy.commons.extensions.setupDialogStuff
-import com.goodwy.commons.helpers.TAB_CALL_HISTORY
-import com.goodwy.commons.helpers.TAB_CONTACTS
-import com.goodwy.commons.helpers.TAB_FAVORITES
-import com.goodwy.commons.views.MyAppCompatCheckbox
-import com.goodwy.dialer.R
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.helpers.ALL_TABS_MASK
-
-class ManageVisibleTabsDialog(val activity: BaseSimpleActivity) {
-    private var view = activity.layoutInflater.inflate(R.layout.dialog_manage_visible_tabs, null)
-    private val tabs = LinkedHashMap<Int, Int>()
-
-    init {
-        tabs.apply {
-            put(TAB_FAVORITES, R.id.manage_visible_tabs_favorites)
-            put(TAB_CALL_HISTORY, R.id.manage_visible_tabs_call_history)
-            put(TAB_CONTACTS, R.id.manage_visible_tabs_contacts)
-        }
-
-        val showTabs = activity.config.showTabs
-        for ((key, value) in tabs) {
-            view.findViewById<MyAppCompatCheckbox>(value).isChecked = showTabs and key != 0
-        }
-
-        activity.getAlertDialogBuilder()
-            .setPositiveButton(R.string.ok) { dialog, which -> dialogConfirmed() }
-            .setNegativeButton(R.string.cancel, null)
-            .apply {
-                activity.setupDialogStuff(view, this)
-            }
-    }
-
-    private fun dialogConfirmed() {
-        var result = 0
-        for ((key, value) in tabs) {
-            if (view.findViewById<MyAppCompatCheckbox>(value).isChecked) {
-                result += key
-            }
-        }
-
-        if (result == 0) {
-            result = ALL_TABS_MASK
-        }
-
-        activity.config.showTabs = result
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/dialogs/SelectContactDialog.kt b/app/src/main/kotlin/com/goodwy/dialer/dialogs/SelectContactDialog.kt
deleted file mode 100755
index 9c404e2..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/dialogs/SelectContactDialog.kt
+++ /dev/null
@@ -1,48 +0,0 @@
-package com.goodwy.dialer.dialogs
-
-import androidx.appcompat.app.AlertDialog
-import com.reddit.indicatorfastscroll.FastScrollItemIndicator
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.models.contacts.Contact
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.adapters.ContactsAdapter
-import kotlinx.android.synthetic.main.dialog_select_contact.view.*
-import java.util.*
-
-class SelectContactDialog(val activity: SimpleActivity, contacts: ArrayList<Contact>, val callback: (selectedContact: Contact) -> Unit) {
-    private var dialog: AlertDialog? = null
-    private var view = activity.layoutInflater.inflate(R.layout.dialog_select_contact, null)
-
-    init {
-        view.apply {
-            letter_fastscroller.textColor = context.getProperTextColor().getColorStateList()
-            letter_fastscroller_thumb.setupWithFastScroller(letter_fastscroller)
-            letter_fastscroller_thumb.textColor = context.getProperPrimaryColor().getContrastColor()
-            letter_fastscroller_thumb.thumbColor = context.getProperPrimaryColor().getColorStateList()
-
-            letter_fastscroller.setupWithRecyclerView(select_contact_list, { position ->
-                try {
-                    val name = contacts[position].getNameToDisplay()
-                    val character = if (name.isNotEmpty()) name.substring(0, 1) else ""
-                    FastScrollItemIndicator.Text(character.toUpperCase(Locale.getDefault()))
-                } catch (e: Exception) {
-                    FastScrollItemIndicator.Text("")
-                }
-            })
-
-            select_contact_list.adapter = ContactsAdapter(activity, contacts, select_contact_list, showIcon = false, allowLongClick = false) {
-                callback(it as Contact)
-                dialog?.dismiss()
-            }
-        }
-
-        activity.getAlertDialogBuilder()
-            .setNegativeButton(R.string.cancel, null)
-            .apply {
-                activity.setupDialogStuff(view, this) { alertDialog ->
-                    dialog = alertDialog
-                }
-            }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/dialogs/SelectSIMDialog.kt b/app/src/main/kotlin/com/goodwy/dialer/dialogs/SelectSIMDialog.kt
deleted file mode 100755
index f26f66a..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/dialogs/SelectSIMDialog.kt
+++ /dev/null
@@ -1,65 +0,0 @@
-package com.goodwy.dialer.dialogs
-
-import android.annotation.SuppressLint
-import android.telecom.PhoneAccountHandle
-import android.view.ViewGroup
-import android.widget.RadioButton
-import android.widget.RadioGroup
-import androidx.appcompat.app.AlertDialog
-import com.goodwy.commons.activities.BaseSimpleActivity
-import com.goodwy.commons.extensions.getAlertDialogBuilder
-import com.goodwy.commons.extensions.setupDialogStuff
-import com.goodwy.dialer.R
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.extensions.getAvailableSIMCardLabels
-import kotlinx.android.synthetic.main.dialog_select_sim.view.*
-
-@SuppressLint("MissingPermission")
-class SelectSIMDialog(
-    val activity: BaseSimpleActivity,
-    val phoneNumber: String,
-    onDismiss: () -> Unit = {},
-    val callback: (handle: PhoneAccountHandle?) -> Unit
-) {
-    private var dialog: AlertDialog? = null
-    private val view = activity.layoutInflater.inflate(R.layout.dialog_select_sim, null)
-
-    init {
-        val radioGroup = view.select_sim_radio_group
-        view.apply {
-            select_sim_remember_holder.setOnClickListener {
-                select_sim_remember.toggle()
-            }
-        }
-
-        activity.getAvailableSIMCardLabels().forEachIndexed { index, SIMAccount ->
-            val radioButton = (activity.layoutInflater.inflate(R.layout.radio_button, null) as RadioButton).apply {
-                text = "${index + 1} - ${SIMAccount.label}"
-                id = index
-                setOnClickListener { selectedSIM(SIMAccount.handle, SIMAccount.label) }
-            }
-            radioGroup!!.addView(radioButton, RadioGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT))
-        }
-
-        activity.getAlertDialogBuilder()
-            .setOnCancelListener { callback.invoke(null) }
-            .apply {
-                activity.setupDialogStuff(view, this) { alertDialog ->
-                    dialog = alertDialog
-                }
-            }
-
-        dialog?.setOnDismissListener {
-            onDismiss()
-        }
-    }
-
-    private fun selectedSIM(handle: PhoneAccountHandle, label: String) {
-        if (view.select_sim_remember.isChecked) {
-            activity.config.saveCustomSIM(phoneNumber, label)
-        }
-
-        callback(handle)
-        dialog?.dismiss()
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/dialogs/ShowGroupedCallsDialog.kt b/app/src/main/kotlin/com/goodwy/dialer/dialogs/ShowGroupedCallsDialog.kt
deleted file mode 100755
index bc79dac..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/dialogs/ShowGroupedCallsDialog.kt
+++ /dev/null
@@ -1,39 +0,0 @@
-package com.goodwy.dialer.dialogs
-
-import androidx.appcompat.app.AlertDialog
-import com.goodwy.commons.activities.BaseSimpleActivity
-import com.goodwy.commons.extensions.getAlertDialogBuilder
-import com.goodwy.commons.extensions.setupDialogStuff
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.adapters.RecentCallsAdapter
-import com.goodwy.dialer.helpers.RecentsHelper
-import com.goodwy.dialer.models.RecentCall
-import kotlinx.android.synthetic.main.dialog_show_grouped_calls.view.*
-import java.util.*
-
-class ShowGroupedCallsDialog(val activity: BaseSimpleActivity, callIds: ArrayList<Int>) {
-    private var dialog: AlertDialog? = null
-    private var view = activity.layoutInflater.inflate(R.layout.dialog_show_grouped_calls, null)
-
-    init {
-        view.apply {
-            RecentsHelper(activity).getRecentCalls(false) { allRecents ->
-                val recents = allRecents.filter { callIds.contains(it.id) }.toMutableList() as ArrayList<RecentCall>
-                activity.runOnUiThread {
-                    RecentCallsAdapter(activity as SimpleActivity, recents, select_grouped_calls_list, null, false) {
-                    }.apply {
-                        select_grouped_calls_list.adapter = this
-                    }
-                }
-            }
-        }
-
-        activity.getAlertDialogBuilder()
-            .apply {
-                activity.setupDialogStuff(view, this) { alertDialog ->
-                    dialog = alertDialog
-                }
-            }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/extensions/Activity.kt b/app/src/main/kotlin/com/goodwy/dialer/extensions/Activity.kt
deleted file mode 100755
index 36b8dd9..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/extensions/Activity.kt
+++ /dev/null
@@ -1,105 +0,0 @@
-package com.goodwy.dialer.extensions
-
-import android.annotation.SuppressLint
-import android.app.Activity
-import android.content.Intent
-import android.net.Uri
-import android.provider.ContactsContract
-import android.telecom.PhoneAccount
-import android.telecom.PhoneAccountHandle
-import android.telecom.TelecomManager
-import com.goodwy.commons.activities.BaseSimpleActivity
-import com.goodwy.commons.dialogs.NewAppDialog
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.*
-import com.goodwy.commons.models.contacts.Contact
-import com.goodwy.dialer.activities.DialerActivity
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.dialogs.SelectSIMDialog
-
-fun SimpleActivity.startCallIntent(recipient: String) {
-    if (isDefaultDialer()) {
-        getHandleToUse(null, recipient) { handle ->
-            launchCallIntent(recipient, handle)
-        }
-    } else {
-        launchCallIntent(recipient, null)
-    }
-}
-
-fun SimpleActivity.launchCreateNewContactIntent() {
-    Intent().apply {
-        action = Intent.ACTION_INSERT
-        data = ContactsContract.Contacts.CONTENT_URI
-        launchActivityIntent(this)
-    }
-}
-
-fun BaseSimpleActivity.callContactWithSim(recipient: String, useMainSIM: Boolean) {
-    handlePermission(PERMISSION_READ_PHONE_STATE) {
-        val wantedSimIndex = if (useMainSIM) 0 else 1
-        val handle = getAvailableSIMCardLabels().sortedBy { it.id }.getOrNull(wantedSimIndex)?.handle
-        launchCallIntent(recipient, handle)
-    }
-}
-
-// handle private contacts differently, only Goodwy Contacts can open them
-fun Activity.startContactDetailsIntent(contact: Contact) {
-    val simpleContacts = "com.goodwy.contacts"
-    val simpleContactsDebug = "com.goodwy.contacts.debug"
-    if ((0..config.appRecommendationDialogCount).random() == 2 && (!isPackageInstalled(simpleContacts) && !isPackageInstalled(simpleContactsDebug))) {
-        NewAppDialog(this, simpleContacts, getString(R.string.recommendation_dialog_contacts_g), getString(R.string.right_contacts),
-            getDrawable(R.drawable.ic_launcher_contacts)) {}
-    } else {
-        if (contact.rawId > 1000000 && contact.contactId > 1000000 && contact.rawId == contact.contactId &&
-            (isPackageInstalled(simpleContacts) || isPackageInstalled(simpleContactsDebug))
-        ) {
-            Intent().apply {
-                action = Intent.ACTION_VIEW
-                putExtra(CONTACT_ID, contact.rawId)
-                putExtra(IS_PRIVATE, true)
-                `package` = if (isPackageInstalled(simpleContacts)) simpleContacts else simpleContactsDebug
-                setDataAndType(ContactsContract.Contacts.CONTENT_LOOKUP_URI, "vnd.android.cursor.dir/person")
-                launchActivityIntent(this)
-            }
-        } else {
-            ensureBackgroundThread {
-                val lookupKey = SimpleContactsHelper(this).getContactLookupKey((contact).rawId.toString())
-                val publicUri = Uri.withAppendedPath(ContactsContract.Contacts.CONTENT_LOOKUP_URI, lookupKey)
-                runOnUiThread {
-                    launchViewContactIntent(publicUri)
-                }
-            }
-        }
-    }
-}
-
-// used at devices with multiple SIM cards
-@SuppressLint("MissingPermission")
-fun SimpleActivity.getHandleToUse(intent: Intent?, phoneNumber: String, callback: (handle: PhoneAccountHandle?) -> Unit) {
-    handlePermission(PERMISSION_READ_PHONE_STATE) {
-        if (it) {
-            val defaultHandle = telecomManager.getDefaultOutgoingPhoneAccount(PhoneAccount.SCHEME_TEL)
-            when {
-                intent?.hasExtra(TelecomManager.EXTRA_PHONE_ACCOUNT_HANDLE) == true -> callback(intent.getParcelableExtra(TelecomManager.EXTRA_PHONE_ACCOUNT_HANDLE)!!)
-                config.getCustomSIM(phoneNumber)?.isNotEmpty() == true -> {
-                    val storedLabel = Uri.decode(config.getCustomSIM(phoneNumber))
-                    val availableSIMs = getAvailableSIMCardLabels()
-                    val firstOrNull = availableSIMs.firstOrNull { it.label == storedLabel }?.handle ?: availableSIMs.first().handle
-                    callback(firstOrNull)
-                }
-                defaultHandle != null -> callback(defaultHandle)
-                else -> {
-                    SelectSIMDialog(this, phoneNumber, onDismiss = {
-                        if (this is DialerActivity) {
-                            finish()
-                        }
-                    }) { handle ->
-                        callback(handle)
-                    }
-                }
-            }
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/extensions/Call.kt b/app/src/main/kotlin/com/goodwy/dialer/extensions/Call.kt
deleted file mode 100755
index eec7168..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/extensions/Call.kt
+++ /dev/null
@@ -1,43 +0,0 @@
-package com.goodwy.dialer.extensions
-
-import android.telecom.Call
-import android.telecom.Call.STATE_CONNECTING
-import android.telecom.Call.STATE_DIALING
-import android.telecom.Call.STATE_SELECT_PHONE_ACCOUNT
-import com.goodwy.commons.helpers.isQPlus
-import com.goodwy.commons.helpers.isSPlus
-
-private val OUTGOING_CALL_STATES = arrayOf(STATE_CONNECTING, STATE_DIALING, STATE_SELECT_PHONE_ACCOUNT)
-
-@Suppress("DEPRECATION")
-fun Call?.getStateCompat(): Int {
-    return when {
-        this == null -> Call.STATE_DISCONNECTED
-        isSPlus() -> details.state
-        else -> state
-    }
-}
-
-fun Call?.getCallDuration(): Int {
-    return if (this != null) {
-        val connectTimeMillis = details.connectTimeMillis
-        if (connectTimeMillis == 0L) {
-            return 0
-        }
-        ((System.currentTimeMillis() - connectTimeMillis) / 1000).toInt()
-    } else {
-        0
-    }
-}
-
-fun Call.isOutgoing(): Boolean {
-    return if (isQPlus()) {
-        details.callDirection == Call.Details.DIRECTION_OUTGOING
-    } else {
-        OUTGOING_CALL_STATES.contains(getStateCompat())
-    }
-}
-
-fun Call.hasCapability(capability: Int): Boolean = (details.callCapabilities and capability) != 0
-
-fun Call?.isConference(): Boolean = this?.details?.hasProperty(Call.Details.PROPERTY_CONFERENCE) == true
diff --git a/app/src/main/kotlin/com/goodwy/dialer/extensions/Context.kt b/app/src/main/kotlin/com/goodwy/dialer/extensions/Context.kt
deleted file mode 100755
index 621f727..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/extensions/Context.kt
+++ /dev/null
@@ -1,331 +0,0 @@
-package com.goodwy.dialer.extensions
-
-import android.annotation.SuppressLint
-import android.annotation.TargetApi
-import android.app.Notification
-import android.app.NotificationChannel
-import android.app.NotificationManager
-import android.app.PendingIntent
-import android.content.Context
-import android.content.Intent
-import android.content.res.Configuration
-import android.graphics.drawable.Drawable
-import android.media.AudioAttributes
-import android.media.AudioManager
-import android.media.RingtoneManager
-import android.net.Uri
-import android.os.Build
-import android.os.PowerManager
-import androidx.core.app.NotificationCompat
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.*
-import com.goodwy.dialer.R
-import com.goodwy.dialer.models.SIMAccount
-import com.goodwy.commons.helpers.isOreoPlus
-import com.goodwy.dialer.activities.CallActivity
-import com.goodwy.dialer.activities.SplashActivity
-import com.goodwy.dialer.databases.AppDatabase
-import com.goodwy.dialer.helpers.*
-import com.goodwy.dialer.interfaces.TimerDao
-import com.goodwy.dialer.models.CallContact
-import com.goodwy.dialer.models.Timer
-import com.goodwy.dialer.models.TimerState
-import com.goodwy.dialer.receivers.HideTimerReceiver
-import me.leolin.shortcutbadger.ShortcutBadger
-import java.util.*
-import kotlin.collections.ArrayList
-
-val Context.config: Config get() = Config.newInstance(applicationContext)
-
-val Context.audioManager: AudioManager get() = getSystemService(Context.AUDIO_SERVICE) as AudioManager
-
-val Context.powerManager: PowerManager get() = getSystemService(Context.POWER_SERVICE) as PowerManager
-
-@SuppressLint("MissingPermission")
-fun Context.getAvailableSIMCardLabels(): ArrayList<SIMAccount> {
-    val SIMAccounts = ArrayList<SIMAccount>()
-    try {
-        telecomManager.callCapablePhoneAccounts.forEachIndexed { index, account ->
-            val phoneAccount = telecomManager.getPhoneAccount(account)
-            var label = phoneAccount.label.toString()
-            var address = phoneAccount.address.toString()
-            if (address.startsWith("tel:") && address.substringAfter("tel:").isNotEmpty()) {
-                address = Uri.decode(address.substringAfter("tel:"))
-                label += " ($address)"
-            }
-
-            val SIM = SIMAccount(index + 1, phoneAccount.accountHandle, label, address.substringAfter("tel:"))
-            SIMAccounts.add(SIM)
-        }
-    } catch (ignored: Exception) {
-    }
-    return SIMAccounts
-}
-
-@SuppressLint("MissingPermission")
-fun Context.areMultipleSIMsAvailable(): Boolean {
-    return try {
-        telecomManager.callCapablePhoneAccounts.size > 1
-    } catch (ignored: Exception) {
-        false
-    }
-}
-
-fun Context.updateUnreadCountBadge(count: Int) {//conversations: List<RecentCall>) {
-    //val unreadCount = conversations.count { it.type ==  CallLog.Calls.MISSED_TYPE }
-    if (count == 0) {
-        ShortcutBadger.removeCount(this)
-    } else {
-        ShortcutBadger.applyCount(this, count)
-    }
-}
-
-@SuppressLint("NewApi")
-fun Context.showMessageNotification(callContact: CallContact) {//(address: String, body: String, threadId: Long, bitmap: Bitmap?, sender: String) {
-    val id = 420// если нужно группировать = callContact.number.hashCode()
-    val callContactAvatarHelper = CallContactAvatarHelper(this)
-    val callContactAvatar = callContactAvatarHelper.getCallContactAvatar(callContact)
-    val callerName = if (callContact != null && callContact.name.isNotEmpty()) callContact.name
-    else if (callContact.numberLabel.isNotEmpty()) " - ${callContact.numberLabel}"
-    else this.getString(R.string.unknown_caller)
-    config.numberMissedCalls = config.numberMissedCalls + 1
-
-    val notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
-    val soundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION)
-    if (isOreoPlus()) {
-        val audioAttributes = AudioAttributes.Builder()
-            .setUsage(AudioAttributes.USAGE_NOTIFICATION)
-            .setContentType(AudioAttributes.CONTENT_TYPE_SONIFICATION)
-            .setLegacyStreamType(AudioManager.STREAM_NOTIFICATION)
-            .build()
-
-        val name = getString(R.string.missed_call_notifications_g)
-        val importance = NotificationManager.IMPORTANCE_HIGH
-        NotificationChannel("right_dialer_missed_call", name, importance).apply {
-            setBypassDnd(false)
-            notificationManager.createNotificationChannel(this)
-        }
-    }
-
-    val openAppIntent = CallActivity.getStartIntent(this)
-
-    val pendingIntent = PendingIntent.getActivity(this, id, openAppIntent, PendingIntent.FLAG_MUTABLE)
-    val summaryText = getString(R.string.missed_call_g)
-    /*val markAsReadIntent = Intent(this, MarkAsReadReceiver::class.java).apply {
-    action = MARK_AS_READ
-    putExtra(THREAD_ID, threadId)
-}
-
-val markAsReadPendingIntent = PendingIntent.getBroadcast(this, threadId.hashCode(), markAsReadIntent, PendingIntent.FLAG_UPDATE_CURRENT)
-var replyAction: NotificationCompat.Action? = null
-
-if (isNougatPlus()) {
-    val replyLabel = getString(R.string.call_back_g)
-    val remoteInput = RemoteInput.Builder(REPLY)
-        .setLabel(replyLabel)
-        .build()
-
-    val replyIntent = Intent(this, DirectReplyReceiver::class.java).apply {
-        putExtra(THREAD_ID, threadId)
-        putExtra(THREAD_NUMBER, address)
-    }
-
-    val replyPendingIntent = PendingIntent.getBroadcast(applicationContext, threadId.hashCode(), replyIntent, PendingIntent.FLAG_UPDATE_CURRENT)
-    replyAction = NotificationCompat.Action.Builder(R.drawable.ic_send_vector, replyLabel, replyPendingIntent)
-        .addRemoteInput(remoteInput)
-        .build()
-}*/
-
-    //val largeIcon = bitmap ?: SimpleContactsHelper(this).getContactLetterIcon(sender)
-    val builder = NotificationCompat.Builder(this, "right_dialer_missed_call").apply {
-        if (config.numberMissedCalls == 1) {
-            setContentTitle(getString(R.string.missed_call_g))
-            setContentText(callerName)
-        } else {
-            setContentTitle(config.numberMissedCalls.toString() + " " + getString(R.string.missed_calls_g).lowercase())
-        }
-        color = getProperPrimaryColor()
-        setSmallIcon(R.drawable.ic_missed_call_vector)
-        setContentIntent(pendingIntent)
-        priority = NotificationCompat.PRIORITY_MAX
-        setDefaults(Notification.DEFAULT_LIGHTS)
-        setCategory(Notification.CATEGORY_MISSED_CALL)
-        setAutoCancel(true)
-        addAction(
-            R.drawable.ic_messages,
-            getString(R.string.message),
-            sendSMSPendingIntent(callContact.number)
-        )
-        addAction(
-            R.drawable.ic_phone_vector,
-            getString(R.string.call_back_g),
-            startCallPendingIntent(callContact.number)
-        )
-    }
-
-    /*if (replyAction != null && config.lockScreenVisibilitySetting == LOCK_SCREEN_SENDER_MESSAGE) {
-    builder.addAction(replyAction)
-}
-
-builder.addAction(R.drawable.ic_check_vector, getString(R.string.mark_as_read), markAsReadPendingIntent)
-    .setChannelId("right_dialer_call")*/
-
-    notificationManager.notify(id, builder.build())
-    updateUnreadCountBadge(config.numberMissedCalls)
-}
-
-fun Context.sysLocale(): Locale? {
-    val config = this.resources.configuration
-    return if (isNougatPlus()) {
-        getSystemLocale(config)
-    } else {
-        getSystemLocaleLegacy(config)
-    }
-}
-
-private fun getSystemLocaleLegacy(config: Configuration) = config.locale
-
-@TargetApi(Build.VERSION_CODES.N)
-private fun getSystemLocale(config: Configuration) = config.locales.get(0)
-
-@SuppressLint("UseCompatLoadingForDrawables")
-fun Context.getPackageDrawable(packageName: String): Drawable {
-    return resources.getDrawable(
-        when (packageName) {
-            TELEGRAM_PACKAGE -> R.drawable.ic_telegram_vector
-            SIGNAL_PACKAGE -> R.drawable.ic_signal_vector
-            WHATSAPP_PACKAGE -> R.drawable.ic_whatsapp_vector
-            VIBER_PACKAGE -> R.drawable.ic_viber_vector
-            else -> R.drawable.ic_threema_vector
-        }, theme
-    )
-}
-
-//Timer
-val Context.timerDb: TimerDao get() = AppDatabase.getInstance(applicationContext).TimerDao()
-val Context.timerHelper: TimerHelper get() = TimerHelper(this)
-
-fun Context.getOpenTimerTabIntent(timerId: Int): PendingIntent {
-    val intent = getLaunchIntent() ?: Intent(this, SplashActivity::class.java)
-    //intent.putExtra(OPEN_TAB, TAB_TIMER)
-    //intent.putExtra(TIMER_ID, timerId)
-    return PendingIntent.getActivity(this, timerId, intent, PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE)
-}
-
-fun Context.hideNotification(id: Int) {
-    val manager = applicationContext.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
-    manager.cancel(id)
-}
-
-fun Context.getTimerNotification(timer: Timer, pendingIntent: PendingIntent, addDeleteIntent: Boolean): Notification {
-    var soundUri = timer.soundUri
-    if (soundUri == SILENT) {
-        soundUri = ""
-    } else {
-        grantReadUriPermission(soundUri)
-    }
-
-    val notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
-    val channelId = timer.channelId ?: "simple_timer_channel_${soundUri}_${System.currentTimeMillis()}"
-    timerHelper.insertOrUpdateTimer(timer.copy(channelId = channelId))
-
-    if (isOreoPlus()) {
-        try {
-            notificationManager.deleteNotificationChannel(channelId)
-        } catch (e: Exception) {
-        }
-
-        val audioAttributes = AudioAttributes.Builder()
-            .setUsage(AudioAttributes.USAGE_ALARM)
-            .setContentType(AudioAttributes.CONTENT_TYPE_SONIFICATION)
-            .setLegacyStreamType(AudioManager.STREAM_ALARM)
-            .build()
-
-        val name = getString(R.string.timer)
-        val importance = NotificationManager.IMPORTANCE_HIGH
-        NotificationChannel(channelId, name, importance).apply {
-            setBypassDnd(true)
-            enableLights(true)
-            lightColor = getProperPrimaryColor()
-            setSound(Uri.parse(soundUri), audioAttributes)
-
-            if (!timer.vibrate) {
-                vibrationPattern = longArrayOf(0L)
-            }
-
-            enableVibration(timer.vibrate)
-            notificationManager.createNotificationChannel(this)
-        }
-    }
-
-    val reminderActivityIntent = getOpenTimerTabIntent(timer.id!!)
-    val builder = NotificationCompat.Builder(this)
-        .setContentTitle(getString(R.string.remind_me))
-        .setContentText(String.format(this.getString(R.string.call_back_person_g), timer.title))
-        .setSmallIcon(R.drawable.ic_remind_call)
-        .setContentIntent(pendingIntent)
-        .setPriority(NotificationCompat.PRIORITY_MAX)
-        .setDefaults(Notification.DEFAULT_LIGHTS)
-        .setCategory(Notification.CATEGORY_EVENT)
-        .setAutoCancel(true)
-        .setSound(Uri.parse(soundUri), AudioManager.STREAM_ALARM)
-        .setChannelId(channelId)
-        .addAction(
-            R.drawable.ic_cross_vector,
-            getString(R.string.dismiss),
-            if (addDeleteIntent) {
-                reminderActivityIntent
-            } else {
-                getHideTimerPendingIntent(timer.id!!)
-            }
-        )
-        .addAction(
-            R.drawable.ic_messages,
-            getString(R.string.message),
-            sendSMSPendingIntent(timer.label)
-        )
-        .addAction(
-            R.drawable.ic_phone_vector,
-            getString(R.string.call_back_g),
-            startCallPendingIntent(timer.label)
-        )
-
-    if (addDeleteIntent) {
-        builder.setDeleteIntent(reminderActivityIntent)
-    }
-
-    builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC)
-
-    if (timer.vibrate) {
-        val vibrateArray = LongArray(2) { 500 }
-        builder.setVibrate(vibrateArray)
-    }
-
-    val notification = builder.build()
-    notification.flags = notification.flags or Notification.FLAG_INSISTENT
-    return notification
-}
-
-fun Context.getHideTimerPendingIntent(timerId: Int): PendingIntent {
-    val intent = Intent(this, HideTimerReceiver::class.java)
-    intent.putExtra(TIMER_ID, timerId)
-    return PendingIntent.getBroadcast(this, timerId, intent, PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE)
-}
-
-fun Context.hideTimerNotification(timerId: Int) = hideNotification(timerId)
-
-fun Context.createNewTimer(): Timer {
-    return Timer(
-        1,
-        config.timerSeconds,
-        TimerState.Idle,
-        config.timerVibrate,
-        config.timerSoundUri,
-        config.timerSoundTitle,
-        config.timerTitle ?: "",
-        config.timerLabel ?: "",
-        config.timerDescription ?: "",
-        System.currentTimeMillis(),
-        config.timerChannelId,
-    )
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/extensions/EditText.kt b/app/src/main/kotlin/com/goodwy/dialer/extensions/EditText.kt
deleted file mode 100755
index 8bf5dca..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/extensions/EditText.kt
+++ /dev/null
@@ -1,30 +0,0 @@
-package com.goodwy.dialer.extensions
-
-import android.view.KeyEvent
-import android.widget.EditText
-
-fun EditText.addCharacter(char: Char) {
-    dispatchKeyEvent(getKeyEvent(getCharKeyCode(char)))
-}
-
-fun EditText.getKeyEvent(keyCode: Int) = KeyEvent(0, 0, KeyEvent.ACTION_DOWN, keyCode, 0)
-
-private fun getCharKeyCode(char: Char) = when (char) {
-    '0' -> KeyEvent.KEYCODE_0
-    '1' -> KeyEvent.KEYCODE_1
-    '2' -> KeyEvent.KEYCODE_2
-    '3' -> KeyEvent.KEYCODE_3
-    '4' -> KeyEvent.KEYCODE_4
-    '5' -> KeyEvent.KEYCODE_5
-    '6' -> KeyEvent.KEYCODE_6
-    '7' -> KeyEvent.KEYCODE_7
-    '8' -> KeyEvent.KEYCODE_8
-    '9' -> KeyEvent.KEYCODE_9
-    '*' -> KeyEvent.KEYCODE_STAR
-    '+' -> KeyEvent.KEYCODE_PLUS
-    else -> KeyEvent.KEYCODE_POUND
-}
-
-fun EditText.disableKeyboard() {
-    showSoftInputOnFocus = false
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/extensions/Long.kt b/app/src/main/kotlin/com/goodwy/dialer/extensions/Long.kt
deleted file mode 100644
index 1b78c58..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/extensions/Long.kt
+++ /dev/null
@@ -1,9 +0,0 @@
-package com.goodwy.dialer.extensions
-
-
-import com.goodwy.commons.extensions.getFormattedDuration
-import kotlin.math.roundToInt
-
-fun Long.getFormattedDuration(forceShowHours: Boolean = false): String {
-    return this.div(1000F).roundToInt().getFormattedDuration(forceShowHours)
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/extensions/RuntimeTypeAdapterFactory.java b/app/src/main/kotlin/com/goodwy/dialer/extensions/RuntimeTypeAdapterFactory.java
deleted file mode 100644
index 29415b6..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/extensions/RuntimeTypeAdapterFactory.java
+++ /dev/null
@@ -1,267 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.goodwy.dialer.extensions;
-
-import com.google.gson.Gson;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonParseException;
-import com.google.gson.JsonPrimitive;
-import com.google.gson.TypeAdapter;
-import com.google.gson.TypeAdapterFactory;
-import com.google.gson.internal.Streams;
-import com.google.gson.reflect.TypeToken;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import java.io.IOException;
-import java.util.LinkedHashMap;
-import java.util.Map;
-
-/**
- * Adapts values whose runtime type may differ from their declaration type. This
- * is necessary when a field's type is not the same type that GSON should create
- * when deserializing that field. For example, consider these types:
- * <pre>   {@code
- *   abstract class Shape {
- *     int x;
- *     int y;
- *   }
- *   class Circle extends Shape {
- *     int radius;
- *   }
- *   class Rectangle extends Shape {
- *     int width;
- *     int height;
- *   }
- *   class Diamond extends Shape {
- *     int width;
- *     int height;
- *   }
- *   class Drawing {
- *     Shape bottomShape;
- *     Shape topShape;
- *   }
- * }</pre>
- * <p>Without additional type information, the serialized JSON is ambiguous. Is
- * the bottom shape in this drawing a rectangle or a diamond? <pre>   {@code
- *   {
- *     "bottomShape": {
- *       "width": 10,
- *       "height": 5,
- *       "x": 0,
- *       "y": 0
- *     },
- *     "topShape": {
- *       "radius": 2,
- *       "x": 4,
- *       "y": 1
- *     }
- *   }}</pre>
- * This class addresses this problem by adding type information to the
- * serialized JSON and honoring that type information when the JSON is
- * deserialized: <pre>   {@code
- *   {
- *     "bottomShape": {
- *       "type": "Diamond",
- *       "width": 10,
- *       "height": 5,
- *       "x": 0,
- *       "y": 0
- *     },
- *     "topShape": {
- *       "type": "Circle",
- *       "radius": 2,
- *       "x": 4,
- *       "y": 1
- *     }
- *   }}</pre>
- * Both the type field name ({@code "type"}) and the type labels ({@code
- * "Rectangle"}) are configurable.
- *
- * <h3>Registering Types</h3>
- * Create a {@code RuntimeTypeAdapterFactory} by passing the base type and type field
- * name to the {@link #of} factory method. If you don't supply an explicit type
- * field name, {@code "type"} will be used. <pre>   {@code
- *   RuntimeTypeAdapterFactory<Shape> shapeAdapterFactory
- *       = RuntimeTypeAdapterFactory.of(Shape.class, "type");
- * }</pre>
- * Next register all of your subtypes. Every subtype must be explicitly
- * registered. This protects your application from injection attacks. If you
- * don't supply an explicit type label, the type's simple name will be used.
- * <pre>   {@code
- *   shapeAdapterFactory.registerSubtype(Rectangle.class, "Rectangle");
- *   shapeAdapterFactory.registerSubtype(Circle.class, "Circle");
- *   shapeAdapterFactory.registerSubtype(Diamond.class, "Diamond");
- * }</pre>
- * Finally, register the type adapter factory in your application's GSON builder:
- * <pre>   {@code
- *   Gson gson = new GsonBuilder()
- *       .registerTypeAdapterFactory(shapeAdapterFactory)
- *       .create();
- * }</pre>
- * Like {@code GsonBuilder}, this API supports chaining: <pre>   {@code
- *   RuntimeTypeAdapterFactory<Shape> shapeAdapterFactory = RuntimeTypeAdapterFactory.of(Shape.class)
- *       .registerSubtype(Rectangle.class)
- *       .registerSubtype(Circle.class)
- *       .registerSubtype(Diamond.class);
- * }</pre>
- */
-public final class RuntimeTypeAdapterFactory<T> implements TypeAdapterFactory {
-    private final Class<?> baseType;
-    private final String typeFieldName;
-    private final Map<String, Class<?>> labelToSubtype = new LinkedHashMap<String, Class<?>>();
-    private final Map<Class<?>, String> subtypeToLabel = new LinkedHashMap<Class<?>, String>();
-    private final boolean maintainType;
-
-    private RuntimeTypeAdapterFactory(Class<?> baseType, String typeFieldName, boolean maintainType) {
-        if (typeFieldName == null || baseType == null) {
-            throw new NullPointerException();
-        }
-        this.baseType = baseType;
-        this.typeFieldName = typeFieldName;
-        this.maintainType = maintainType;
-    }
-
-    /**
-     * Creates a new runtime type adapter using for {@code baseType} using {@code
-     * typeFieldName} as the type field name. Type field names are case sensitive.
-     * {@code maintainType} flag decide if the type will be stored in pojo or not.
-     */
-    public static <T> RuntimeTypeAdapterFactory<T> of(Class<T> baseType, String typeFieldName, boolean maintainType) {
-        return new RuntimeTypeAdapterFactory<T>(baseType, typeFieldName, maintainType);
-    }
-
-    /**
-     * Creates a new runtime type adapter using for {@code baseType} using {@code
-     * typeFieldName} as the type field name. Type field names are case sensitive.
-     */
-    public static <T> RuntimeTypeAdapterFactory<T> of(Class<T> baseType, String typeFieldName) {
-        return new RuntimeTypeAdapterFactory<T>(baseType, typeFieldName, false);
-    }
-
-    /**
-     * Creates a new runtime type adapter for {@code baseType} using {@code "type"} as
-     * the type field name.
-     */
-    public static <T> RuntimeTypeAdapterFactory<T> of(Class<T> baseType) {
-        return new RuntimeTypeAdapterFactory<T>(baseType, "type", false);
-    }
-
-    /**
-     * Registers {@code type} identified by {@code label}. Labels are case
-     * sensitive.
-     *
-     * @throws IllegalArgumentException if either {@code type} or {@code label}
-     *                                  have already been registered on this type adapter.
-     */
-    public RuntimeTypeAdapterFactory<T> registerSubtype(Class<? extends T> type, String label) {
-        if (type == null || label == null) {
-            throw new NullPointerException();
-        }
-        if (subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)) {
-            throw new IllegalArgumentException("types and labels must be unique");
-        }
-        labelToSubtype.put(label, type);
-        subtypeToLabel.put(type, label);
-        return this;
-    }
-
-    /**
-     * Registers {@code type} identified by its {@link Class#getSimpleName simple
-     * name}. Labels are case sensitive.
-     *
-     * @throws IllegalArgumentException if either {@code type} or its simple name
-     *                                  have already been registered on this type adapter.
-     */
-    public RuntimeTypeAdapterFactory<T> registerSubtype(Class<? extends T> type) {
-        return registerSubtype(type, type.getSimpleName());
-    }
-
-    public <R> TypeAdapter<R> create(Gson gson, TypeToken<R> type) {
-        if (type.getRawType() != baseType) {
-            return null;
-        }
-
-        final Map<String, TypeAdapter<?>> labelToDelegate
-                = new LinkedHashMap<String, TypeAdapter<?>>();
-        final Map<Class<?>, TypeAdapter<?>> subtypeToDelegate
-                = new LinkedHashMap<Class<?>, TypeAdapter<?>>();
-        for (Map.Entry<String, Class<?>> entry : labelToSubtype.entrySet()) {
-            TypeAdapter<?> delegate = gson.getDelegateAdapter(this, TypeToken.get(entry.getValue()));
-            labelToDelegate.put(entry.getKey(), delegate);
-            subtypeToDelegate.put(entry.getValue(), delegate);
-        }
-
-        return new TypeAdapter<R>() {
-            @Override
-            public R read(JsonReader in) throws IOException {
-                JsonElement jsonElement = Streams.parse(in);
-                JsonElement labelJsonElement;
-                if (maintainType) {
-                    labelJsonElement = jsonElement.getAsJsonObject().get(typeFieldName);
-                } else {
-                    labelJsonElement = jsonElement.getAsJsonObject().remove(typeFieldName);
-                }
-
-                if (labelJsonElement == null) {
-                    throw new JsonParseException("cannot deserialize " + baseType
-                            + " because it does not define a field named " + typeFieldName);
-                }
-                String label = labelJsonElement.getAsString();
-                @SuppressWarnings("unchecked") // registration requires that subtype extends T
-                        TypeAdapter<R> delegate = (TypeAdapter<R>) labelToDelegate.get(label);
-                if (delegate == null) {
-                    throw new JsonParseException("cannot deserialize " + baseType + " subtype named "
-                            + label + "; did you forget to register a subtype?");
-                }
-                return delegate.fromJsonTree(jsonElement);
-            }
-
-            @Override
-            public void write(JsonWriter out, R value) throws IOException {
-                Class<?> srcType = value.getClass();
-                String label = subtypeToLabel.get(srcType);
-                @SuppressWarnings("unchecked") // registration requires that subtype extends T
-                        TypeAdapter<R> delegate = (TypeAdapter<R>) subtypeToDelegate.get(srcType);
-                if (delegate == null) {
-                    throw new JsonParseException("cannot serialize " + srcType.getName()
-                            + "; did you forget to register a subtype?");
-                }
-                JsonObject jsonObject = delegate.toJsonTree(value).getAsJsonObject();
-
-                if (maintainType) {
-                    Streams.write(jsonObject, out);
-                    return;
-                }
-
-                JsonObject clone = new JsonObject();
-
-                if (jsonObject.has(typeFieldName)) {
-                    throw new JsonParseException("cannot serialize " + srcType.getName()
-                            + " because it already defines a field named " + typeFieldName);
-                }
-                clone.add(typeFieldName, new JsonPrimitive(label));
-
-                for (Map.Entry<String, JsonElement> e : jsonObject.entrySet()) {
-                    clone.add(e.getKey(), e.getValue());
-                }
-                Streams.write(clone, out);
-            }
-        }.nullSafe();
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/extensions/String.kt b/app/src/main/kotlin/com/goodwy/dialer/extensions/String.kt
deleted file mode 100755
index 545db0b..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/extensions/String.kt
+++ /dev/null
@@ -1,67 +0,0 @@
-package com.goodwy.dialer.extensions
-
-import android.annotation.SuppressLint
-import android.content.Context
-import android.telephony.TelephonyManager
-import com.google.i18n.phonenumbers.NumberParseException
-import com.google.i18n.phonenumbers.PhoneNumberUtil
-import com.google.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder
-import java.util.*
-
-@SuppressLint("ConstantLocale")
-private val countryCode = Locale.getDefault().country
-
-fun getPhoneNumberFormat(context: Context, number: String): String {
-    return try {
-        val phoneUtil = PhoneNumberUtil.getInstance()
-        //val nameCode = number.getCountryIsoCode(context)
-        val numberParse = phoneUtil.parse(number, countryCode) //context.sysLocale()!!.language //nameCode
-        phoneUtil.format(numberParse, PhoneNumberUtil.PhoneNumberFormat.INTERNATIONAL)
-    } catch (e: NumberParseException) {
-        System.err.println("getPhoneNumberFormat() was thrown: $e")
-        number
-    }
-}
-
-fun getCountryByNumber(context: Context, number: String): String {
-    return try {
-        val phoneUtil = PhoneNumberUtil.getInstance()
-        val geocoder = PhoneNumberOfflineGeocoder.getInstance()
-        //val nameCode = number.getCountryIsoCode(context)
-        val numberParse = phoneUtil.parse(number, countryCode) //context.sysLocale()!!.language
-        geocoder.getDescriptionForNumber(numberParse, Locale.getDefault())
-    } catch (e: NumberParseException) {
-        System.err.println("getCountryByNumber() was thrown: $e")
-        ""
-    }
-}
-
-fun getPhoneNumberType(context: Context, number: String): String? {
-    return try {
-        val phoneUtil = PhoneNumberUtil.getInstance()
-        //val nameCode = number.getCountryIsoCode(context)
-        val numberParse = phoneUtil.parse(number, countryCode) //context.sysLocale()!!.language
-        phoneUtil.getNumberType(numberParse).toString()
-    } catch (e: NumberParseException) {
-        System.err.println("getPhoneNumberType() was thrown: $e")
-        null
-    }
-}
-
-/*fun String.getCountryIsoCode(context: Context?): String? {
-    val ctx = context ?: return null
-
-    val validateNumber = if (this.startsWith("+")) this else {
-        return  (ctx.getSystemService(Context.TELEPHONY_SERVICE) as? TelephonyManager)?.networkCountryIso?.uppercase()
-    }
-
-    val phoneUtil = PhoneNumberUtil.getInstance()
-    val phoneNumber = try {
-        phoneUtil.parse(validateNumber, null)
-    } catch (e: NumberParseException) {
-        System.err.println("getCountryIsoCode() was thrown: $e")
-        null
-    } ?: return null
-
-    return phoneUtil.getRegionCodeForCountryCode(phoneNumber.countryCode)
-}*/
diff --git a/app/src/main/kotlin/com/goodwy/dialer/extensions/View.kt b/app/src/main/kotlin/com/goodwy/dialer/extensions/View.kt
deleted file mode 100644
index 036d893..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/extensions/View.kt
+++ /dev/null
@@ -1,7 +0,0 @@
-package com.goodwy.dialer.extensions
-
-import android.graphics.Rect
-import android.view.View
-
-val View.boundingBox
-    get() = Rect().also { getGlobalVisibleRect(it) }
diff --git a/app/src/main/kotlin/com/goodwy/dialer/fragments/ContactsFragment.kt b/app/src/main/kotlin/com/goodwy/dialer/fragments/ContactsFragment.kt
deleted file mode 100755
index 966c239..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/fragments/ContactsFragment.kt
+++ /dev/null
@@ -1,174 +0,0 @@
-package com.goodwy.dialer.fragments
-
-import android.content.Context
-import android.util.AttributeSet
-import com.reddit.indicatorfastscroll.FastScrollItemIndicator
-import com.goodwy.commons.adapters.MyRecyclerViewAdapter
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.*
-import com.goodwy.commons.models.contacts.Contact
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.MainActivity
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.adapters.ContactsAdapter
-import com.goodwy.dialer.extensions.launchCreateNewContactIntent
-import com.goodwy.dialer.extensions.startContactDetailsIntent
-import com.goodwy.dialer.interfaces.RefreshItemsListener
-import kotlinx.android.synthetic.main.fragment_contacts.view.*
-import kotlinx.android.synthetic.main.fragment_letters_layout.view.*
-import java.util.*
-
-class ContactsFragment(context: Context, attributeSet: AttributeSet) : MyViewPagerFragment(context, attributeSet), RefreshItemsListener {
-    private var allContacts = ArrayList<Contact>()
-
-    override fun setupFragment() {
-        contacts_fragment.setBackgroundColor(context.getProperBackgroundColor())
-        val placeholderResId = if (context.hasPermission(PERMISSION_READ_CONTACTS)) {
-            R.string.no_contacts_found
-        } else {
-            R.string.could_not_access_contacts
-        }
-
-        fragment_placeholder.text = context.getString(placeholderResId)
-
-        val placeholderActionResId = if (context.hasPermission(PERMISSION_READ_CONTACTS)) {
-            R.string.create_new_contact
-        } else {
-            R.string.request_access
-        }
-
-        fragment_placeholder_2.apply {
-            text = context.getString(placeholderActionResId)
-            underlineText()
-            setOnClickListener {
-                if (context.hasPermission(PERMISSION_READ_CONTACTS)) {
-                    activity?.launchCreateNewContactIntent()
-                } else {
-                    requestReadContactsPermission()
-                }
-            }
-        }
-    }
-
-    override fun setupColors(textColor: Int, primaryColor: Int, properPrimaryColor: Int) {
-        (fragment_list?.adapter as? MyRecyclerViewAdapter)?.updateTextColor(textColor)
-        fragment_placeholder.setTextColor(textColor)
-        fragment_placeholder_2.setTextColor(properPrimaryColor)
-
-        letter_fastscroller.textColor = textColor.getColorStateList()
-        letter_fastscroller.pressedTextColor = properPrimaryColor
-        letter_fastscroller_thumb.setupWithFastScroller(letter_fastscroller)
-        letter_fastscroller_thumb.textColor = properPrimaryColor.getContrastColor()
-        letter_fastscroller_thumb.thumbColor = properPrimaryColor.getColorStateList()
-    }
-
-    override fun refreshItems(callback: (() -> Unit)?) {
-        val privateCursor = context?.getMyContactsCursor(false, true)
-        ContactsHelper(context).getContacts { contacts ->
-            allContacts = contacts
-
-            if (SMT_PRIVATE !in context.baseConfig.ignoredContactSources) {
-                val privateContacts = MyContactsContentProvider.getContacts(context, privateCursor)
-                if (privateContacts.isNotEmpty()) {
-                    allContacts.addAll(privateContacts)
-                    allContacts.sort()
-                }
-            }
-            (activity as MainActivity).cacheContacts(allContacts)
-
-            activity?.runOnUiThread {
-                gotContacts(contacts)
-                callback?.invoke()
-            }
-        }
-    }
-
-    private fun gotContacts(contacts: ArrayList<Contact>) {
-        setupLetterFastscroller(contacts)
-        if (contacts.isEmpty()) {
-            fragment_placeholder.beVisible()
-            fragment_placeholder_2.beVisible()
-            fragment_list.beGone()
-        } else {
-            fragment_placeholder.beGone()
-            fragment_placeholder_2.beGone()
-            fragment_list.beVisible()
-
-            val currAdapter = fragment_list.adapter
-            if (currAdapter == null) {
-                ContactsAdapter(activity as SimpleActivity, contacts, fragment_list, this, showIcon = false, showNumber = context.baseConfig.showPhoneNumbers) {
-                    val contact = it as Contact
-                    activity?.startContactDetailsIntent(contact)
-                }.apply {
-                    fragment_list.adapter = this
-                }
-
-                if (context.areSystemAnimationsEnabled) {
-                    fragment_list.scheduleLayoutAnimation()
-                }
-            } else {
-                (currAdapter as ContactsAdapter).updateItems(contacts)
-            }
-        }
-    }
-
-    private fun setupLetterFastscroller(contacts: ArrayList<Contact>) {
-        letter_fastscroller.setupWithRecyclerView(fragment_list, { position ->
-            try {
-                val name = contacts[position].getNameToDisplay()
-                val character = if (name.isNotEmpty()) name.substring(0, 1) else ""
-                FastScrollItemIndicator.Text(character.toUpperCase(Locale.getDefault()).normalizeString())
-            } catch (e: Exception) {
-                FastScrollItemIndicator.Text("")
-            }
-        })
-    }
-
-    override fun onSearchClosed() {
-        fragment_placeholder.beVisibleIf(allContacts.isEmpty())
-        (fragment_list.adapter as? ContactsAdapter)?.updateItems(allContacts)
-        setupLetterFastscroller(allContacts)
-    }
-
-    override fun onSearchQueryChanged(text: String) {
-        val shouldNormalize = text.normalizeString() == text
-        val filtered = allContacts.filter {
-            getProperText(it.getNameToDisplay(), shouldNormalize).contains(text, true) ||
-                getProperText(it.nickname, shouldNormalize).contains(text, true) ||
-                it.phoneNumbers.any {
-                    text.normalizePhoneNumber().isNotEmpty() && it.normalizedNumber.contains(text.normalizePhoneNumber(), true)
-                } ||
-                it.emails.any { it.value.contains(text, true) } ||
-                it.addresses.any { getProperText(it.value, shouldNormalize).contains(text, true) } ||
-                it.IMs.any { it.value.contains(text, true) } ||
-                getProperText(it.notes, shouldNormalize).contains(text, true) ||
-                getProperText(it.organization.company, shouldNormalize).contains(text, true) ||
-                getProperText(it.organization.jobPosition, shouldNormalize).contains(text, true) ||
-                it.websites.any { it.contains(text, true) }
-        } as ArrayList
-
-        filtered.sortBy {
-            val nameToDisplay = it.getNameToDisplay()
-            !getProperText(nameToDisplay, shouldNormalize).startsWith(text, true) && !nameToDisplay.contains(text, true)
-        }
-
-        fragment_placeholder.beVisibleIf(filtered.isEmpty())
-        (fragment_list.adapter as? ContactsAdapter)?.updateItems(filtered, text)
-        setupLetterFastscroller(filtered)
-    }
-
-    private fun requestReadContactsPermission() {
-        activity?.handlePermission(PERMISSION_READ_CONTACTS) {
-            if (it) {
-                fragment_placeholder.text = context.getString(R.string.no_contacts_found)
-                fragment_placeholder_2.text = context.getString(R.string.create_new_contact)
-                ContactsHelper(context).getContacts { contacts ->
-                    activity?.runOnUiThread {
-                        gotContacts(contacts)
-                    }
-                }
-            }
-        }
-    }
-
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/fragments/FavoritesFragment.kt b/app/src/main/kotlin/com/goodwy/dialer/fragments/FavoritesFragment.kt
deleted file mode 100755
index 0286ebf..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/fragments/FavoritesFragment.kt
+++ /dev/null
@@ -1,208 +0,0 @@
-package com.goodwy.dialer.fragments
-
-import android.content.Context
-import android.util.AttributeSet
-import com.google.gson.Gson
-import com.reddit.indicatorfastscroll.FastScrollItemIndicator
-import com.goodwy.commons.adapters.MyRecyclerViewAdapter
-import com.goodwy.commons.dialogs.CallConfirmationDialog
-import com.goodwy.commons.dialogs.RadioGroupDialog
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.ContactsHelper
-import com.goodwy.commons.helpers.MyContactsContentProvider
-import com.goodwy.commons.helpers.PERMISSION_READ_CONTACTS
-import com.goodwy.commons.helpers.SMT_PRIVATE
-import com.goodwy.commons.models.RadioItem
-import com.goodwy.commons.models.contacts.Contact
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.adapters.ContactsAdapter
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.helpers.Converters
-import com.goodwy.dialer.interfaces.RefreshItemsListener
-import kotlinx.android.synthetic.main.fragment_favorites.view.*
-import kotlinx.android.synthetic.main.fragment_letters_layout.view.*
-import java.util.*
-
-class FavoritesFragment(context: Context, attributeSet: AttributeSet) : MyViewPagerFragment(context, attributeSet), RefreshItemsListener {
-    private var allContacts = ArrayList<Contact>()
-
-    override fun setupFragment() {
-        favorites_fragment.setBackgroundColor(context.getProperBackgroundColor())
-        val placeholderResId = if (context.hasPermission(PERMISSION_READ_CONTACTS)) {
-            R.string.no_contacts_found
-        } else {
-            R.string.could_not_access_contacts
-        }
-
-        fragment_placeholder.text = context.getString(placeholderResId)
-        fragment_placeholder_2.beGone()
-        letter_fastscroller_thumb.beGone()
-        letter_fastscroller.beGone()
-    }
-
-    override fun setupColors(textColor: Int, primaryColor: Int, properPrimaryColor: Int) {
-        fragment_placeholder.setTextColor(textColor)
-        (fragment_list?.adapter as? MyRecyclerViewAdapter)?.updateTextColor(textColor)
-
-        letter_fastscroller.textColor = textColor.getColorStateList()
-        letter_fastscroller.pressedTextColor = properPrimaryColor
-        letter_fastscroller_thumb.setupWithFastScroller(letter_fastscroller)
-        letter_fastscroller_thumb.textColor = properPrimaryColor.getContrastColor()
-        letter_fastscroller_thumb.thumbColor = properPrimaryColor.getColorStateList()
-    }
-
-    override fun refreshItems(callback: (() -> Unit)?) {
-        ContactsHelper(context).getContacts { contacts ->
-            allContacts = contacts
-
-            if (SMT_PRIVATE !in context.baseConfig.ignoredContactSources) {
-                val privateCursor = context?.getMyContactsCursor(true, true)
-                val privateContacts = MyContactsContentProvider.getContacts(context, privateCursor).map {
-                    it.copy(starred = 1)
-                }
-                if (privateContacts.isNotEmpty()) {
-                    allContacts.addAll(privateContacts)
-                    allContacts.sort()
-                }
-            }
-            val favorites = contacts.filter { it.starred == 1 } as ArrayList<Contact>
-
-            allContacts = if (activity!!.config.isCustomOrderSelected) {
-                sortByCustomOrder(favorites)
-            } else {
-                favorites
-            }
-
-            activity?.runOnUiThread {
-                gotContacts(allContacts)
-                callback?.invoke()
-            }
-        }
-    }
-
-    private fun gotContacts(contacts: ArrayList<Contact>) {
-        setupLetterFastscroller(contacts)
-        if (contacts.isEmpty()) {
-            fragment_placeholder.beVisible()
-            fragment_list.beGone()
-        } else {
-            fragment_placeholder.beGone()
-            fragment_list.beVisible()
-
-            val currAdapter = fragment_list.adapter
-            if (currAdapter == null) {
-                ContactsAdapter(
-                    activity = activity as SimpleActivity,
-                    contacts = contacts,
-                    recyclerView = fragment_list,
-                    refreshItemsListener = this,
-                    showDeleteButton = false,
-                    enableDrag = true,
-                    showNumber = context.baseConfig.showPhoneNumbers
-                ) {
-                    if (context.config.showCallConfirmation) {
-                        CallConfirmationDialog(activity as SimpleActivity, (it as Contact).getNameToDisplay()) {
-                            callContact(it)
-                        }
-                    } else {
-                        callContact(it as Contact)
-                    }
-                }.apply {
-                    fragment_list.adapter = this
-
-                    onDragEndListener = {
-                        val adapter = fragment_list?.adapter
-                        if (adapter is ContactsAdapter) {
-                            val items = adapter.contacts
-                            saveCustomOrderToPrefs(items)
-                            setupLetterFastscroller(items)
-                        }
-                    }
-                }
-
-                if (context.areSystemAnimationsEnabled) {
-                    fragment_list.scheduleLayoutAnimation()
-                }
-            } else {
-                (currAdapter as ContactsAdapter).updateItems(contacts)
-            }
-        }
-    }
-
-    private fun sortByCustomOrder(favorites: List<Contact>): ArrayList<Contact> {
-        val favoritesOrder = activity!!.config.favoritesContactsOrder
-
-        if (favoritesOrder.isEmpty()) {
-            return ArrayList(favorites)
-        }
-
-        val orderList = Converters().jsonToStringList(favoritesOrder)
-        val map = orderList.withIndex().associate { it.value to it.index }
-        val sorted = favorites.sortedBy { map[it.contactId.toString()] }
-
-        return ArrayList(sorted)
-    }
-
-    private fun saveCustomOrderToPrefs(items: ArrayList<Contact>) {
-        activity?.apply {
-            val orderIds = items.map { it.contactId }
-            val orderGsonString = Gson().toJson(orderIds)
-            config.favoritesContactsOrder = orderGsonString
-        }
-    }
-
-    private fun callContact(simpleContact: Contact) {
-        val phoneNumbers = simpleContact.phoneNumbers
-        if (phoneNumbers.isEmpty()) {
-            return
-        } else if (phoneNumbers.size <= 1) {
-            activity?.launchCallIntent(phoneNumbers.first().normalizedNumber)
-        } else {
-            val primaryNumber = simpleContact.phoneNumbers.find { it.isPrimary }
-            if (primaryNumber != null) {
-                activity?.launchCallIntent(primaryNumber.value)
-            } else {
-                val items = ArrayList<RadioItem>()
-                phoneNumbers.forEachIndexed { index, phoneNumber ->
-                    val type = context.getPhoneNumberTypeText(phoneNumber.type, phoneNumber.label)
-                    items.add(RadioItem(index, "${phoneNumber.normalizedNumber} ($type)", phoneNumber.normalizedNumber))
-                }
-
-                RadioGroupDialog(activity!!, items) {
-                    activity?.launchCallIntent(it as String)
-                }
-            }
-        }
-    }
-
-    private fun setupLetterFastscroller(contacts: ArrayList<Contact>) {
-        letter_fastscroller.setupWithRecyclerView(fragment_list, { position ->
-            try {
-                val name = contacts[position].getNameToDisplay()
-                val character = if (name.isNotEmpty()) name.substring(0, 1) else ""
-                FastScrollItemIndicator.Text(character.toUpperCase(Locale.getDefault()).normalizeString())
-            } catch (e: Exception) {
-                FastScrollItemIndicator.Text("")
-            }
-        })
-    }
-
-    override fun onSearchClosed() {
-        fragment_placeholder.beVisibleIf(allContacts.isEmpty())
-        (fragment_list.adapter as? ContactsAdapter)?.updateItems(allContacts)
-        setupLetterFastscroller(allContacts)
-    }
-
-    override fun onSearchQueryChanged(text: String) {
-        val contacts = allContacts.filter {
-            it.name.contains(text, true) || it.doesContainPhoneNumber(text, search = true)
-        }.sortedByDescending {
-            it.name.startsWith(text, true)
-        }.toMutableList() as ArrayList<Contact>
-
-        fragment_placeholder.beVisibleIf(contacts.isEmpty())
-        (fragment_list.adapter as? ContactsAdapter)?.updateItems(contacts, text)
-        setupLetterFastscroller(contacts)
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/fragments/MyViewPagerFragment.kt b/app/src/main/kotlin/com/goodwy/dialer/fragments/MyViewPagerFragment.kt
deleted file mode 100755
index a8fdfd5..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/fragments/MyViewPagerFragment.kt
+++ /dev/null
@@ -1,55 +0,0 @@
-package com.goodwy.dialer.fragments
-
-import android.content.Context
-import android.util.AttributeSet
-import android.widget.RelativeLayout
-import com.goodwy.commons.adapters.MyRecyclerViewAdapter
-import com.goodwy.commons.extensions.getProperPrimaryColor
-import com.goodwy.commons.extensions.getProperTextColor
-import com.goodwy.commons.helpers.SORT_BY_FIRST_NAME
-import com.goodwy.commons.helpers.SORT_BY_SURNAME
-import com.goodwy.dialer.activities.MainActivity
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.adapters.ContactsAdapter
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.helpers.Config
-import kotlinx.android.synthetic.main.fragment_letters_layout.view.*
-import kotlinx.android.synthetic.main.fragment_recents.view.*
-
-abstract class MyViewPagerFragment(context: Context, attributeSet: AttributeSet) : RelativeLayout(context, attributeSet) {
-    protected var activity: SimpleActivity? = null
-
-    private lateinit var config: Config
-
-    fun setupFragment(activity: SimpleActivity) {
-        config = activity.config
-        if (this.activity == null) {
-            this.activity = activity
-
-            setupFragment()
-            setupColors(activity.getProperTextColor(), activity.getProperPrimaryColor(), activity.getProperPrimaryColor())
-        }
-    }
-
-    fun startNameWithSurnameChanged(startNameWithSurname: Boolean) {
-        if (this !is RecentsFragment) {
-            (fragment_list.adapter as? ContactsAdapter)?.apply {
-                config.sorting = if (startNameWithSurname) SORT_BY_SURNAME else SORT_BY_FIRST_NAME
-                (this@MyViewPagerFragment.activity!! as MainActivity).refreshFragments()
-            }
-        }
-    }
-
-    fun finishActMode() {
-        (fragment_list?.adapter as? MyRecyclerViewAdapter)?.finishActMode()
-        (recents_list?.adapter as? MyRecyclerViewAdapter)?.finishActMode()
-    }
-
-    abstract fun setupFragment()
-
-    abstract fun setupColors(textColor: Int, primaryColor: Int, properPrimaryColor: Int)
-
-    abstract fun onSearchClosed()
-
-    abstract fun onSearchQueryChanged(text: String)
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/fragments/RecentsFragment.kt b/app/src/main/kotlin/com/goodwy/dialer/fragments/RecentsFragment.kt
deleted file mode 100755
index 89e124c..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/fragments/RecentsFragment.kt
+++ /dev/null
@@ -1,157 +0,0 @@
-package com.goodwy.dialer.fragments
-
-import android.content.Context
-import android.util.AttributeSet
-import com.goodwy.commons.dialogs.CallConfirmationDialog
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.ContactsHelper
-import com.goodwy.commons.helpers.MyContactsContentProvider
-import com.goodwy.commons.helpers.PERMISSION_READ_CALL_LOG
-import com.goodwy.commons.helpers.SMT_PRIVATE
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.adapters.RecentCallsAdapter
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.helpers.RecentsHelper
-import com.goodwy.dialer.interfaces.RefreshItemsListener
-import com.goodwy.dialer.models.RecentCall
-import kotlinx.android.synthetic.main.fragment_recents.view.*
-
-class RecentsFragment(context: Context, attributeSet: AttributeSet) : MyViewPagerFragment(context, attributeSet), RefreshItemsListener {
-    private var allRecentCalls = ArrayList<RecentCall>()
-
-    override fun setupFragment() {
-        recents_fragment.setBackgroundColor(context.getProperBackgroundColor())
-        val placeholderResId = if (context.hasPermission(PERMISSION_READ_CALL_LOG)) {
-            R.string.no_previous_calls
-        } else {
-            R.string.could_not_access_the_call_history
-        }
-
-        recents_placeholder.text = context.getString(placeholderResId)
-        recents_placeholder_2.apply {
-            underlineText()
-            setOnClickListener {
-                requestCallLogPermission()
-            }
-        }
-    }
-
-    override fun setupColors(textColor: Int, primaryColor: Int, properPrimaryColor: Int) {
-        recents_placeholder.setTextColor(textColor)
-        recents_placeholder_2.setTextColor(properPrimaryColor)
-
-        (recents_list?.adapter as? RecentCallsAdapter)?.apply {
-            initDrawables()
-            updateTextColor(textColor)
-        }
-    }
-
-    override fun refreshItems(callback: (() -> Unit)?) {
-        val privateCursor = context?.getMyContactsCursor(false, true)
-        val groupSubsequentCalls = context?.config?.groupSubsequentCalls ?: false
-        RecentsHelper(context).getRecentCalls(groupSubsequentCalls) { recents ->
-            ContactsHelper(context).getContacts { contacts ->
-                val privateContacts = MyContactsContentProvider.getContacts(context, privateCursor)
-
-                recents.filter { it.phoneNumber == it.name }.forEach { recent ->
-                    var wasNameFilled = false
-                    if (privateContacts.isNotEmpty()) {
-                        val privateContact = privateContacts.firstOrNull { it.doesContainPhoneNumber(recent.phoneNumber) }
-                        if (privateContact != null) {
-                            recent.name = privateContact.getNameToDisplay()
-                            wasNameFilled = true
-                        }
-                    }
-
-                    if (!wasNameFilled) {
-                        val contact = contacts.filter { it.phoneNumbers.isNotEmpty() }.firstOrNull { it.phoneNumbers.first().normalizedNumber == recent.phoneNumber }
-                        if (contact != null) {
-                            recent.name = contact.getNameToDisplay()
-                        }
-                    }
-                }
-
-                allRecentCalls = recents
-
-                // hide private contacts from recent calls
-                if (SMT_PRIVATE in context.baseConfig.ignoredContactSources) {
-                    allRecentCalls = recents.filterNot { recent ->
-                        val privateNumbers = privateContacts.flatMap { it.phoneNumbers }.map { it.value }
-                        recent.phoneNumber in privateNumbers
-                    } as ArrayList
-                }
-
-                activity?.runOnUiThread {
-                    gotRecents(allRecentCalls)
-                }
-            }
-        }
-    }
-
-    private fun gotRecents(recents: ArrayList<RecentCall>) {
-        if (recents.isEmpty()) {
-            recents_placeholder.beVisible()
-            recents_placeholder_2.beGoneIf(context.hasPermission(PERMISSION_READ_CALL_LOG))
-            recents_list.beGone()
-        } else {
-            recents_placeholder.beGone()
-            recents_placeholder_2.beGone()
-            recents_list.beVisible()
-
-            val currAdapter = recents_list.adapter
-            if (currAdapter == null) {
-                RecentCallsAdapter(activity as SimpleActivity, recents, recents_list, this, showOverflowMenu = false, showIcon = true, hideTimeAtOtherDays = true) {
-                    val recentCall = it as RecentCall
-                    if (context.config.showCallConfirmation) {
-                        CallConfirmationDialog(activity as SimpleActivity, recentCall.name) {
-                            activity?.launchCallIntent(recentCall.phoneNumber)
-                        }
-                    } else {
-                        activity?.launchCallIntent(recentCall.phoneNumber)
-                    }
-                }.apply {
-                    recents_list.adapter = this
-                }
-
-                if (context.areSystemAnimationsEnabled) {
-                    recents_list.scheduleLayoutAnimation()
-                }
-            } else {
-                (currAdapter as RecentCallsAdapter).updateItems(recents)
-            }
-        }
-    }
-
-    private fun requestCallLogPermission() {
-        activity?.handlePermission(PERMISSION_READ_CALL_LOG) {
-            if (it) {
-                recents_placeholder.text = context.getString(R.string.no_previous_calls)
-                recents_placeholder_2.beGone()
-
-                val groupSubsequentCalls = context?.config?.groupSubsequentCalls ?: false
-                RecentsHelper(context).getRecentCalls(groupSubsequentCalls) { recents ->
-                    activity?.runOnUiThread {
-                        gotRecents(recents)
-                    }
-                }
-            }
-        }
-    }
-
-    override fun onSearchClosed() {
-        recents_placeholder.beVisibleIf(allRecentCalls.isEmpty())
-        (recents_list.adapter as? RecentCallsAdapter)?.updateItems(allRecentCalls)
-    }
-
-    override fun onSearchQueryChanged(text: String) {
-        val recentCalls = allRecentCalls.filter {
-            it.name.contains(text, true) || it.doesContainPhoneNumber(text)
-        }.sortedByDescending {
-            it.name.startsWith(text, true)
-        }.toMutableList() as ArrayList<RecentCall>
-
-        recents_placeholder.beVisibleIf(recentCalls.isEmpty())
-        (recents_list.adapter as? RecentCallsAdapter)?.updateItems(recentCalls, text)
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/helpers/CallContactAvatarHelper.kt b/app/src/main/kotlin/com/goodwy/dialer/helpers/CallContactAvatarHelper.kt
deleted file mode 100755
index c74e867..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/helpers/CallContactAvatarHelper.kt
+++ /dev/null
@@ -1,49 +0,0 @@
-package com.goodwy.dialer.helpers
-
-import android.annotation.SuppressLint
-import android.content.Context
-import android.graphics.*
-import android.net.Uri
-import android.provider.MediaStore
-import android.util.Size
-import com.goodwy.commons.helpers.isQPlus
-import com.goodwy.dialer.R
-import com.goodwy.dialer.models.CallContact
-
-class CallContactAvatarHelper(private val context: Context) {
-    @SuppressLint("NewApi")
-    fun getCallContactAvatar(callContact: CallContact?, round: Boolean = true): Bitmap? {
-        var bitmap: Bitmap? = null
-        if (callContact?.photoUri?.isNotEmpty() == true) {
-            val photoUri = Uri.parse(callContact.photoUri)
-            try {
-                val contentResolver = context.contentResolver
-                bitmap = if (isQPlus()) {
-                    val tmbSize = context.resources.getDimension(R.dimen.list_avatar_size).toInt()
-                    contentResolver.loadThumbnail(photoUri, Size(tmbSize, tmbSize), null)
-                } else {
-                    MediaStore.Images.Media.getBitmap(contentResolver, photoUri)
-                }
-                bitmap = if (round) getCircularBitmap(bitmap!!) else bitmap
-            } catch (ignored: Exception) {
-                return null
-            }
-        }
-        return bitmap
-    }
-
-    fun getCircularBitmap(bitmap: Bitmap): Bitmap {
-        val output = Bitmap.createBitmap(bitmap.width, bitmap.width, Bitmap.Config.ARGB_8888)
-        val canvas = Canvas(output)
-        val paint = Paint()
-        val rect = Rect(0, 0, bitmap.width, bitmap.height)
-        val radius = bitmap.width / 2.toFloat()
-
-        paint.isAntiAlias = true
-        canvas.drawARGB(0, 0, 0, 0)
-        canvas.drawCircle(radius, radius, radius, paint)
-        paint.xfermode = PorterDuffXfermode(PorterDuff.Mode.SRC_IN)
-        canvas.drawBitmap(bitmap, rect, rect, paint)
-        return output
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/helpers/CallContactHelper.kt b/app/src/main/kotlin/com/goodwy/dialer/helpers/CallContactHelper.kt
deleted file mode 100755
index 3c0c20c..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/helpers/CallContactHelper.kt
+++ /dev/null
@@ -1,72 +0,0 @@
-package com.goodwy.dialer.helpers
-
-import android.content.Context
-import android.net.Uri
-import android.telecom.Call
-import com.goodwy.commons.extensions.getMyContactsCursor
-import com.goodwy.commons.extensions.getPhoneNumberTypeText
-import com.goodwy.commons.helpers.ContactsHelper
-import com.goodwy.commons.helpers.MyContactsContentProvider
-import com.goodwy.commons.helpers.ensureBackgroundThread
-import com.goodwy.dialer.R
-import com.goodwy.dialer.extensions.isConference
-import com.goodwy.dialer.models.CallContact
-
-fun getCallContact(context: Context, call: Call?, callback: (CallContact) -> Unit) {
-    if (call.isConference()) {
-        callback(CallContact(context.getString(R.string.conference), "", "", ""))
-        return
-    }
-
-    val privateCursor = context.getMyContactsCursor(false, true)
-    ensureBackgroundThread {
-        val callContact = CallContact("", "", "", "")
-        val handle = try {
-            call?.details?.handle?.toString()
-        } catch (e: NullPointerException) {
-            null
-        }
-
-        if (handle == null) {
-            callback(callContact)
-            return@ensureBackgroundThread
-        }
-
-        val uri = Uri.decode(handle)
-        if (uri.startsWith("tel:")) {
-            val number = uri.substringAfter("tel:")
-            ContactsHelper(context).getContacts{ contacts ->
-                val privateContacts = MyContactsContentProvider.getContacts(context, privateCursor)
-                if (privateContacts.isNotEmpty()) {
-                    contacts.addAll(privateContacts)
-                }
-
-                val contactsWithMultipleNumbers = contacts.filter { it.phoneNumbers.size > 1 }
-                val numbersToContactIDMap = HashMap<String, Int>()
-                contactsWithMultipleNumbers.forEach { contact ->
-                    contact.phoneNumbers.forEach { phoneNumber ->
-                        numbersToContactIDMap[phoneNumber.value] = contact.contactId
-                        numbersToContactIDMap[phoneNumber.normalizedNumber] = contact.contactId
-                    }
-                }
-
-                callContact.number = number
-                val contact = contacts.firstOrNull { it.doesHavePhoneNumber(number) }
-                if (contact != null) {
-                    callContact.name = contact.getNameToDisplay()
-                    callContact.photoUri = contact.photoUri
-
-                    if (contact.phoneNumbers.size > 1) {
-                        val specificPhoneNumber = contact.phoneNumbers.firstOrNull { it.value == number }
-                        if (specificPhoneNumber != null) {
-                            callContact.numberLabel = context.getPhoneNumberTypeText(specificPhoneNumber.type, specificPhoneNumber.label)
-                        }
-                    }
-                } else {
-                    callContact.name = number
-                }
-                callback(callContact)
-            }
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/helpers/CallHistoryTopBehavior.kt b/app/src/main/kotlin/com/goodwy/dialer/helpers/CallHistoryTopBehavior.kt
deleted file mode 100644
index 582085e..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/helpers/CallHistoryTopBehavior.kt
+++ /dev/null
@@ -1,81 +0,0 @@
-package com.goodwy.dialer.helpers
-
-import android.content.Context
-import android.content.res.Resources
-import android.util.AttributeSet
-import android.view.View
-import android.view.animation.LinearInterpolator
-import com.behaviorule.arturdumchev.library.*
-import com.goodwy.dialer.R
-import com.google.android.material.appbar.AppBarLayout
-import com.google.android.material.appbar.CollapsingToolbarLayout
-import kotlinx.android.synthetic.main.activity_call_history.view.*
-import kotlinx.android.synthetic.main.top_view.view.*
-
-class CallHistoryTopBehavior(
-    context: Context?,
-    attrs: AttributeSet?
-) : BehaviorByRules(context, attrs) {
-
-    override fun calcAppbarHeight(child: View): Int = with(child) {
-        return height
-    }
-
-    override fun View.provideAppbar(): AppBarLayout = call_history_appbar
-    override fun View.provideCollapsingToolbar(): CollapsingToolbarLayout = collapsing_toolbar
-    override fun canUpdateHeight(progress: Float): Boolean = progress >= GONE_VIEW_THRESHOLD
-
-    override fun View.setUpViews(): List<RuledView> {
-        val height = height
-        return listOf(
-            RuledView(
-                top_details,
-                BRuleYOffset(
-                    min = -(height/4).toFloat(),
-                    max = pixels(R.dimen.zero),
-                    interpolator = LinearInterpolator()
-                )
-            ),
-            RuledView(
-                call_history_image,
-                BRuleXOffset(
-                    min = 0f, max = pixels(R.dimen.image_right_margin),
-                    interpolator = ReverseInterpolator(LinearInterpolator())
-                ),
-                BRuleYOffset(
-                    min = pixels(R.dimen.zero), max = pixels(R.dimen.image_top_margin),
-                    interpolator = ReverseInterpolator(LinearInterpolator())
-                ),
-                BRuleScale(min = 0.5f, max = 1f)
-            ),
-            RuledView(
-                call_history_name,
-                BRuleXOffset(
-                    min = 0f, max = pixels(R.dimen.name_right_margin),
-                    interpolator = ReverseInterpolator(LinearInterpolator())
-                ),
-                BRuleYOffset(
-                    min = -pixels(R.dimen.name_top_margin), max = pixels(R.dimen.zero),
-                    interpolator = LinearInterpolator()
-                ),
-                BRuleScale(min = 0.8f, max = 1f)
-            )
-        )
-    }
-
-    private fun actionBarSize(context: Context?): Float {
-        val styledAttributes = context!!.theme?.obtainStyledAttributes(IntArray(1) { android.R.attr.actionBarSize })
-        val actionBarSize = styledAttributes?.getDimension(0, 0F)
-        styledAttributes?.recycle()
-        return actionBarSize ?: context.pixels(R.dimen.toolbar_height)
-    }
-
-    private fun getScreenWidth(): Int {
-        return Resources.getSystem().displayMetrics.widthPixels
-    }
-
-
-    companion object {
-        const val GONE_VIEW_THRESHOLD = 0.8f
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/helpers/CallManager.kt b/app/src/main/kotlin/com/goodwy/dialer/helpers/CallManager.kt
deleted file mode 100755
index c890e86..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/helpers/CallManager.kt
+++ /dev/null
@@ -1,222 +0,0 @@
-package com.goodwy.dialer.helpers
-
-import android.annotation.SuppressLint
-import android.os.Handler
-import android.telecom.Call
-import android.telecom.CallAudioState
-import android.telecom.InCallService
-import android.telecom.VideoProfile
-import com.goodwy.dialer.extensions.getStateCompat
-import com.goodwy.dialer.extensions.hasCapability
-import com.goodwy.dialer.extensions.isConference
-import com.goodwy.dialer.models.AudioRoute
-import java.util.concurrent.CopyOnWriteArraySet
-
-// inspired by https://github.com/Chooloo/call_manage
-class CallManager {
-    companion object {
-        @SuppressLint("StaticFieldLeak")
-        var inCallService: InCallService? = null
-        private var call: Call? = null
-        private val calls = mutableListOf<Call>()
-        private val listeners = CopyOnWriteArraySet<CallManagerListener>()
-
-        fun onCallAdded(call: Call) {
-            this.call = call
-            calls.add(call)
-            for (listener in listeners) {
-                listener.onPrimaryCallChanged(call)
-            }
-            call.registerCallback(object : Call.Callback() {
-                override fun onStateChanged(call: Call, state: Int) {
-                    updateState()
-                }
-
-                override fun onDetailsChanged(call: Call, details: Call.Details) {
-                    updateState()
-                }
-
-                override fun onConferenceableCallsChanged(call: Call, conferenceableCalls: MutableList<Call>) {
-                    updateState()
-                }
-            })
-        }
-
-        fun onCallRemoved(call: Call) {
-            calls.remove(call)
-            updateState()
-        }
-
-        fun onAudioStateChanged(audioState: CallAudioState) {
-            val route = AudioRoute.fromRoute(audioState.route) ?: return
-            for (listener in listeners) {
-                listener.onAudioStateChanged(route)
-            }
-        }
-
-        fun getPhoneState(): PhoneState {
-            return when (calls.size) {
-                0 -> NoCall
-                1 -> SingleCall(calls.first())
-                2 -> {
-                    val active = calls.find { it.getStateCompat() == Call.STATE_ACTIVE }
-                    val newCall = calls.find { it.getStateCompat() == Call.STATE_CONNECTING || it.getStateCompat() == Call.STATE_DIALING }
-                    val onHold = calls.find { it.getStateCompat() == Call.STATE_HOLDING }
-                    if (active != null && newCall != null) {
-                        TwoCalls(newCall, active)
-                    } else if (newCall != null && onHold != null) {
-                        TwoCalls(newCall, onHold)
-                    } else if (active != null && onHold != null) {
-                        TwoCalls(active, onHold)
-                    } else {
-                        TwoCalls(calls[0], calls[1])
-                    }
-                }
-                else -> {
-                    val conference = calls.find { it.isConference() } ?: return NoCall
-                    val secondCall = if (conference.children.size + 1 != calls.size) {
-                        calls.filter { !it.isConference() }
-                            .subtract(conference.children.toSet())
-                            .firstOrNull()
-                    } else {
-                        null
-                    }
-                    if (secondCall == null) {
-                        SingleCall(conference)
-                    } else {
-                        val newCallState = secondCall.getStateCompat()
-                        if (newCallState == Call.STATE_ACTIVE || newCallState == Call.STATE_CONNECTING || newCallState == Call.STATE_DIALING) {
-                            TwoCalls(secondCall, conference)
-                        } else {
-                            TwoCalls(conference, secondCall)
-                        }
-                    }
-                }
-            }
-        }
-
-        private fun getCallAudioState() = inCallService?.callAudioState
-
-        fun getSupportedAudioRoutes(): Array<AudioRoute> {
-            return AudioRoute.values().filter {
-                val supportedRouteMask = getCallAudioState()?.supportedRouteMask
-                if (supportedRouteMask != null) {
-                    supportedRouteMask and it.route == it.route
-                } else {
-                    false
-                }
-            }.toTypedArray()
-        }
-
-        fun getCallAudioRoute() = AudioRoute.fromRoute(getCallAudioState()?.route)
-
-        fun setAudioRoute(newRoute: Int) {
-            inCallService?.setAudioRoute(newRoute)
-        }
-
-        private fun updateState() {
-            val primaryCall = when (val phoneState = getPhoneState()) {
-                is NoCall -> null
-                is SingleCall -> phoneState.call
-                is TwoCalls -> phoneState.active
-            }
-            var notify = true
-            if (primaryCall == null) {
-                call = null
-            } else if (primaryCall != call) {
-                call = primaryCall
-                for (listener in listeners) {
-                    listener.onPrimaryCallChanged(primaryCall)
-                }
-                notify = false
-            }
-            if (notify) {
-                for (listener in listeners) {
-                    listener.onStateChanged()
-                }
-            }
-
-            // remove all disconnected calls manually in case they are still here
-            calls.removeAll { it.getStateCompat() == Call.STATE_DISCONNECTED }
-        }
-
-        fun getPrimaryCall(): Call? {
-            return call
-        }
-
-        fun getConferenceCalls(): List<Call> {
-            return calls.find { it.isConference() }?.children ?: emptyList()
-        }
-
-        fun accept() {
-            call?.answer(VideoProfile.STATE_AUDIO_ONLY)
-        }
-
-        fun reject() {
-            if (call != null) {
-                val state = getState()
-                if (state == Call.STATE_RINGING) {
-                    call!!.reject(false, null)
-                } else if (state != Call.STATE_DISCONNECTED && state != Call.STATE_DISCONNECTING) {
-                    call!!.disconnect()
-                }
-            }
-        }
-
-        fun toggleHold(): Boolean {
-            val isOnHold = getState() == Call.STATE_HOLDING
-            if (isOnHold) {
-                call?.unhold()
-            } else {
-                call?.hold()
-            }
-            return !isOnHold
-        }
-
-        fun swap() {
-            if (calls.size > 1) {
-                calls.find { it.getStateCompat() == Call.STATE_HOLDING }?.unhold()
-            }
-        }
-
-        fun merge() {
-            val conferenceableCalls = call!!.conferenceableCalls
-            if (conferenceableCalls.isNotEmpty()) {
-                call!!.conference(conferenceableCalls.first())
-            } else {
-                if (call!!.hasCapability(Call.Details.CAPABILITY_MERGE_CONFERENCE)) {
-                    call!!.mergeConference()
-                }
-            }
-        }
-
-        fun addListener(listener: CallManagerListener) {
-            listeners.add(listener)
-        }
-
-        fun removeListener(listener: CallManagerListener) {
-            listeners.remove(listener)
-        }
-
-        fun getState() = getPrimaryCall()?.getStateCompat()
-
-        fun keypad(char: Char) {
-            call?.playDtmfTone(char)
-            Handler().postDelayed({
-                call?.stopDtmfTone()
-            }, DIALPAD_TONE_LENGTH_MS)
-        }
-    }
-}
-
-interface CallManagerListener {
-    fun onStateChanged()
-    fun onAudioStateChanged(audioState: AudioRoute)
-    fun onPrimaryCallChanged(call: Call)
-}
-
-sealed class PhoneState
-object NoCall : PhoneState()
-class SingleCall(val call: Call) : PhoneState()
-class TwoCalls(val active: Call, val onHold: Call) : PhoneState()
-
diff --git a/app/src/main/kotlin/com/goodwy/dialer/helpers/CallNotificationManager.kt b/app/src/main/kotlin/com/goodwy/dialer/helpers/CallNotificationManager.kt
deleted file mode 100755
index 18fd1ca..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/helpers/CallNotificationManager.kt
+++ /dev/null
@@ -1,130 +0,0 @@
-package com.goodwy.dialer.helpers
-
-import android.annotation.SuppressLint
-import android.app.Notification
-import android.app.NotificationChannel
-import android.app.NotificationManager
-import android.app.PendingIntent
-import android.app.PendingIntent.FLAG_IMMUTABLE
-import android.content.Context
-import android.content.Intent
-import android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK
-import android.content.Intent.FLAG_ACTIVITY_NEW_TASK
-import android.telecom.Call
-import android.telecom.DisconnectCause
-import android.view.View.VISIBLE
-import android.widget.RemoteViews
-import androidx.core.app.NotificationCompat
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.isOreoPlus
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.CallActivity
-import com.goodwy.dialer.extensions.getCountryByNumber
-import com.goodwy.dialer.extensions.powerManager
-import com.goodwy.dialer.receivers.CallActionReceiver
-import kotlinx.android.synthetic.main.activity_call_history.*
-
-class CallNotificationManager(private val context: Context) {
-    private val CALL_NOTIFICATION_ID = 42
-    private val ACCEPT_CALL_CODE = 0
-    private val DECLINE_CALL_CODE = 1
-    private val notificationManager = context.notificationManager
-    private val callContactAvatarHelper = CallContactAvatarHelper(context)
-
-    @SuppressLint("NewApi")
-    fun setupNotification(forceLowPriority: Boolean = false) {
-        getCallContact(context.applicationContext, CallManager.getPrimaryCall()) { callContact ->
-            val callContactAvatar = callContactAvatarHelper.getCallContactAvatar(callContact)
-            val callState = CallManager.getState()
-            val isHighPriority = context.powerManager.isInteractive && callState == Call.STATE_RINGING && !forceLowPriority
-            val channelId = if (isHighPriority) "right_dialer_call_high_priority" else "right_dialer_call"
-            if (isOreoPlus()) {
-                val importance = if (isHighPriority) NotificationManager.IMPORTANCE_HIGH else NotificationManager.IMPORTANCE_DEFAULT
-                val name = if (isHighPriority) context.getString(R.string.call_notification_channel_high_priority_g)
-                                else context.getString(R.string.call_notification_channel_g)
-
-                NotificationChannel(channelId, name, importance).apply {
-                    setSound(null, null)
-                    notificationManager.createNotificationChannel(this)
-                }
-            }
-
-            val openAppIntent = CallActivity.getStartIntent(context)
-            //requestCode - NON_FULL_SCREEN = 0, FULL_SCREEN = 1, BUBBLE = 2
-            val openAppPendingIntent = PendingIntent.getActivity(context, 1, openAppIntent, PendingIntent.FLAG_MUTABLE)
-
-            val acceptCallIntent = Intent(context, CallActionReceiver::class.java)
-            acceptCallIntent.action = ACCEPT_CALL
-            val acceptPendingIntent =
-                PendingIntent.getBroadcast(context, ACCEPT_CALL_CODE, acceptCallIntent, PendingIntent.FLAG_CANCEL_CURRENT or PendingIntent.FLAG_MUTABLE)
-
-            val declineCallIntent = Intent(context, CallActionReceiver::class.java)
-            declineCallIntent.action = DECLINE_CALL
-            val declinePendingIntent =
-                PendingIntent.getBroadcast(context, DECLINE_CALL_CODE, declineCallIntent, PendingIntent.FLAG_CANCEL_CURRENT or PendingIntent.FLAG_MUTABLE)
-
-            var callerName = if (callContact.name.isNotEmpty()) callContact.name else context.getString(R.string.unknown_caller)
-            if (callContact.numberLabel.isNotEmpty()) {
-                callerName += " - ${callContact.numberLabel}"
-            }
-
-            var callerNumberType = ""
-            if (callContact.name == callContact.number) {
-                val country = if (callContact.number.startsWith("+")) getCountryByNumber(context, callContact.number) else ""
-                if (country != "") callerNumberType = country
-            } else callerNumberType = callContact.numberLabel
-
-            val contentTextId = when (callState) {
-                Call.STATE_RINGING -> R.string.is_calling
-                Call.STATE_DIALING -> R.string.dialing
-                Call.STATE_DISCONNECTED -> R.string.call_ended
-                Call.STATE_DISCONNECTING -> R.string.call_ending
-                else -> R.string.ongoing_call
-            }
-
-            val collapsedView = RemoteViews(context.packageName, R.layout.call_notification).apply {
-                setText(R.id.notification_caller_name, callerName)
-                if (callerNumberType != "") {
-                    setViewVisibility(R.id.notification_caller_number_type, VISIBLE)
-                    setText(R.id.notification_caller_number_type, callerNumberType)
-                }
-                setText(R.id.notification_call_status, context.getString(contentTextId))
-                setVisibleIf(R.id.notification_accept_call, callState == Call.STATE_RINGING)
-
-                setOnClickPendingIntent(R.id.notification_decline_call, declinePendingIntent)
-                setOnClickPendingIntent(R.id.notification_accept_call, acceptPendingIntent)
-
-                if (callContactAvatar != null) {
-                    setImageViewBitmap(R.id.notification_thumbnail, callContactAvatarHelper.getCircularBitmap(callContactAvatar))
-                }
-            }
-
-            val builder = NotificationCompat.Builder(context, channelId)
-                .setSmallIcon(R.drawable.ic_phone_vector)
-                .setContentIntent(openAppPendingIntent)
-                .setPriority(if (isHighPriority) NotificationCompat.PRIORITY_MAX else NotificationCompat.PRIORITY_DEFAULT)
-                .setCategory(Notification.CATEGORY_CALL)
-                .setCustomContentView(collapsedView)
-                .setOngoing(true)
-                .setTimeoutAfter(-1)
-                .setSound(null)
-                .setUsesChronometer(callState == Call.STATE_ACTIVE)
-                .setChannelId(channelId)
-                .setStyle(NotificationCompat.DecoratedCustomViewStyle())
-
-            if (isHighPriority) {
-                builder.setFullScreenIntent(openAppPendingIntent, true)
-            }
-
-            val notification = builder.build()
-            // it's rare but possible for the call state to change by now
-            if (CallManager.getState() == callState) {
-                notificationManager.notify(CALL_NOTIFICATION_ID, notification)
-            }
-        }
-    }
-
-    fun cancelNotification() {
-        notificationManager.cancel(CALL_NOTIFICATION_ID)
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/helpers/Config.kt b/app/src/main/kotlin/com/goodwy/dialer/helpers/Config.kt
deleted file mode 100755
index ef3938b..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/helpers/Config.kt
+++ /dev/null
@@ -1,143 +0,0 @@
-package com.goodwy.dialer.helpers
-
-import android.content.Context
-import android.media.RingtoneManager
-import android.net.Uri
-import com.goodwy.commons.extensions.getDefaultAlarmSound
-import com.goodwy.commons.extensions.getDefaultAlarmTitle
-import com.google.gson.Gson
-import com.google.gson.reflect.TypeToken
-import com.goodwy.commons.helpers.BaseConfig
-import com.goodwy.dialer.models.SpeedDial
-
-class Config(context: Context) : BaseConfig(context) {
-    companion object {
-        fun newInstance(context: Context) = Config(context)
-    }
-
-    fun getSpeedDialValues(): ArrayList<SpeedDial> {
-        val speedDialType = object : TypeToken<List<SpeedDial>>() {}.type
-        val speedDialValues = Gson().fromJson<ArrayList<SpeedDial>>(speedDial, speedDialType) ?: ArrayList(1)
-
-        for (i in 1..9) {
-            val speedDial = SpeedDial(i, "", "")
-            if (speedDialValues.firstOrNull { it.id == i } == null) {
-                speedDialValues.add(speedDial)
-            }
-        }
-
-        return speedDialValues
-    }
-
-    fun saveCustomSIM(number: String, SIMlabel: String) {
-        prefs.edit().putString(REMEMBER_SIM_PREFIX + number, Uri.encode(SIMlabel)).apply()
-    }
-
-    fun getCustomSIM(number: String) = prefs.getString(REMEMBER_SIM_PREFIX + number, "")
-
-    fun removeCustomSIM(number: String) {
-        prefs.edit().remove(REMEMBER_SIM_PREFIX + number).apply()
-    }
-    var showTabs: Int
-        get() = prefs.getInt(SHOW_TABS, ALL_TABS_MASK)
-        set(showTabs) = prefs.edit().putInt(SHOW_TABS, showTabs).apply()
-
-    var groupSubsequentCalls: Boolean
-        get() = prefs.getBoolean(GROUP_SUBSEQUENT_CALLS, true)
-        set(groupSubsequentCalls) = prefs.edit().putBoolean(GROUP_SUBSEQUENT_CALLS, groupSubsequentCalls).apply()
-
-    var openDialPadAtLaunch: Boolean
-        get() = prefs.getBoolean(OPEN_DIAL_PAD_AT_LAUNCH, false)
-        set(openDialPad) = prefs.edit().putBoolean(OPEN_DIAL_PAD_AT_LAUNCH, openDialPad).apply()
-
-    var disableProximitySensor: Boolean
-        get() = prefs.getBoolean(DISABLE_PROXIMITY_SENSOR, false)
-        set(disableProximitySensor) = prefs.edit().putBoolean(DISABLE_PROXIMITY_SENSOR, disableProximitySensor).apply()
-
-    var disableSwipeToAnswer: Boolean
-        get() = prefs.getBoolean(DISABLE_SWIPE_TO_ANSWER, true)
-        set(disableSwipeToAnswer) = prefs.edit().putBoolean(DISABLE_SWIPE_TO_ANSWER, disableSwipeToAnswer).apply()
-
-    var wasOverlaySnackbarConfirmed: Boolean
-        get() = prefs.getBoolean(WAS_OVERLAY_SNACKBAR_CONFIRMED, false)
-        set(wasOverlaySnackbarConfirmed) = prefs.edit().putBoolean(WAS_OVERLAY_SNACKBAR_CONFIRMED, wasOverlaySnackbarConfirmed).apply()
-
-    var dialpadVibration: Boolean
-        get() = prefs.getBoolean(DIALPAD_VIBRATION, true)
-        set(dialpadVibration) = prefs.edit().putBoolean(DIALPAD_VIBRATION, dialpadVibration).apply()
-
-    var hideDialpadNumbers: Boolean
-        get() = prefs.getBoolean(HIDE_DIALPAD_NUMBERS, false)
-        set(hideDialpadNumbers) = prefs.edit().putBoolean(HIDE_DIALPAD_NUMBERS, hideDialpadNumbers).apply()
-
-    var dialpadBeeps: Boolean
-        get() = prefs.getBoolean(DIALPAD_BEEPS, false)
-        set(dialpadBeeps) = prefs.edit().putBoolean(DIALPAD_BEEPS, dialpadBeeps).apply()
-
-    var alwaysShowFullscreen: Boolean // not used showIncomingCallsFullScreen
-        get() = prefs.getBoolean(ALWAYS_SHOW_FULLSCREEN, false)
-        set(alwaysShowFullscreen) = prefs.edit().putBoolean(ALWAYS_SHOW_FULLSCREEN, alwaysShowFullscreen).apply()
-
-    //Goodwy
-    var showIncomingCallsFullScreen: Boolean
-        get() = prefs.getBoolean(SHOW_INCOMING_CALLS_FULL_SCREEN, false)
-        set(showIncomingCallsFullScreen) = prefs.edit().putBoolean(SHOW_INCOMING_CALLS_FULL_SCREEN, showIncomingCallsFullScreen).apply()
-
-    var transparentCallScreen: Boolean  //not used
-        get() = prefs.getBoolean(TRANSPARENT_CALL_SCREEN, false)
-        set(transparentCallScreen) = prefs.edit().putBoolean(TRANSPARENT_CALL_SCREEN, transparentCallScreen).apply()
-
-    var numberMissedCalls: Int
-        get() = prefs.getInt(NUMBER_MISSED_CALLS, 0)
-        set(numberMissedCalls) = prefs.edit().putInt(NUMBER_MISSED_CALLS, numberMissedCalls).apply()
-
-    var missedCallNotifications: Boolean
-        get() = prefs.getBoolean(MISSED_CALL_NOTIFICATIONS, false)
-        set(missedCallNotifications) = prefs.edit().putBoolean(MISSED_CALL_NOTIFICATIONS, missedCallNotifications).apply()
-
-    var hideDialpadLetters: Boolean
-        get() = prefs.getBoolean(HIDE_DIALPAD_LETTERS, false)
-        set(hideDialpadLetters) = prefs.edit().putBoolean(HIDE_DIALPAD_LETTERS, hideDialpadLetters).apply()
-
-    var backgroundCallScreen: Int
-        get() = prefs.getInt(BACKGROUND_CALL_SCREEN, BLUR_AVATAR)
-        set(backgroundCallScreen) = prefs.edit().putInt(BACKGROUND_CALL_SCREEN, backgroundCallScreen).apply()
-
-    //Timer
-    var timerSeconds: Int
-        get() = prefs.getInt(TIMER_SECONDS, 300)
-        set(lastTimerSeconds) = prefs.edit().putInt(TIMER_SECONDS, lastTimerSeconds).apply()
-
-    var timerVibrate: Boolean
-        get() = prefs.getBoolean(TIMER_VIBRATE, false)
-        set(timerVibrate) = prefs.edit().putBoolean(TIMER_VIBRATE, timerVibrate).apply()
-
-    var timerSoundUri: String
-        get() = prefs.getString(TIMER_SOUND_URI, context.getDefaultAlarmSound(RingtoneManager.TYPE_ALARM).uri)!!
-        set(timerSoundUri) = prefs.edit().putString(TIMER_SOUND_URI, timerSoundUri).apply()
-
-    var timerSoundTitle: String
-        get() = prefs.getString(TIMER_SOUND_TITLE, context.getDefaultAlarmTitle(RingtoneManager.TYPE_ALARM))!!
-        set(timerSoundTitle) = prefs.edit().putString(TIMER_SOUND_TITLE, timerSoundTitle).apply()
-
-    var timerTitle: String?
-        get() = prefs.getString(TIMER_TITLE, null)
-        set(label) = prefs.edit().putString(TIMER_TITLE, label).apply()
-
-    var timerLabel: String?
-        get() = prefs.getString(TIMER_LABEL, null)
-        set(label) = prefs.edit().putString(TIMER_LABEL, label).apply()
-
-    var timerDescription: String?
-        get() = prefs.getString(TIMER_DESCRIPTION, null)
-        set(label) = prefs.edit().putString(TIMER_DESCRIPTION, label).apply()
-
-    var timerChannelId: String?
-        get() = prefs.getString(TIMER_CHANNEL_ID, null)
-        set(id) = prefs.edit().putString(TIMER_CHANNEL_ID, id).apply()
-
-    var timerMaxReminderSecs: Int
-        get() = prefs.getInt(TIMER_MAX_REMINDER_SECS, DEFAULT_MAX_TIMER_REMINDER_SECS)
-        set(timerMaxReminderSecs) = prefs.edit().putInt(TIMER_MAX_REMINDER_SECS, timerMaxReminderSecs).apply()
-}
-
diff --git a/app/src/main/kotlin/com/goodwy/dialer/helpers/Constants.kt b/app/src/main/kotlin/com/goodwy/dialer/helpers/Constants.kt
deleted file mode 100755
index 4e0bce5..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/helpers/Constants.kt
+++ /dev/null
@@ -1,65 +0,0 @@
-package com.goodwy.dialer.helpers
-
-import com.goodwy.commons.helpers.TAB_CALL_HISTORY
-import com.goodwy.commons.helpers.TAB_CONTACTS
-import com.goodwy.commons.helpers.TAB_FAVORITES
-
-// shared prefs
-const val SPEED_DIAL = "speed_dial"
-const val REMEMBER_SIM_PREFIX = "remember_sim_"
-const val GROUP_SUBSEQUENT_CALLS = "group_subsequent_calls"
-const val OPEN_DIAL_PAD_AT_LAUNCH = "open_dial_pad_at_launch"
-const val DISABLE_PROXIMITY_SENSOR = "disable_proximity_sensor"
-const val DISABLE_SWIPE_TO_ANSWER = "disable_swipe_to_answer"
-const val SHOW_TABS = "show_tabs"
-const val FAVORITES_CONTACTS_ORDER = "favorites_contacts_order"
-const val FAVORITES_CUSTOM_ORDER_SELECTED = "favorites_custom_order_selected"
-const val WAS_OVERLAY_SNACKBAR_CONFIRMED = "was_overlay_snackbar_confirmed"
-const val DIALPAD_VIBRATION = "dialpad_vibration"
-const val DIALPAD_BEEPS = "dialpad_beeps"
-const val HIDE_DIALPAD_NUMBERS = "hide_dialpad_numbers"
-const val ALWAYS_SHOW_FULLSCREEN = "always_show_fullscreen" // not used SHOW_INCOMING_CALLS_FULL_SCREEN
-const val SHOW_INCOMING_CALLS_FULL_SCREEN = "show_incoming_calls_full_screen"
-const val TRANSPARENT_CALL_SCREEN = "transparent_call_screen"
-const val NUMBER_MISSED_CALLS = "number_missed_calls"
-const val MISSED_CALL_NOTIFICATIONS = "missed_call_notifications"
-const val SHOW_CONTACT_THUMBNAILS = "show_contact_thumbnails"
-const val HIDE_DIALPAD_LETTERS = "hide_dialpad_letters"
-const val BACKGROUND_CALL_SCREEN = "background_call_screen"
-
-const val ALL_TABS_MASK = TAB_CONTACTS or TAB_FAVORITES or TAB_CALL_HISTORY
-
-val tabsList = arrayListOf(TAB_FAVORITES, TAB_CALL_HISTORY, TAB_CONTACTS)
-
-private const val PATH = "com.goodwy.dialer.action."
-const val ACCEPT_CALL = PATH + "accept_call"
-const val DECLINE_CALL = PATH + "decline_call"
-
-const val DIALPAD_TONE_LENGTH_MS = 150L // The length of DTMF tones in milliseconds
-
-const val WHATSAPP = "whatsapp"
-const val SIGNAL = "signal"
-const val VIBER = "viber"
-const val TELEGRAM = "telegram"
-const val THREEMA = "threema"
-
-// Background Call Screen
-const val THEME_BACKGROUND = 0
-const val BLUR_AVATAR = 1
-const val AVATAR = 2
-const val TRANSPARENT_BACKGROUND = 3
-
-// Timer
-const val TIMER_ID = "timer_id"
-const val TIMER_SECONDS = "timer_seconds"
-const val TIMER_VIBRATE = "timer_vibrate"
-const val TIMER_SOUND_URI = "timer_sound_uri"
-const val TIMER_SOUND_TITLE = "timer_sound_title"
-const val TIMER_CHANNEL_ID = "timer_channel_id"
-const val TIMER_TITLE = "timer_title"
-const val TIMER_LABEL = "timer_label"
-const val TIMER_DESCRIPTION = "timer_description"
-const val TIMER_RUNNING_NOTIF_ID = 10000
-const val INVALID_TIMER_ID = -1
-const val TIMER_MAX_REMINDER_SECS = "timer_max_reminder_secs"
-const val DEFAULT_MAX_TIMER_REMINDER_SECS = 60
diff --git a/app/src/main/kotlin/com/goodwy/dialer/helpers/Converters.kt b/app/src/main/kotlin/com/goodwy/dialer/helpers/Converters.kt
deleted file mode 100755
index 80c5b07..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/helpers/Converters.kt
+++ /dev/null
@@ -1,46 +0,0 @@
-package com.goodwy.dialer.helpers
-
-import androidx.room.TypeConverter
-import com.goodwy.dialer.extensions.RuntimeTypeAdapterFactory
-import com.goodwy.dialer.models.StateWrapper
-import com.goodwy.dialer.models.TimerState
-import com.google.gson.Gson
-import com.google.gson.GsonBuilder
-import com.google.gson.TypeAdapterFactory
-import com.google.gson.reflect.TypeToken
-
-class Converters {
-    private val gson = Gson()
-    private val stringType = object : TypeToken<List<String>>() {}.type
-
-    fun jsonToStringList(value: String) = gson.fromJson<ArrayList<String>>(value, stringType)
-
-    fun stringListToJson(list: ArrayList<String>) = gson.toJson(list)
-
-    //timer
-    val timerStates = valueOf<TimerState>()
-        .registerSubtype(TimerState.Idle::class.java)
-        .registerSubtype(TimerState.Running::class.java)
-        .registerSubtype(TimerState.Paused::class.java)
-        .registerSubtype(TimerState.Finished::class.java)
-
-    inline fun <reified T : Any> valueOf(): RuntimeTypeAdapterFactory<T> = RuntimeTypeAdapterFactory.of(T::class.java)
-
-    fun GsonBuilder.registerTypes(vararg types: TypeAdapterFactory) = apply {
-        types.forEach { registerTypeAdapterFactory(it) }
-    }
-
-    val gsonTimer: Gson = GsonBuilder().registerTypes(timerStates).create()
-
-    @TypeConverter
-    fun jsonToTimerState(value: String): TimerState {
-        return try {
-            gsonTimer.fromJson(value, StateWrapper::class.java).state
-        } catch (e: Exception) {
-            TimerState.Idle
-        }
-    }
-
-    @TypeConverter
-    fun timerStateToJson(state: TimerState) = gsonTimer.toJson(StateWrapper(state))
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/helpers/RecentsHelper.kt b/app/src/main/kotlin/com/goodwy/dialer/helpers/RecentsHelper.kt
deleted file mode 100755
index 48b7aa8..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/helpers/RecentsHelper.kt
+++ /dev/null
@@ -1,217 +0,0 @@
-package com.goodwy.dialer.helpers
-
-import android.annotation.SuppressLint
-import android.content.Context
-import android.provider.CallLog.Calls
-import com.goodwy.commons.extensions.*
-import com.goodwy.commons.helpers.*
-import com.goodwy.commons.models.contacts.Contact
-import com.goodwy.dialer.R
-import com.goodwy.dialer.activities.SimpleActivity
-import com.goodwy.dialer.extensions.getAvailableSIMCardLabels
-import com.goodwy.dialer.models.RecentCall
-
-class RecentsHelper(private val context: Context) {
-    private val COMPARABLE_PHONE_NUMBER_LENGTH = 9
-    private val QUERY_LIMIT = "200"
-
-    @SuppressLint("MissingPermission")
-    fun getRecentCalls(groupSubsequentCalls: Boolean, callback: (ArrayList<RecentCall>) -> Unit) {
-        val privateCursor = context.getMyContactsCursor(false, true)
-        ensureBackgroundThread {
-            if (!context.hasPermission(PERMISSION_READ_CALL_LOG)) {
-                callback(ArrayList())
-                return@ensureBackgroundThread
-            }
-
-            ContactsHelper(context).getContacts { contacts ->
-                val privateContacts = MyContactsContentProvider.getContacts(context, privateCursor)
-                if (privateContacts.isNotEmpty()) {
-                    contacts.addAll(privateContacts)
-                }
-
-                getRecents(contacts, groupSubsequentCalls, callback)
-            }
-        }
-    }
-
-    @SuppressLint("NewApi")
-    private fun getRecents(contacts: ArrayList<Contact>, groupSubsequentCalls: Boolean, callback: (ArrayList<RecentCall>) -> Unit) {
-
-        var recentCalls = ArrayList<RecentCall>()
-        var previousRecentCallFrom = ""
-        var previousStartTS = 0
-        val contactsNumbersMap = HashMap<String, String>()
-        val contactPhotosMap = HashMap<String, String>()
-
-        val uri = Calls.CONTENT_URI
-        val projection = arrayOf(
-            Calls._ID,
-            Calls.NUMBER,
-            Calls.CACHED_NAME,
-            Calls.CACHED_PHOTO_URI,
-            Calls.DATE,
-            Calls.DURATION,
-            Calls.TYPE,
-            Calls.PHONE_ACCOUNT_ID
-        )
-
-        val accountIdToSimIDMap = HashMap<String, Int>()
-        context.getAvailableSIMCardLabels().forEach {
-            accountIdToSimIDMap[it.handle.id] = it.id
-        }
-
-        val cursor = if (isNougatPlus()) {
-            // https://issuetracker.google.com/issues/175198972?pli=1#comment6
-            val limitedUri = uri.buildUpon()
-                .appendQueryParameter(Calls.LIMIT_PARAM_KEY, QUERY_LIMIT)
-                .build()
-            val sortOrder = "${Calls._ID} DESC" //TODO Sort call
-            context.contentResolver.query(limitedUri, projection, null, null, sortOrder)
-        } else {
-            val sortOrder = "${Calls._ID} DESC LIMIT $QUERY_LIMIT"
-            context.contentResolver.query(uri, projection, null, null, sortOrder)
-        }
-
-        val contactsWithMultipleNumbers = contacts.filter { it.phoneNumbers.size > 1 }
-        val numbersToContactIDMap = HashMap<String, Int>()
-        contactsWithMultipleNumbers.forEach { contact ->
-            contact.phoneNumbers.forEach { phoneNumber ->
-                numbersToContactIDMap[phoneNumber.value] = contact.contactId
-                numbersToContactIDMap[phoneNumber.normalizedNumber] = contact.contactId
-            }
-        }
-
-        if (cursor?.moveToFirst() == true) {
-            do {
-                val id = cursor.getIntValue(Calls._ID)
-                val number = cursor.getStringValue(Calls.NUMBER) ?: continue
-                var name = cursor.getStringValue(Calls.CACHED_NAME)
-                var unknown = false
-                if (name == null || name.isEmpty()) {
-                    name = number
-                }
-
-                if (name == number) {
-                    if (contactsNumbersMap.containsKey(number)) {
-                        name = contactsNumbersMap[number]!!
-                    } else {
-                        val normalizedNumber = number.normalizePhoneNumber()
-                        if (normalizedNumber!!.length >= COMPARABLE_PHONE_NUMBER_LENGTH) {
-                            name = contacts.filter { it.phoneNumbers.isNotEmpty() }.firstOrNull { contact ->
-                                val curNumber = contact.phoneNumbers.first().normalizedNumber
-                                if (curNumber.length >= COMPARABLE_PHONE_NUMBER_LENGTH) {
-                                    if (curNumber.substring(curNumber.length - COMPARABLE_PHONE_NUMBER_LENGTH) == normalizedNumber.substring(normalizedNumber.length - COMPARABLE_PHONE_NUMBER_LENGTH)) {
-                                        contactsNumbersMap[number] = contact.getNameToDisplay()
-                                        return@firstOrNull true
-                                    }
-                                }
-                                false
-                            }?.name ?: number
-                        }
-                    }
-                }
-
-                //TODO try again to find the contact name
-                if (name == number) {
-                    val contact = contacts.firstOrNull { it.doesContainPhoneNumber(number) }
-                    if (contact != null) name = contact.name
-                }
-
-                if (name.isEmpty()) {
-                    name = context.getString(R.string.unknown)
-                    unknown = true
-                }
-
-                var photoUri = cursor.getStringValue(Calls.CACHED_PHOTO_URI) ?: ""
-                if (photoUri.isEmpty()) {
-                    if (contactPhotosMap.containsKey(number)) {
-                        photoUri = contactPhotosMap[number]!!
-                    } else {
-                        val contact = contacts.firstOrNull { it.doesContainPhoneNumber(number) }
-                        if (contact != null) {
-                            photoUri = contact.photoUri
-                            contactPhotosMap[number] = contact.photoUri
-                        }
-                    }
-                }
-
-                val startTS = (cursor.getLongValue(Calls.DATE) / 1000L).toInt()
-                if (previousStartTS == startTS) {
-                    continue
-                } else {
-                    previousStartTS = startTS
-                }
-
-                val duration = cursor.getIntValue(Calls.DURATION)
-                val type = cursor.getIntValue(Calls.TYPE)
-                val accountId = cursor.getStringValue(Calls.PHONE_ACCOUNT_ID)
-                val simID = accountIdToSimIDMap[accountId] ?: -1
-                val neighbourIDs = ArrayList<Int>()
-                var specificNumber = ""
-                var specificType = ""
-
-                /* not work
-                val contactIdWithMultipleNumbers = numbersToContactIDMap[number]
-                if (contactIdWithMultipleNumbers != null) {
-                    val specificPhoneNumber =
-                        contacts.firstOrNull { it.contactId == contactIdWithMultipleNumbers }?.phoneNumbers?.firstOrNull { it.value == number }
-                    if (specificPhoneNumber != null) {
-                        specificNumber = specificPhoneNumber.value
-                        specificType = context.getPhoneNumberTypeText(specificPhoneNumber.type, specificPhoneNumber.label)
-                    }
-                }*/
-
-                val contact = contacts.firstOrNull { it.doesContainPhoneNumber(number) }
-                if (contact != null && contact.phoneNumbers.filter { it.normalizedNumber == number }.firstOrNull() != null) {
-                    val phoneNumberType = contact.phoneNumbers.filter { it.normalizedNumber == number }.first().type
-                    val phoneNumberLabel = contact.phoneNumbers.filter { it.normalizedNumber == number }.first().label
-                    specificNumber = contact.phoneNumbers.filter { it.normalizedNumber == number }.first().value
-                    specificType = context.getPhoneNumberTypeText(phoneNumberType, phoneNumberLabel)
-                }
-
-                val recentCall = RecentCall(id, number, name, photoUri, startTS, duration, type, neighbourIDs, simID, specificNumber, specificType, unknown)
-
-                // if we have multiple missed calls from the same number, show it just once
-                if (!groupSubsequentCalls || "$number$name$simID" != previousRecentCallFrom) {
-                    recentCalls.add(recentCall)
-                } else {
-                    recentCalls.lastOrNull()?.neighbourIDs?.add(id)
-                }
-
-                previousRecentCallFrom = "$number$name$simID"
-            } while (cursor.moveToNext())
-        }
-        cursor?.close()
-
-        val blockedNumbers = context.getBlockedNumbers()
-        recentCalls = recentCalls.filter { !context.isNumberBlocked(it.phoneNumber, blockedNumbers) }.toMutableList() as ArrayList<RecentCall>
-        callback(recentCalls)
-    }
-
-    @SuppressLint("MissingPermission")
-    fun removeRecentCalls(ids: ArrayList<Int>, callback: () -> Unit) {
-        ensureBackgroundThread {
-            val uri = Calls.CONTENT_URI
-            ids.chunked(30).forEach { chunk ->
-                val selection = "${Calls._ID} IN (${getQuestionMarks(chunk.size)})"
-                val selectionArgs = chunk.map { it.toString() }.toTypedArray()
-                context.contentResolver.delete(uri, selection, selectionArgs)
-            }
-            callback()
-        }
-    }
-
-    @SuppressLint("MissingPermission")
-    fun removeAllRecentCalls(activity: SimpleActivity, callback: () -> Unit) {
-        activity.handlePermission(PERMISSION_WRITE_CALL_LOG) {
-            if (it) {
-                ensureBackgroundThread {
-                    val uri = Calls.CONTENT_URI
-                    context.contentResolver.delete(uri, null, null)
-                    callback()
-                }
-            }
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/helpers/TimerHelper.kt b/app/src/main/kotlin/com/goodwy/dialer/helpers/TimerHelper.kt
deleted file mode 100644
index 32a7ac8..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/helpers/TimerHelper.kt
+++ /dev/null
@@ -1,43 +0,0 @@
-package com.goodwy.dialer.helpers
-
-import android.content.Context
-import com.goodwy.dialer.extensions.timerDb
-import com.goodwy.dialer.models.Timer
-import com.goodwy.commons.helpers.ensureBackgroundThread
-
-class TimerHelper(val context: Context) {
-    private val timerDao = context.timerDb
-
-    fun getTimers(callback: (timers: List<Timer>) -> Unit) {
-        ensureBackgroundThread {
-            callback.invoke(timerDao.getTimers())
-        }
-    }
-
-    fun getTimer(timerId: Int, callback: (timer: Timer) -> Unit) {
-        ensureBackgroundThread {
-            callback.invoke(timerDao.getTimer(timerId))
-        }
-    }
-
-    fun insertOrUpdateTimer(timer: Timer, callback: () -> Unit = {}) {
-        ensureBackgroundThread {
-            timerDao.insertOrUpdateTimer(timer)
-            callback.invoke()
-        }
-    }
-
-    fun deleteTimer(id: Int, callback: () -> Unit = {}) {
-        ensureBackgroundThread {
-            timerDao.deleteTimer(id)
-            callback.invoke()
-        }
-    }
-
-    fun deleteTimers(timers: List<Timer>, callback: () -> Unit = {}) {
-        ensureBackgroundThread {
-            timerDao.deleteTimers(timers)
-            callback.invoke()
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/helpers/ToneGeneratorHelper.kt b/app/src/main/kotlin/com/goodwy/dialer/helpers/ToneGeneratorHelper.kt
deleted file mode 100644
index ddbf21e..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/helpers/ToneGeneratorHelper.kt
+++ /dev/null
@@ -1,65 +0,0 @@
-package com.goodwy.dialer.helpers
-
-import android.content.Context
-import android.media.AudioManager
-import android.media.AudioManager.STREAM_DTMF
-import android.media.ToneGenerator
-import android.os.Handler
-import android.os.Looper
-
-class ToneGeneratorHelper(context: Context, private val minToneLengthMs: Long) {
-    private val audioManager = context.getSystemService(Context.AUDIO_SERVICE) as AudioManager
-    private val toneGenerator: ToneGenerator? = try {
-        ToneGenerator(DIAL_TONE_STREAM_TYPE, TONE_RELATIVE_VOLUME)
-    } catch (ignored: Exception) {
-        null
-    }
-
-    private var toneStartTimeMs = 0L
-
-    private fun isSilent(): Boolean {
-        return audioManager.ringerMode in arrayOf(AudioManager.RINGER_MODE_SILENT, AudioManager.RINGER_MODE_VIBRATE)
-    }
-
-    fun startTone(char: Char) {
-        toneStartTimeMs = System.currentTimeMillis()
-        startTone(charToTone[char] ?: -1)
-    }
-
-    private fun startTone(tone: Int) {
-        if (tone != -1 && !isSilent()) {
-            toneGenerator?.startTone(tone)
-        }
-    }
-
-    fun stopTone() {
-        val timeSinceStartMs = System.currentTimeMillis() - toneStartTimeMs
-        if (timeSinceStartMs < minToneLengthMs) {
-            Handler(Looper.getMainLooper()).postDelayed({
-                toneGenerator?.stopTone()
-            }, minToneLengthMs - timeSinceStartMs)
-        } else {
-            toneGenerator?.stopTone()
-        }
-    }
-
-    companion object {
-        const val TONE_RELATIVE_VOLUME = 80 // The DTMF tone volume relative to other sounds in the stream
-        const val DIAL_TONE_STREAM_TYPE = STREAM_DTMF
-
-        private val charToTone = HashMap<Char, Int>().apply {
-            put('0', ToneGenerator.TONE_DTMF_0)
-            put('1', ToneGenerator.TONE_DTMF_1)
-            put('2', ToneGenerator.TONE_DTMF_2)
-            put('3', ToneGenerator.TONE_DTMF_3)
-            put('4', ToneGenerator.TONE_DTMF_4)
-            put('5', ToneGenerator.TONE_DTMF_5)
-            put('6', ToneGenerator.TONE_DTMF_6)
-            put('7', ToneGenerator.TONE_DTMF_7)
-            put('8', ToneGenerator.TONE_DTMF_8)
-            put('9', ToneGenerator.TONE_DTMF_9)
-            put('#', ToneGenerator.TONE_DTMF_P)
-            put('*', ToneGenerator.TONE_DTMF_S)
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/interfaces/RefreshItemsListener.kt b/app/src/main/kotlin/com/goodwy/dialer/interfaces/RefreshItemsListener.kt
deleted file mode 100755
index bc976ed..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/interfaces/RefreshItemsListener.kt
+++ /dev/null
@@ -1,5 +0,0 @@
-package com.goodwy.dialer.interfaces
-
-interface RefreshItemsListener {
-    fun refreshItems(callback: (() -> Unit)? = null)
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/interfaces/RemoveSpeedDialListener.kt b/app/src/main/kotlin/com/goodwy/dialer/interfaces/RemoveSpeedDialListener.kt
deleted file mode 100755
index bc3e7a5..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/interfaces/RemoveSpeedDialListener.kt
+++ /dev/null
@@ -1,5 +0,0 @@
-package com.goodwy.dialer.interfaces
-
-interface RemoveSpeedDialListener {
-    fun removeSpeedDial(ids: ArrayList<Int>)
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/interfaces/TimerDao.kt b/app/src/main/kotlin/com/goodwy/dialer/interfaces/TimerDao.kt
deleted file mode 100644
index 1e3a1f6..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/interfaces/TimerDao.kt
+++ /dev/null
@@ -1,23 +0,0 @@
-package com.goodwy.dialer.interfaces
-
-import androidx.room.*
-import com.goodwy.dialer.models.Timer
-
-@Dao
-interface TimerDao {
-
-    @Query("SELECT * FROM timers ORDER BY createdAt ASC")
-    fun getTimers(): List<Timer>
-
-    @Query("SELECT * FROM timers WHERE id=:id")
-    fun getTimer(id: Int): Timer
-
-    @Insert(onConflict = OnConflictStrategy.REPLACE)
-    fun insertOrUpdateTimer(timer: Timer): Long
-
-    @Query("DELETE FROM timers WHERE id=:id")
-    fun deleteTimer(id: Int)
-
-    @Delete
-    fun deleteTimers(list: List<Timer>)
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/models/AudioRoute.kt b/app/src/main/kotlin/com/goodwy/dialer/models/AudioRoute.kt
deleted file mode 100644
index 497d357..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/models/AudioRoute.kt
+++ /dev/null
@@ -1,18 +0,0 @@
-package com.goodwy.dialer.models
-
-import android.telecom.CallAudioState
-import androidx.annotation.DrawableRes
-import androidx.annotation.StringRes
-import com.goodwy.dialer.R
-
-enum class AudioRoute(val route: Int, @StringRes val stringRes: Int, @DrawableRes val iconRes: Int) {
-    SPEAKER(CallAudioState.ROUTE_SPEAKER, R.string.audio_route_speaker_g, R.drawable.ic_volume_up_vector), //Speaker
-    EARPIECE(CallAudioState.ROUTE_EARPIECE, R.string.audio_route_earpiece_g, R.drawable.ic_phone_device), //Phone
-    BLUETOOTH(CallAudioState.ROUTE_BLUETOOTH, R.string.audio_route_bluetooth, R.drawable.ic_bluetooth_audio_vector),
-    WIRED_HEADSET(CallAudioState.ROUTE_WIRED_HEADSET, R.string.audio_route_wired_headset, R.drawable.ic_headset_wired), //Wired headphones
-    WIRED_OR_EARPIECE(CallAudioState.ROUTE_WIRED_OR_EARPIECE, R.string.audio_route_wired_or_earpiece_g, R.drawable.ic_volume_down_vector); //Phone or Wired headphones
-
-    companion object {
-        fun fromRoute(route: Int?) = values().firstOrNull { it.route == route }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/models/CallContact.kt b/app/src/main/kotlin/com/goodwy/dialer/models/CallContact.kt
deleted file mode 100755
index cc2ef14..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/models/CallContact.kt
+++ /dev/null
@@ -1,4 +0,0 @@
-package com.goodwy.dialer.models
-
-// a simpler Contact model containing just info needed at the call screen
-data class CallContact(var name: String, var photoUri: String, var number: String, var numberLabel: String)
diff --git a/app/src/main/kotlin/com/goodwy/dialer/models/RecentCall.kt b/app/src/main/kotlin/com/goodwy/dialer/models/RecentCall.kt
deleted file mode 100755
index fd4e95d..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/models/RecentCall.kt
+++ /dev/null
@@ -1,19 +0,0 @@
-package com.goodwy.dialer.models
-
-import android.telephony.PhoneNumberUtils
-import com.goodwy.commons.extensions.normalizePhoneNumber
-
-// model used at displaying recent calls, for contacts with multiple numbers specifify the number and type
-data class RecentCall(
-    var id: Int, var phoneNumber: String, var name: String, var photoUri: String, var startTS: Int, var duration: Int, var type: Int,
-    var neighbourIDs: ArrayList<Int>, val simID: Int, var specificNumber: String, var specificType: String, var unknown: Boolean
-    //var neighbourIDs: ArrayList<Int>, val simID: Int, var phoneNumberType: Int?, var phoneNumberLabel: String?
-) {
-    fun doesContainPhoneNumber(text: String): Boolean {
-        val normalizedText = text.normalizePhoneNumber()
-        return PhoneNumberUtils.compare(phoneNumber.normalizePhoneNumber(), normalizedText) ||
-                phoneNumber.contains(text) ||
-                phoneNumber.normalizePhoneNumber().contains(normalizedText) ||
-                phoneNumber.contains(normalizedText)
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/models/SIMAccount.kt b/app/src/main/kotlin/com/goodwy/dialer/models/SIMAccount.kt
deleted file mode 100755
index 808e7d0..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/models/SIMAccount.kt
+++ /dev/null
@@ -1,5 +0,0 @@
-package com.goodwy.dialer.models
-
-import android.telecom.PhoneAccountHandle
-
-data class SIMAccount(val id: Int, val handle: PhoneAccountHandle, val label: String, val phoneNumber: String)
diff --git a/app/src/main/kotlin/com/goodwy/dialer/models/SpeedDial.kt b/app/src/main/kotlin/com/goodwy/dialer/models/SpeedDial.kt
deleted file mode 100755
index 84e3eee..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/models/SpeedDial.kt
+++ /dev/null
@@ -1,5 +0,0 @@
-package com.goodwy.dialer.models
-
-data class SpeedDial(val id: Int, var number: String, var displayName: String) {
-    fun isValid() = number.trim().isNotEmpty()
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/models/StateWrapper.kt b/app/src/main/kotlin/com/goodwy/dialer/models/StateWrapper.kt
deleted file mode 100644
index 59f0676..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/models/StateWrapper.kt
+++ /dev/null
@@ -1,3 +0,0 @@
-package com.goodwy.dialer.models
-
-data class StateWrapper(val state: TimerState)
diff --git a/app/src/main/kotlin/com/goodwy/dialer/models/Timer.kt b/app/src/main/kotlin/com/goodwy/dialer/models/Timer.kt
deleted file mode 100644
index d2c942d..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/models/Timer.kt
+++ /dev/null
@@ -1,19 +0,0 @@
-package com.goodwy.dialer.models
-
-import androidx.room.Entity
-import androidx.room.PrimaryKey
-
-@Entity(tableName = "timers")
-data class Timer(
-    @PrimaryKey(autoGenerate = true) var id: Int?,
-    var seconds: Int,
-    val state: TimerState,
-    var vibrate: Boolean,
-    var soundUri: String,
-    var soundTitle: String,
-    var title: String,
-    var label: String,
-    var description: String,
-    var createdAt: Long,
-    var channelId: String? = null,
-)
diff --git a/app/src/main/kotlin/com/goodwy/dialer/models/TimerEvent.kt b/app/src/main/kotlin/com/goodwy/dialer/models/TimerEvent.kt
deleted file mode 100644
index c9d7821..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/models/TimerEvent.kt
+++ /dev/null
@@ -1,12 +0,0 @@
-package com.goodwy.dialer.models
-
-import com.goodwy.dialer.helpers.INVALID_TIMER_ID
-
-sealed class TimerEvent(open val timerId: Int) {
-    data class Delete(override val timerId: Int) : TimerEvent(timerId)
-    data class Reset(override val timerId: Int) : TimerEvent(timerId)
-    data class Start(override val timerId: Int, val duration: Long) : TimerEvent(timerId)
-    data class Pause(override val timerId: Int, val duration: Long) : TimerEvent(timerId)
-    data class Finish(override val timerId: Int, val duration: Long) : TimerEvent(timerId)
-    object Refresh : TimerEvent(INVALID_TIMER_ID)
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/models/TimerState.kt b/app/src/main/kotlin/com/goodwy/dialer/models/TimerState.kt
deleted file mode 100644
index fdb367a..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/models/TimerState.kt
+++ /dev/null
@@ -1,8 +0,0 @@
-package com.goodwy.dialer.models
-
-sealed class TimerState {
-    object Idle : TimerState()
-    data class Running(val duration: Long, val tick: Long) : TimerState()
-    data class Paused(val duration: Long, val tick: Long) : TimerState()
-    object Finished : TimerState()
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/receivers/CallActionReceiver.kt b/app/src/main/kotlin/com/goodwy/dialer/receivers/CallActionReceiver.kt
deleted file mode 100755
index 878d67d..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/receivers/CallActionReceiver.kt
+++ /dev/null
@@ -1,21 +0,0 @@
-package com.goodwy.dialer.receivers
-
-import android.content.BroadcastReceiver
-import android.content.Context
-import android.content.Intent
-import com.goodwy.dialer.activities.CallActivity
-import com.goodwy.dialer.helpers.ACCEPT_CALL
-import com.goodwy.dialer.helpers.CallManager
-import com.goodwy.dialer.helpers.DECLINE_CALL
-
-class CallActionReceiver : BroadcastReceiver() {
-    override fun onReceive(context: Context, intent: Intent) {
-        when (intent.action) {
-            ACCEPT_CALL -> {
-                context.startActivity(CallActivity.getStartIntent(context))
-                CallManager.accept()
-            }
-            DECLINE_CALL -> CallManager.reject()
-        }
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/receivers/HideTimerReceiver.kt b/app/src/main/kotlin/com/goodwy/dialer/receivers/HideTimerReceiver.kt
deleted file mode 100644
index cc887d1..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/receivers/HideTimerReceiver.kt
+++ /dev/null
@@ -1,18 +0,0 @@
-package com.goodwy.dialer.receivers
-
-import android.content.BroadcastReceiver
-import android.content.Context
-import android.content.Intent
-import com.goodwy.dialer.extensions.hideTimerNotification
-import com.goodwy.dialer.helpers.INVALID_TIMER_ID
-import com.goodwy.dialer.helpers.TIMER_ID
-import com.goodwy.dialer.models.TimerEvent
-import org.greenrobot.eventbus.EventBus
-
-class HideTimerReceiver : BroadcastReceiver() {
-    override fun onReceive(context: Context, intent: Intent) {
-        val timerId = intent.getIntExtra(TIMER_ID, INVALID_TIMER_ID)
-        context.hideTimerNotification(timerId)
-        EventBus.getDefault().post(TimerEvent.Reset(timerId, ))
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/services/CallService.kt b/app/src/main/kotlin/com/goodwy/dialer/services/CallService.kt
deleted file mode 100755
index 7216bf8..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/services/CallService.kt
+++ /dev/null
@@ -1,89 +0,0 @@
-package com.goodwy.dialer.services
-
-import android.app.KeyguardManager
-import android.content.Context
-import android.telecom.CallAudioState
-import android.telecom.Call
-import android.telecom.DisconnectCause
-import android.telecom.InCallService
-import com.goodwy.dialer.activities.CallActivity
-import com.goodwy.dialer.extensions.config
-import com.goodwy.dialer.extensions.isOutgoing
-import com.goodwy.dialer.extensions.powerManager
-import com.goodwy.dialer.extensions.showMessageNotification
-import com.goodwy.dialer.helpers.CallManager
-import com.goodwy.dialer.helpers.CallNotificationManager
-import com.goodwy.dialer.helpers.NoCall
-import com.goodwy.dialer.helpers.getCallContact
-
-class CallService : InCallService() {
-    private val callNotificationManager by lazy { CallNotificationManager(this) }
-
-    private val callListener = object : Call.Callback() {
-        override fun onStateChanged(call: Call, state: Int) {
-            super.onStateChanged(call, state)
-            if (state == Call.STATE_DISCONNECTED || state == Call.STATE_DISCONNECTING) {
-                callNotificationManager.cancelNotification()
-            } else {
-                callNotificationManager.setupNotification()
-            }
-        }
-    }
-
-    override fun onCallAdded(call: Call) {
-        super.onCallAdded(call)
-        CallManager.onCallAdded(call)
-        CallManager.inCallService = this
-        call.registerCallback(callListener)
-
-        val isScreenLocked = (getSystemService(Context.KEYGUARD_SERVICE) as KeyguardManager).isDeviceLocked
-        if (!powerManager.isInteractive || call.isOutgoing() || isScreenLocked || config.showIncomingCallsFullScreen) {
-            try {
-                callNotificationManager.setupNotification(true)
-                startActivity(CallActivity.getStartIntent(this))
-            } catch (e: Exception) {
-                // seems like startActivity can throw AndroidRuntimeException and ActivityNotFoundException, not yet sure when and why, lets show a notification
-                callNotificationManager.setupNotification()
-            }
-        } else {
-            callNotificationManager.setupNotification()
-        }
-    }
-
-    override fun onCallRemoved(call: Call) {
-        super.onCallRemoved(call)
-        call.unregisterCallback(callListener)
-        callNotificationManager.cancelNotification()
-        val wasPrimaryCall = call == CallManager.getPrimaryCall()
-        CallManager.onCallRemoved(call)
-        if (CallManager.getPhoneState() == NoCall) {
-            CallManager.inCallService = null
-            callNotificationManager.cancelNotification()
-        } else {
-            callNotificationManager.setupNotification()
-            if (wasPrimaryCall) {
-                startActivity(CallActivity.getStartIntent(this))
-            }
-        }
-        call.details?.let {
-            if (call.details.disconnectCause.code == DisconnectCause.MISSED && config.missedCallNotifications) {
-                getCallContact(this.applicationContext, call) { callContact ->
-                    showMessageNotification(callContact)
-                }
-            }
-        }
-    }
-
-    override fun onCallAudioStateChanged(audioState: CallAudioState?) {
-        super.onCallAudioStateChanged(audioState)
-        if (audioState != null) {
-            CallManager.onAudioStateChanged(audioState)
-        }
-    }
-
-    override fun onDestroy() {
-        super.onDestroy()
-        callNotificationManager.cancelNotification()
-    }
-}
-
diff --git a/app/src/main/kotlin/com/goodwy/dialer/services/SimpleCallScreeningService.kt b/app/src/main/kotlin/com/goodwy/dialer/services/SimpleCallScreeningService.kt
deleted file mode 100755
index b44ef27..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/services/SimpleCallScreeningService.kt
+++ /dev/null
@@ -1,42 +0,0 @@
-package com.goodwy.dialer.services
-
-import android.net.Uri
-import android.os.Build
-import android.telecom.Call
-import android.telecom.CallScreeningService
-import androidx.annotation.RequiresApi
-import com.goodwy.commons.extensions.baseConfig
-import com.goodwy.commons.extensions.getMyContactsCursor
-import com.goodwy.commons.extensions.isNumberBlocked
-import com.goodwy.commons.extensions.normalizePhoneNumber
-import com.goodwy.commons.helpers.SimpleContactsHelper
-
-@RequiresApi(Build.VERSION_CODES.N)
-class SimpleCallScreeningService : CallScreeningService() {
-
-    override fun onScreenCall(callDetails: Call.Details) {
-        val number = Uri.decode(callDetails.handle?.toString())?.substringAfter("tel:")
-        if (number != null && isNumberBlocked(number.normalizePhoneNumber())) {
-            respondToCall(callDetails, isBlocked = true)
-        } else if (number != null && baseConfig.blockUnknownNumbers) {
-            val simpleContactsHelper = SimpleContactsHelper(this)
-            val privateCursor = getMyContactsCursor(favoritesOnly = false, withPhoneNumbersOnly = true)
-            simpleContactsHelper.exists(number, privateCursor) { exists ->
-                respondToCall(callDetails, isBlocked = !exists)
-            }
-        } else {
-            respondToCall(callDetails, isBlocked = false)
-        }
-    }
-
-    private fun respondToCall(callDetails: Call.Details, isBlocked: Boolean) {
-        val response = CallResponse.Builder()
-            .setDisallowCall(isBlocked)
-            .setRejectCall(isBlocked)
-            .setSkipCallLog(isBlocked)
-            .setSkipNotification(isBlocked)
-            .build()
-
-        respondToCall(callDetails, response)
-    }
-}
diff --git a/app/src/main/kotlin/com/goodwy/dialer/services/TimerService.kt b/app/src/main/kotlin/com/goodwy/dialer/services/TimerService.kt
deleted file mode 100644
index 5ca684a..0000000
--- a/app/src/main/kotlin/com/goodwy/dialer/services/TimerService.kt
+++ /dev/null
@@ -1,155 +0,0 @@
-package com.goodwy.dialer.services
-
-import android.app.Notification
-import android.app.NotificationChannel
-import android.app.NotificationManager
-import android.app.Service
-import android.content.Context
-import android.content.Intent
-import android.os.Handler
-import android.os.IBinder
-import android.os.Looper
-import androidx.core.app.NotificationCompat
-import androidx.core.content.ContextCompat
-import com.goodwy.commons.extensions.*
-import com.goodwy.dialer.R
-import com.goodwy.dialer.helpers.INVALID_TIMER_ID
-import com.goodwy.dialer.helpers.TIMER_RUNNING_NOTIF_ID
-import com.goodwy.dialer.models.TimerEvent
-import com.goodwy.dialer.models.TimerState
-import com.goodwy.commons.helpers.isOreoPlus
-import com.goodwy.dialer.extensions.*
-import org.greenrobot.eventbus.EventBus
-import org.greenrobot.eventbus.Subscribe
-import org.greenrobot.eventbus.ThreadMode
-
-class TimerService : Service() {
-    private val bus = EventBus.getDefault()
-    private var isStopping = false
-
-    override fun onCreate() {
-        super.onCreate()
-        bus.register(this)
-    }
-
-    override fun onBind(intent: Intent?): IBinder? = null
-
-    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {
-        super.onStartCommand(intent, flags, startId)
-        isStopping = false
-        updateNotification()
-        startForeground(TIMER_RUNNING_NOTIF_ID, notification(getString(R.string.app_name), getString(R.string.timers_notification_msg), INVALID_TIMER_ID))
-        return START_NOT_STICKY
-    }
-
-    private fun updateNotification() {
-        timerHelper.getTimers { timers ->
-            val runningTimers = timers.filter { it.state is TimerState.Running }
-            if (runningTimers.isNotEmpty()) {
-                val firstTimer = runningTimers.first()
-                val formattedDuration = (firstTimer.state as TimerState.Running).tick.getFormattedDuration()
-                val contextText = when {
-                    firstTimer.label.isNotEmpty() -> getString(R.string.call_back_person_g, firstTimer.title)
-                    else -> resources.getQuantityString(R.plurals.timer_notification_msg, runningTimers.size, runningTimers.size)
-                }
-
-                Handler(Looper.getMainLooper()).post {
-                    try {
-                        startForeground(TIMER_RUNNING_NOTIF_ID, notification(formattedDuration, contextText, firstTimer.id!!, firstTimer.label))
-                    } catch (e: Exception) {
-                        showErrorToast(e)
-                    }
-                }
-            } else {
-                stopService()
-            }
-        }
-    }
-
-    @Subscribe(threadMode = ThreadMode.MAIN)
-    fun onMessageEvent(event: TimerStopService) {
-        stopService()
-    }
-
-    @Subscribe(threadMode = ThreadMode.MAIN)
-    fun onMessageEvent(event: TimerEvent.Refresh) {
-        if (!isStopping) {
-            updateNotification()
-        }
-    }
-
-    private fun stopService() {
-        isStopping = true
-        if (isOreoPlus()) {
-            stopForeground(true)
-        } else {
-            stopSelf()
-        }
-    }
-
-    override fun onDestroy() {
-        super.onDestroy()
-        bus.unregister(this)
-    }
-
-    private fun notification(title: String, contentText: String, firstRunningTimerId: Int, number: String = ""): Notification {
-        val channelId = "simple_alarm_timer"
-        val label = getString(R.string.timer)
-        val notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
-        if (isOreoPlus()) {
-            val importance = NotificationManager.IMPORTANCE_DEFAULT
-            NotificationChannel(channelId, label, importance).apply {
-                setSound(null, null)
-                notificationManager.createNotificationChannel(this)
-            }
-        }
-
-        val builder = NotificationCompat.Builder(this)
-            .setContentTitle(title)
-            .setContentText(contentText)
-            .setSmallIcon(R.drawable.ic_remind_call)
-            .setPriority(Notification.PRIORITY_DEFAULT)
-            .setSound(null)
-            .setOngoing(true)
-            .setAutoCancel(true)
-            .setChannelId(channelId)
-            .addAction(
-                R.drawable.ic_cross_vector,
-                getString(R.string.dismiss),
-                getHideTimerPendingIntent(firstRunningTimerId)
-            )
-        if (number != "") {
-            builder.addAction(
-                R.drawable.ic_messages,
-                getString(R.string.message),
-                sendSMSPendingIntent(number)
-            )
-        }
-        if (number != "") {
-            builder.addAction(
-                R.drawable.ic_phone_vector,
-                getString(R.string.call_back_g),
-                startCallPendingIntent(number)
-            )
-        }
-
-        if (firstRunningTimerId != INVALID_TIMER_ID) {
-            builder.setContentIntent(this.getOpenTimerTabIntent(firstRunningTimerId))
-        }
-
-        builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC)
-        return builder.build()
-    }
-}
-
-fun startTimerService(context: Context) {
-    Handler(Looper.getMainLooper()).post {
-        try {
-            ContextCompat.startForegroundService(context, Intent(context, TimerService::class.java))
-        } catch (e: Exception) {
-            context.showErrorToast(e)
-        }
-    }
-}
-
-object TimerStopService
diff --git a/app/src/main/res/drawable/button_background.xml b/app/src/main/res/drawable/button_background.xml
index ef82518..3d0a4cf 100755
--- a/app/src/main/res/drawable/button_background.xml
+++ b/app/src/main/res/drawable/button_background.xml
@@ -3,4 +3,4 @@
 <item android:drawable="@drawable/tab_background_press" android:state_pressed="true" />
 <item android:drawable="@drawable/tab_background_press" android:state_focused="true" />
 <item android:drawable="@drawable/tab_background" />
-</selector>
+</selector>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/ic_headset_wired.xml b/app/src/main/res/drawable/ic_headset_wired.xml
index 94bba90..69b08c0 100644
--- a/app/src/main/res/drawable/ic_headset_wired.xml
+++ b/app/src/main/res/drawable/ic_headset_wired.xml
@@ -40,7 +40,7 @@
         android:translateY="105">
         <path
             android:pathData="M8.5,22.75C8.09,22.75 7.75,22.41 7.75,22V19C7.75,18.59 8.09,18.25 8.5,18.25C8.91,18.25 9.25,18.59 9.25,19V22C9.25,22.41 8.91,22.75 8.5,22.75Z"
-            android:fillColor="#FF000000"/>
+            android:fillColor="#000000"/>
     </group>
     <group
         android:scaleY="16"
@@ -49,6 +49,6 @@
         android:translateY="105">
         <path
             android:pathData="M8.5,22.75C8.09,22.75 7.75,22.41 7.75,22V19C7.75,18.59 8.09,18.25 8.5,18.25C8.91,18.25 9.25,18.59 9.25,19V22C9.25,22.41 8.91,22.75 8.5,22.75Z"
-            android:fillColor="#FF000000"/>
+            android:fillColor="#000000"/>
     </group>
 </vector>
diff --git a/app/src/main/res/drawable/ic_remind_call.xml b/app/src/main/res/drawable/ic_remind_call.xml
deleted file mode 100644
index 94d84ad..0000000
--- a/app/src/main/res/drawable/ic_remind_call.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24">
-    <group
-        android:translateX="-1"
-        android:translateY="1">
-        <path
-            android:fillColor="@android:color/white"
-            android:pathData="M19.21,15.27l-2.54,-0.29c-0.61,-0.07 -1.21,0.14 -1.64,0.57l-1.84,1.84c-2.83,-1.44 -5.15,-3.75 -6.59,-6.59l1.85,-1.85c0.43,-0.43 0.64,-1.04 0.57,-1.64l-0.29,-2.52c-0.11,-1.01 -0.97,-1.78 -1.98,-1.78L5.02,3.01c-1.13,0 -2.07,0.94 -2,2.07 0.53,8.54 7.36,15.36 15.89,15.89 1.13,0.07 2.07,-0.87 2.07,-2v-1.73c0.01,-1 -0.76,-1.86 -1.77,-1.97z"/>
-    </group>
-    <group
-        android:translateX="8.6"
-        android:translateY="1"
-        android:scaleX="0.6"
-        android:scaleY="0.6">
-        <group
-            android:translateX="1.5"
-            android:translateY="2.4"
-            android:scaleX="0.88"
-            android:scaleY="0.88">
-            <path
-                android:fillColor="@android:color/white"
-                android:pathData="M11.99,2C6.47,2 2,6.48 2,12s4.47,10 9.99,10C17.52,22 22,17.52 22,12S17.52,2 11.99,2zM16,16c-0.39,0.39 -1.02,0.39 -1.41,0l-3.29,-3.29C11.11,12.52 11,12.27 11,12V8c0,-0.55 0.45,-1 1,-1h0c0.55,0 1,0.45 1,1v3.59l3,3C16.39,14.98 16.39,15.61 16,16z"/>
-        </group>
-        <path
-            android:fillColor="@android:color/white"
-            android:pathData="M21.18,5.01L18.1,2.45c-0.42,-0.35 -1.05,-0.3 -1.41,0.13 -0.35,0.42 -0.29,1.05 0.13,1.41l3.07,2.56c0.42,0.35 1.05,0.3 1.41,-0.13 0.36,-0.42 0.3,-1.05 -0.12,-1.41zM4.1,6.55l3.07,-2.56c0.43,-0.36 0.49,-0.99 0.13,-1.41 -0.35,-0.43 -0.98,-0.48 -1.4,-0.13L2.82,5.01c-0.42,0.36 -0.48,0.99 -0.12,1.41 0.35,0.43 0.98,0.48 1.4,0.13z"/>
-        <group
-            android:translateX="4.8"
-            android:translateY="17.6"
-            android:scaleX="0.6"
-            android:scaleY="0.6">
-            <path
-                android:fillColor="@android:color/white"
-                android:pathData="M21.18,5.01L18.1,2.45c-0.42,-0.35 -1.05,-0.3 -1.41,0.13 -0.35,0.42 -0.29,1.05 0.13,1.41l3.07,2.56c0.42,0.35 1.05,0.3 1.41,-0.13 0.36,-0.42 0.3,-1.05 -0.12,-1.41zM4.1,6.55l3.07,-2.56c0.43,-0.36 0.49,-0.99 0.13,-1.41 -0.35,-0.43 -0.98,-0.48 -1.4,-0.13L2.82,5.01c-0.42,0.36 -0.48,0.99 -0.12,1.41 0.35,0.43 0.98,0.48 1.4,0.13z"/>
-        </group>
-    </group>
-</vector>
diff --git a/app/src/main/res/drawable/ic_signal_vector.xml b/app/src/main/res/drawable/ic_signal_vector.xml
deleted file mode 100755
index 0865868..0000000
--- a/app/src/main/res/drawable/ic_signal_vector.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="1024" android:viewportWidth="1024" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#3a76f0" android:pathData="M0 0v1024h1024V0H0z"/>
-    <path android:fillColor="#ffffff" android:pathData="M442.08 229.27l6.54 26.48a264.44 264.44 0 0 0-73.14 30.28l-13.99-23.41a287.61 287.61 0 0 1 80.59-33.34zm139.84 0l-6.54 26.48a264.44 264.44 0 0 1 73.14 30.28l14.15-23.41a289.68 289.68 0 0 0-80.75-33.35zm-319.3 132.14a289.18 289.18 0 0 0-33.34 80.67l26.48 6.54a264.44 264.44 0 0 1 30.28-73.14zM248.05 512a263.53 263.53 0 0 1 2.98-39.55l-26.97-4.14a291.25 291.25 0 0 0 0 87.29l26.97-4.05a264.36 264.36 0 0 1-2.98-39.55zm414.46 249.3l-13.99-23.33a262.95 262.95 0 0 1-73.06 30.28l6.54 26.48a289.84 289.84 0 0 0 80.51-33.43zM775.95 512a264.36 264.36 0 0 1-2.98 39.55l26.97 4.05a291.25 291.25 0 0 0 0-87.29l-26.97 4.14a263.53 263.53 0 0 1 2.98 39.55zm18.78 69.83l-26.48-6.53a263.95 263.95 0 0 1-30.28 73.23l23.42 14.07a288.68 288.68 0 0 0 33.34-80.77zM551.55 772.97a264.03 264.03 0 0 1-79.1 0l-4.05 26.97a290.67 290.67 0 0 0 87.21 0zm172.93-104.42a263.2 263.2 0 0 1-55.93 55.85l16.22 22.01a293.81 293.81 0 0 0 61.73-61.48zm-55.93-369.03a263.61 263.61 0 0 1 55.93 55.93l22.01-16.38a293.4 293.4 0 0 0-61.56-61.56zm-369.03 55.93a263.61 263.61 0 0 1 55.93-55.93l-16.38-22.01a293.4 293.4 0 0 0-61.56 61.56zm461.86 5.96l-23.41 14.07a262.95 262.95 0 0 1 30.28 73.06l26.48-6.54a288.68 288.68 0 0 0-33.35-80.59zM472.45 251.03a264.03 264.03 0 0 1 79.1 0l4.05-26.97a290.67 290.67 0 0 0-87.21 0zM313.5 753.69l-56.34 13.07 13.15-56.35-26.56-6.2-13.15 56.35a27.3 27.3 0 0 0 20.35 32.85 28.55 28.55 0 0 0 12.41 0l56.35-12.99zm-64.12-73.81l26.64 6.13 9.1-39.06a261.63 261.63 0 0 1-29.37-71.65l-26.48 6.54a292.33 292.33 0 0 0 26.81 69.25zm127.42 59.08l-39.05 9.1 6.2 26.64 28.71-6.7a288.77 288.77 0 0 0 69.25 26.81l6.54-26.48a262.04 262.04 0 0 1-71.41-29.54zM512 275.36c-130.73 0.08-236.56 106.07-236.56 236.72a237.22 237.22 0 0 0 36.32 125.77l-22.75 97.14 97.06-22.75c110.62 69.58 256.74 36.4 326.33-74.14 69.59-110.54 36.49-256.67-74.05-326.33A237.22 237.22 0 0 0 512 275.36" android:strokeWidth="0.82741475"/>
-</vector>
diff --git a/app/src/main/res/drawable/ic_telegram_vector.xml b/app/src/main/res/drawable/ic_telegram_vector.xml
deleted file mode 100755
index 1262e68..0000000
--- a/app/src/main/res/drawable/ic_telegram_vector.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="455.731" android:viewportWidth="455.731" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#36a6de" android:pathData="M0 0h455.731v455.731H0z"/>
-    <path android:fillColor="#ffffff" android:pathData="M107.812 223.206l148.606-61.208c14.664-6.376 64.396-26.779 64.396-26.779s22.953-8.926 21.04 12.752c-0.638 8.926-5.738 40.168-10.839 74.009l-15.94 100.15s-1.275 14.664-12.114 17.215c-10.839 2.55-28.691-8.926-31.879-11.477-2.55-1.913-47.819-30.604-64.396-44.631-4.463-3.826-9.564-11.477 0.638-20.403 22.953-21.04 50.369-47.181 66.946-63.758 7.651-7.651 15.302-25.503-16.577-3.826l-89.948 60.472s-10.201 6.376-29.329 0.638-41.443-13.389-41.443-13.389-15.302-9.564 10.839-19.765z" android:strokeWidth="0.49044925"/>
-</vector>
diff --git a/app/src/main/res/drawable/ic_threema_vector.xml b/app/src/main/res/drawable/ic_threema_vector.xml
deleted file mode 100755
index 4e806b2..0000000
--- a/app/src/main/res/drawable/ic_threema_vector.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="512" android:viewportWidth="512" android:width="24dp" xmlns:aapt="http://schemas.android.com/aapt" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#3b3b3b" android:pathData="M0 0h512v512H0z"/>
-    <path android:fillColor="#ffffff" android:pathData="M193.916 316.176l-70.308 17.36 14.756-59.892c-14.756-19.096-23.436-43.4-23.436-68.572 0-68.572 63.364-124.123 141.483-124.123s141.483 55.552 141.483 124.123c0 68.572-63.364 124.123-141.483 124.123-21.7 0-43.4-4.34-61.628-12.152zm21.7-122.388h-1.736c-3.472 0-6.076 2.604-5.208 6.076v56.42c0 3.472 2.604 6.076 6.076 6.076h83.327c3.472 0 6.076-2.604 6.076-6.076v-56.42c0-3.472-2.604-6.076-6.076-6.076h-1.736v-15.624c0-21.7-18.228-39.928-39.928-39.928-21.7 0-39.928 18.228-39.928 39.928v15.624zm64.232 0h-47.74v-15.624c0-13.02 10.416-24.304 24.304-24.304 13.02 0 24.304 10.416 24.304 24.304v15.624z" android:strokeWidth="0.86799389"/>
-    <path android:fillColor="#3fe669" android:pathData="M144.951 384.747a24.304 24.304 0 1 1 48.608 0 24.304 24.304 0 1 1-48.608 0m86.799 0a24.304 24.304 0 1 1 48.608 0 24.304 24.304 0 1 1-48.608 0m86.8 0a24.304 24.304 0 1 1 48.608 0 24.304 24.304 0 1 1-48.608 0" android:strokeWidth="0.86799389"/>
-</vector>
diff --git a/app/src/main/res/drawable/ic_viber_vector.xml b/app/src/main/res/drawable/ic_viber_vector.xml
deleted file mode 100755
index 52baa28..0000000
--- a/app/src/main/res/drawable/ic_viber_vector.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="512" android:viewportWidth="512" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#7b519d" android:pathData="M0 0h512v512H0z"/>
-    <path android:fillColor="#ffffff" android:pathData="M407.294 186.94l-0.092-0.369c-7.477-30.229-41.188-62.664-72.145-69.412l-0.349-0.072c-50.073-9.552-100.844-9.552-150.905 0l-0.36 0.072c-30.947 6.748-64.658 39.186-72.145 69.412l-0.083 0.369c-9.244 42.214-9.244 85.026 0 127.24l0.083 0.369c7.169 28.938 38.368 59.885 68.171 68.395v33.743c0 12.214 14.883 18.212 23.346 9.398l34.188-35.537c7.416 0.414 14.835 0.646 22.252 0.646 25.205 0 50.421-2.384 75.452-7.159l0.349-0.072c30.958-6.748 64.668-39.186 72.145-69.412l0.092-0.369c9.244-42.215 9.244-85.025 0.001-127.241zm-27.056 121.12c-4.992 19.721-30.587 44.238-50.924 48.768-26.624 5.063-53.459 7.227-80.267 6.484-0.533-0.016-1.046 0.192-1.417 0.575l-24.962 25.625-26.55 27.25c-1.941 2.025-5.352 0.646-5.352-2.147v-55.899c0-0.924-0.659-1.707-1.566-1.887-0.005-0.002-0.011-0.002-0.016-0.003-20.337-4.53-45.923-29.047-50.924-48.768-8.32-38.157-8.32-76.839 0-114.996 5.001-19.721 30.587-44.238 50.924-48.768 46.498-8.844 93.643-8.844 140.131 0 20.347 4.53 45.932 29.047 50.924 48.768 8.329 38.158 8.329 76.84-0.001 114.998z" android:strokeWidth="1.09314275"/>
-    <path android:fillColor="#ffffff" android:pathData="M303.493 333.862c-3.126-0.95-6.105-1.587-8.874-2.734-28.674-11.897-55.063-27.244-75.965-50.77-11.887-13.378-21.191-28.482-29.055-44.466-3.73-7.58-6.873-15.456-10.077-23.283-2.921-7.136 1.382-14.508 5.912-19.886 4.251-5.047 9.722-8.908 15.647-11.756 4.624-2.221 9.185-0.94 12.562 2.979 7.3 8.474 14.008 17.381 19.436 27.204 3.34 6.042 2.423 13.427-3.629 17.538-1.471 0.999-2.812 2.173-4.181 3.301-1.202 0.989-2.333 1.988-3.157 3.328-1.505 2.45-1.577 5.341-0.609 8.005 7.463 20.508 20.042 36.457 40.686 45.048 3.303 1.374 6.62 2.973 10.426 2.531 6.373-0.744 8.437-7.736 12.903-11.388 4.365-3.569 9.944-3.616 14.646-0.641 4.704 2.978 9.262 6.172 13.794 9.402 4.449 3.17 8.877 6.269 12.98 9.884 3.946 3.475 5.305 8.034 3.083 12.748-4.067 8.637-9.986 15.82-18.522 20.407-2.41 1.292-5.29 1.711-8.007 2.548-3.126-0.95 2.718-0.837 0 0zm-44.162-162.77c37.505 1.052 68.31 25.941 74.912 63.021 1.125 6.318 1.525 12.777 2.026 19.19 0.211 2.697-1.317 5.259-4.227 5.295-3.006 0.037-4.358-2.48-4.555-5.175-0.386-5.337-0.654-10.699-1.389-15.989-3.882-27.94-26.16-51.054-53.97-56.014-4.186-0.747-8.466-0.942-12.707-1.387-2.679-0.281-6.188-0.442-6.782-3.775-0.497-2.793 1.859-5.016 4.519-5.16 0.72-0.043 1.447-0.011 2.173-0.005 37.507 1.052-0.726-0.002 0 0z" android:strokeWidth="1.09314275"/>
-    <path android:fillColor="#ffffff" android:pathData="M316.328 244.981c-0.063 0.469-0.094 1.57-0.369 2.606-0.995 3.765-6.705 4.236-8.018 0.437-0.39-1.127-0.448-2.41-0.45-3.624-0.011-7.943-1.739-15.879-5.746-22.791-4.118-7.104-10.41-13.074-17.788-16.689-4.462-2.184-9.286-3.543-14.177-4.351-2.137-0.354-4.297-0.567-6.445-0.867-2.603-0.362-3.993-2.02-3.869-4.585 0.115-2.403 1.871-4.133 4.491-3.983 8.606 0.487 16.921 2.35 24.574 6.401 15.56 8.241 24.449 21.247 27.044 38.616 0.117 0.788 0.305 1.566 0.365 2.356 0.146 1.948 0.239 3.899 0.388 6.472-0.063 0.467-0.149-2.573 0 0z" android:strokeWidth="1.09314275"/>
-    <path android:fillColor="#ffffff" android:pathData="M293.001 244.072c-3.137 0.057-4.816-1.681-5.141-4.556-0.224-2.005-0.404-4.038-0.882-5.99-0.942-3.845-2.985-7.406-6.219-9.762-1.526-1.112-3.256-1.922-5.068-2.446-2.301-0.666-4.693-0.482-6.987-1.044-2.493-0.611-3.873-2.631-3.481-4.969 0.357-2.129 2.427-3.791 4.754-3.622 14.541 1.049 24.933 8.567 26.417 25.686 0.106 1.208 0.228 2.484-0.037 3.641-0.461 1.975-1.926 2.967-3.354 3.063-3.138 0.056 1.428-0.096 0 0zm10.492 89.79c2.718-0.837-3.126-0.95 0 0z" android:strokeWidth="1.09314275"/>
-    <path android:fillColor="#ffffff" android:pathData="M259.427 171.097c-0.032 0-0.062-0.003-0.094-0.003-0.031-0.002 0.009 0 0.094 0.003zm-0.095-0.005c0.032 0 0.062 0.003 0.094 0.003 2.081 0.074 35.934 1.007-0.094-0.003zm56.996 73.889c-0.149-2.573-0.062 0.467 0 0zm-23.327-0.909c0.049-0.003 0.096-0.028 0.143-0.034-0.132 0-0.336 0.003-0.544 0.011 0.136 0.003 0.259 0.024 0.401 0.023z"/>
-    <path android:fillColor="#ffffff" android:pathData="M293.001 244.072c-0.141 0.002-0.266-0.019-0.401-0.023-0.679 0.019-1.38 0.055 0.401 0.023zm0.143-0.033c-0.049 0.005-0.096 0.031-0.143 0.034 0.367-0.025 0.336-0.034 0.143-0.034z"/>
-</vector>
diff --git a/app/src/main/res/drawable/ic_whatsapp_vector.xml b/app/src/main/res/drawable/ic_whatsapp_vector.xml
deleted file mode 100755
index 55577ca..0000000
--- a/app/src/main/res/drawable/ic_whatsapp_vector.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:viewportHeight="455.731" android:viewportWidth="455.731" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#1BD741" android:pathData="M0 0h455.731v455.731H0z"/>
-    <path android:fillColor="#ffffff" android:pathData="M89.713 366.168l19.351-68.728c-12.444-21.14-18.996-45.193-18.996-69.902 0-76.08 61.896-137.976 137.976-137.976s137.975 61.896 137.975 137.976-61.895 137.976-137.975 137.976c-23.706 0-46.919-6.068-67.454-17.59zm74.5-43.346l4.224 2.579c17.904 10.93 38.516 16.708 59.607 16.708 63.174 0 114.569-51.396 114.569-114.57 0-63.174-51.395-114.57-114.569-114.57s-114.57 51.396-114.57 114.57c0 22.012 6.256 43.388 18.091 61.817l2.844 4.429-11.143 39.579z"/>
-    <path android:fillColor="#ffffff" android:pathData="M189.285 163.32l-8.953-0.488c-2.812-0.153-5.57 0.786-7.696 2.633-4.34 3.769-11.28 11.056-13.412 20.552-3.179 14.158 1.734 31.496 14.448 48.833s36.408 45.077 78.306 56.924c13.501 3.818 24.122 1.244 32.317-3.998 6.49-4.151 10.964-10.815 12.576-18.348l1.429-6.677c0.454-2.122-0.623-4.275-2.595-5.184l-30.257-13.947c-1.964-0.905-4.294-0.333-5.615 1.379l-11.879 15.399c-0.897 1.163-2.433 1.624-3.82 1.137-8.135-2.859-35.383-14.271-50.335-43.072-0.648-1.249-0.487-2.765 0.433-3.831l11.352-13.133c1.16-1.341 1.453-3.226 0.756-4.856l-13.043-30.514c-0.694-1.624-2.25-2.713-4.013-2.809z"/>
-</vector>
diff --git a/app/src/main/res/layout/activity_call.xml b/app/src/main/res/layout/activity_call.xml
index da42e14..ec9275c 100755
--- a/app/src/main/res/layout/activity_call.xml
+++ b/app/src/main/res/layout/activity_call.xml
@@ -18,7 +18,7 @@
         app:layout_constraintVertical_bias="0.05"
         tools:src="@drawable/ic_call_accept" />
 
-    <com.goodwy.commons.views.MyTextView
+    <com.leos.commons.views.MyTextView
         android:id="@+id/caller_name_label"
         android:layout_width="0dp"
         android:layout_height="wrap_content"
@@ -30,7 +30,7 @@
         app:layout_constraintTop_toBottomOf="@+id/caller_avatar"
         tools:text="Caller name" />
 
-    <com.goodwy.commons.views.MyTextView
+    <com.leos.commons.views.MyTextView
         android:id="@+id/caller_number"
         android:layout_width="0dp"
         android:layout_height="wrap_content"
@@ -42,7 +42,7 @@
         app:layout_constraintTop_toBottomOf="@+id/caller_name_label"
         tools:text="0912 345 678" />
 
-    <com.goodwy.commons.views.MyTextView
+    <com.leos.commons.views.MyTextView
         android:id="@+id/call_status_label"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
@@ -129,7 +129,7 @@
             app:layout_constraintTop_toTopOf="parent"
             app:srcCompat="@drawable/ic_phone_vector" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/on_hold_caller_name"
             android:layout_width="0dp"
             android:layout_height="wrap_content"
@@ -143,7 +143,7 @@
             app:layout_constraintTop_toTopOf="parent"
             tools:text="0912 345 678" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/on_hold_label"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
@@ -161,7 +161,7 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:visibility="gone"
-        tools:visibility="gone">
+        tools:visibility="visible">
 
         <ImageView
             android:id="@+id/call_toggle_microphone"
@@ -402,7 +402,7 @@
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintStart_toStartOf="parent"
             app:layout_constraintTop_toTopOf="parent"
-            tools:visibility="gone">
+            tools:visibility="visible">
 
             <RelativeLayout
                 android:id="@+id/dialpad_input_holder"
@@ -411,7 +411,7 @@
                 android:layout_above="@+id/dialpad_include"
                 android:gravity="center">
 
-                <com.goodwy.commons.views.MyEditText
+                <com.leos.commons.views.MyEditText
                     android:id="@+id/dialpad_input"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
@@ -455,58 +455,6 @@
         tools:layout_editor_absoluteY="0dp"
         tools:visibility="visible">
 
-        <ImageView
-            android:id="@+id/call_remind"
-            android:layout_width="36dp"
-            android:layout_height="36dp"
-            android:contentDescription="@string/send_sms"
-            android:elevation="@dimen/medium_margin"
-            android:alpha="0.9"
-            android:src="@drawable/ic_alarm_filled_vector"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintEnd_toEndOf="@+id/call_decline"
-            app:layout_constraintStart_toStartOf="@+id/call_decline"
-            app:layout_constraintTop_toTopOf="parent"
-            app:layout_constraintVertical_bias="0.60" />
-
-        <com.goodwy.commons.views.MyTextView
-            android:id="@+id/call_remind_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/smaller_margin"
-            android:elevation="@dimen/medium_margin"
-            android:text="@string/remind_me"
-            android:textSize="@dimen/normal_text_size"
-            app:layout_constraintEnd_toEndOf="@+id/call_remind"
-            app:layout_constraintStart_toStartOf="@+id/call_remind"
-            app:layout_constraintTop_toBottomOf="@+id/call_remind" />
-
-        <ImageView
-            android:id="@+id/call_message"
-            android:layout_width="36dp"
-            android:layout_height="36dp"
-            android:contentDescription="@string/send_sms"
-            android:elevation="@dimen/medium_margin"
-            android:alpha="0.9"
-            android:src="@drawable/ic_messages"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintEnd_toEndOf="@+id/call_accept"
-            app:layout_constraintStart_toStartOf="@+id/call_accept"
-            app:layout_constraintTop_toTopOf="parent"
-            app:layout_constraintVertical_bias="0.60" />
-
-        <com.goodwy.commons.views.MyTextView
-            android:id="@+id/call_message_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/smaller_margin"
-            android:elevation="@dimen/medium_margin"
-            android:text="@string/message"
-            android:textSize="@dimen/normal_text_size"
-            app:layout_constraintEnd_toEndOf="@+id/call_message"
-            app:layout_constraintStart_toStartOf="@+id/call_message"
-            app:layout_constraintTop_toBottomOf="@+id/call_message" />
-
         <ImageView
             android:id="@+id/call_decline"
             android:layout_width="@dimen/incoming_call_button_size"
@@ -520,13 +468,13 @@
             app:layout_constraintTop_toTopOf="parent"
             app:layout_constraintVertical_bias="0.85" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/call_decline_label"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/medium_margin"
+            android:layout_marginTop="@dimen/normal_margin"
             android:text="@string/decline"
-            android:textSize="@dimen/normal_text_size"
+            android:textSize="@dimen/bigger_text_size"
             app:layout_constraintEnd_toEndOf="@+id/call_decline"
             app:layout_constraintStart_toStartOf="@+id/call_decline"
             app:layout_constraintTop_toBottomOf="@+id/call_decline" />
@@ -545,14 +493,14 @@
             app:layout_constraintTop_toTopOf="parent"
             app:layout_constraintVertical_bias="0.85" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/call_accept_label"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/medium_margin"
+            android:layout_marginTop="@dimen/normal_margin"
             android:elevation="@dimen/medium_margin"
             android:text="@string/accept"
-            android:textSize="@dimen/normal_text_size"
+            android:textSize="@dimen/bigger_text_size"
             app:layout_constraintEnd_toEndOf="@+id/call_accept"
             app:layout_constraintStart_toStartOf="@+id/call_accept"
             app:layout_constraintTop_toBottomOf="@+id/call_accept" />
diff --git a/app/src/main/res/layout/activity_call_history.xml b/app/src/main/res/layout/activity_call_history.xml
index eca8a39..7996159 100755
--- a/app/src/main/res/layout/activity_call_history.xml
+++ b/app/src/main/res/layout/activity_call_history.xml
@@ -73,7 +73,7 @@
                 android:paddingTop="10dp"
                 android:paddingBottom="8dp"
                 android:background="@drawable/button_background"
-                android:drawableTop="@drawable/ic_messages"
+                android:drawableTop="@drawable/ic_sms_vector"
                 android:drawablePadding="2dp"
                 android:text="@string/message"
                 android:textSize="7sp"
@@ -115,9 +115,9 @@
                 android:paddingTop="10dp"
                 android:paddingBottom="8dp"
                 android:background="@drawable/button_background"
-                android:drawableTop="@drawable/ic_videocam_vector"
+                android:drawableTop="@drawable/ic_person_rounded"
                 android:drawablePadding="2dp"
-                android:text="@string/video_call"
+                android:text="@string/more_info"
                 android:textSize="7sp"
                 app:layout_constraintLeft_toLeftOf="@+id/x50"
                 app:layout_constraintRight_toRightOf="@+id/x75"
@@ -136,9 +136,9 @@
                 android:paddingTop="10dp"
                 android:paddingBottom="8dp"
                 android:background="@drawable/button_background"
-                android:drawableTop="@drawable/ic_mail_vector"
+                android:drawableTop="@drawable/ic_ios_share"
                 android:drawablePadding="2dp"
-                android:text="@string/email"
+                android:text="@string/share"
                 android:textSize="7sp"
                 app:layout_constraintLeft_toLeftOf="@+id/x75"
                 app:layout_constraintRight_toRightOf="parent"
@@ -155,7 +155,7 @@
         layout="@layout/top_view"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        app:layout_behavior="com.goodwy.dialer.helpers.CallHistoryTopBehavior"/>
+        app:layout_behavior="com.leos.dialer.helpers.CallHistoryTopBehavior"/>
 
     <androidx.core.widget.NestedScrollView
         android:id="@+id/call_history_scrollview"
@@ -178,7 +178,7 @@
                 android:layout_width="match_parent"
                 android:layout_height="match_parent">
 
-                <com.goodwy.commons.views.MyRecyclerView
+                <com.leos.commons.views.MyRecyclerView
                     android:id="@+id/call_history_list"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
@@ -192,7 +192,7 @@
                     android:elevation="2dp"
                     android:scrollbarThumbVertical="@drawable/fastscroller_handle_vertical_gray"
                     android:scrollbars="vertical"
-                    app:layoutManager="com.goodwy.commons.views.MyLinearLayoutManager"
+                    app:layoutManager="com.leos.commons.views.MyLinearLayoutManager"
                     app:layout_goneMarginBottom="20dp"
                     app:layout_constrainedHeight="true"
                     app:layout_constraintBottom_toBottomOf="parent"
@@ -216,7 +216,7 @@
                 android:elevation="2dp"
                 android:gravity="center">
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/call_history_placeholder"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
@@ -264,7 +264,7 @@
                         android:orientation="horizontal"
                         android:visibility="gone">
 
-                        <com.goodwy.commons.views.MyTextView
+                        <com.leos.commons.views.MyTextView
                             android:id="@+id/call_history_number_type"
                             android:layout_width="wrap_content"
                             android:layout_height="wrap_content"
@@ -284,7 +284,7 @@
 
                     </LinearLayout>
 
-                    <com.goodwy.commons.views.MyTextView
+                    <com.leos.commons.views.MyTextView
                         android:id="@+id/call_history_number"
                         android:layout_width="match_parent"
                         android:layout_height="wrap_content"
@@ -301,52 +301,60 @@
             </LinearLayout>
 
             <LinearLayout
-                android:id="@+id/contact_messengers_actions_holder"
+                android:id="@+id/call_history_birthdays_container"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:layout_marginBottom="12dp"
                 android:layout_marginLeft="11dp"
                 android:layout_marginRight="11dp"
-                android:elevation="2dp"
+                android:layout_marginBottom="12dp"
                 android:background="@drawable/button_background"
+                android:elevation="2dp"
+                android:gravity="center"
+                android:visibility="gone"
                 android:layout_below="@+id/call_history_number_container"
                 android:orientation="vertical"
-                android:visibility="gone" />
+                tools:visibility="visible">
 
-            <LinearLayout
-                android:id="@+id/contact_emails_holder"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginBottom="12dp"
-                android:layout_marginLeft="11dp"
-                android:layout_marginRight="11dp"
-                android:elevation="2dp"
-                android:background="@drawable/button_background"
-                android:layout_below="@+id/contact_messengers_actions_holder"
-                android:orientation="vertical"
-                android:visibility="gone" />
+                <RelativeLayout
+                    android:id="@+id/call_history_birthdays_press"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:background="@drawable/ripple_all_corners"
+                    android:paddingTop="@dimen/contact_padding_top"
+                    android:paddingBottom="@dimen/contact_padding_top"
+                    android:paddingLeft="@dimen/activity_margin"
+                    android:paddingRight="@dimen/activity_margin">
 
-            <LinearLayout
-                android:id="@+id/contact_events_holder"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginBottom="12dp"
-                android:layout_marginLeft="11dp"
-                android:layout_marginRight="11dp"
-                android:elevation="2dp"
-                android:background="@drawable/button_background"
-                android:layout_below="@+id/contact_emails_holder"
-                android:orientation="vertical"
-                android:visibility="gone" />
+                    <com.leos.commons.views.MyTextView
+                        android:id="@+id/call_history_birthdays_title"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/birthday"
+                        android:textSize="@dimen/normal_text_size" />
+
+                    <com.leos.commons.views.MyTextView
+                        android:id="@+id/call_history_birthdays"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:layout_below="@+id/call_history_birthdays_title"
+                        android:lines="1"
+                        android:maxLines="1"
+                        android:singleLine="true"
+                        android:textSize="@dimen/bigger_text_size"
+                        tools:text="01.01.2000"  />
+
+                </RelativeLayout>
+
+            </LinearLayout>
 
             <androidx.appcompat.widget.AppCompatButton
                 android:id="@+id/blockButton"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:layout_below="@+id/contact_events_holder"
+                android:layout_below="@+id/call_history_birthdays_container"
                 android:layout_marginLeft="11dp"
                 android:layout_marginRight="11dp"
-                android:layout_marginBottom="56dp"
+                android:layout_marginBottom="@dimen/activity_margin"
                 android:background="@drawable/button_background"
                 android:gravity="left|center_vertical"
                 android:paddingLeft="23dp"
diff --git a/app/src/main/res/layout/activity_conference.xml b/app/src/main/res/layout/activity_conference.xml
index 936b486..b313a00 100755
--- a/app/src/main/res/layout/activity_conference.xml
+++ b/app/src/main/res/layout/activity_conference.xml
@@ -6,27 +6,34 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <com.google.android.material.appbar.MaterialToolbar
-        android:id="@+id/conference_toolbar"
+    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/conference_app_bar_layout"
         android:layout_width="match_parent"
-        android:layout_height="?attr/actionBarSize"
-        android:background="@color/color_primary"
-        app:title="@string/conference"
-        app:titleTextAppearance="@style/AppTheme.ActionBar.TitleTextStyle" />
+        android:layout_height="wrap_content">
+
+        <com.google.android.material.appbar.MaterialToolbar
+            android:id="@+id/conference_toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/color_primary"
+            app:title="@string/conference"
+            app:titleTextAppearance="@style/AppTheme.ActionBar.TitleTextStyle" />
+
+    </com.google.android.material.appbar.AppBarLayout>
 
     <FrameLayout
         android:id="@+id/conference_frame"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        android:layout_marginTop="?attr/actionBarSize">
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
 
-        <com.goodwy.commons.views.MyRecyclerView
-            android:id="@+id/conference_list"
+        <com.leos.commons.views.MyRecyclerView
+            android:id="@+id/conference_calls_list"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:clipToPadding="false"
             android:scrollbars="none"
-            app:layoutManager="com.goodwy.commons.views.MyLinearLayoutManager"
+            app:layoutManager="com.leos.commons.views.MyLinearLayoutManager"
             tools:listitem="@layout/item_conference_call" />
 
     </FrameLayout>
diff --git a/app/src/main/res/layout/activity_dialpad.xml b/app/src/main/res/layout/activity_dialpad.xml
index 41821da..bf0cbca 100755
--- a/app/src/main/res/layout/activity_dialpad.xml
+++ b/app/src/main/res/layout/activity_dialpad.xml
@@ -6,13 +6,20 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <com.google.android.material.appbar.MaterialToolbar
-        android:id="@+id/dialpad_toolbar"
+    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/dialpad_app_bar_layout"
         android:layout_width="match_parent"
-        android:layout_height="?attr/actionBarSize"
-        android:background="@color/color_primary"
-        app:menu="@menu/menu_dialpad"
-        app:titleTextAppearance="@style/AppTheme.ActionBar.TitleTextStyle" />
+        android:layout_height="wrap_content">
+
+        <com.google.android.material.appbar.MaterialToolbar
+            android:id="@+id/dialpad_toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/color_primary"
+            app:menu="@menu/menu_dialpad"
+            app:titleTextAppearance="@style/AppTheme.ActionBar.TitleTextStyle" />
+
+    </com.google.android.material.appbar.AppBarLayout>
 
     <androidx.constraintlayout.widget.ConstraintLayout
         android:id="@+id/dialpad_holder"
@@ -22,7 +29,7 @@
         android:layout_alignParentBottom="true"
         android:focusableInTouchMode="true">
 
-        <com.goodwy.commons.views.MyEditText
+        <com.leos.commons.views.MyEditText
             android:id="@+id/dialpad_input"
             android:layout_width="match_parent"
             android:layout_height="?attr/actionBarSize"
@@ -40,7 +47,7 @@
             app:layout_constraintStart_toStartOf="parent"
             tools:text="+1234567890"/>
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_add_number"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
@@ -59,7 +66,7 @@
             app:layout_constraintTop_toBottomOf="@+id/dialpad_input"
             tools:visibility="visible"/>
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_placeholder"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
@@ -77,14 +84,14 @@
             app:layout_constraintTop_toBottomOf="@+id/dialpad_add_number"
             tools:visibility="visible"/>
 
-        <com.goodwy.commons.views.MyRecyclerView
+        <com.leos.commons.views.MyRecyclerView
             android:id="@+id/dialpad_list"
             android:layout_width="match_parent"
             android:layout_height="0dp"
             android:clipToPadding="false"
             android:scrollbars="none"
             android:visibility="gone"
-            app:layoutManager="com.goodwy.commons.views.MyLinearLayoutManager"
+            app:layoutManager="com.leos.commons.views.MyLinearLayoutManager"
             app:layout_constraintBottom_toTopOf="@+id/dialpad_call_button_holder"
             app:layout_constraintTop_toBottomOf="@+id/dialpad_add_number"/>
 
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
index 7ae93f7..1b6cb3a 100755
--- a/app/src/main/res/layout/activity_main.xml
+++ b/app/src/main/res/layout/activity_main.xml
@@ -6,16 +6,10 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <com.goodwy.commons.views.MySearchMenu
-        android:id="@+id/main_menu"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content" />
-
     <com.google.android.material.appbar.AppBarLayout
         android:id="@+id/main_app_bar_layout"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:visibility="gone">
+        android:layout_height="wrap_content">
 
         <com.google.android.material.appbar.MaterialToolbar
             android:id="@+id/main_toolbar"
@@ -32,9 +26,7 @@
         android:id="@+id/main_holder"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        android:layout_marginTop="150dp"
-        android:fillViewport="true"
-        android:scrollbars="none">
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
 
         <RelativeLayout
             android:id="@+id/main_top_tabs_container"
@@ -87,14 +79,14 @@
 
         </RelativeLayout>
 
-        <com.goodwy.commons.views.MyViewPager
+        <com.leos.commons.views.MyViewPager
             android:id="@+id/view_pager"
             android:layout_width="match_parent"
             android:layout_height="0dp"
             app:layout_constraintBottom_toTopOf="@+id/main_tabs_holder"
             app:layout_constraintTop_toBottomOf="@+id/main_top_tabs_container" />
 
-        <com.goodwy.commons.views.MyFloatingActionButton
+        <com.leos.commons.views.MyFloatingActionButton
             android:id="@+id/main_dialpad_button"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/activity_manage_speed_dial.xml b/app/src/main/res/layout/activity_manage_speed_dial.xml
index 397f53e..d640cf9 100755
--- a/app/src/main/res/layout/activity_manage_speed_dial.xml
+++ b/app/src/main/res/layout/activity_manage_speed_dial.xml
@@ -6,30 +6,35 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <com.google.android.material.appbar.MaterialToolbar
-        android:id="@+id/manage_speed_dial_toolbar"
+    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/manage_speed_dial_app_bar_layout"
         android:layout_width="match_parent"
-        android:layout_height="?attr/actionBarSize"
-        android:background="@color/color_primary"
-        app:title="@string/manage_speed_dial"
-        app:titleTextAppearance="@style/AppTheme.ActionBar.TitleTextStyle" />
+        android:layout_height="wrap_content">
 
-    <androidx.core.widget.NestedScrollView
+        <com.google.android.material.appbar.MaterialToolbar
+            android:id="@+id/manage_speed_dial_toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/color_primary"
+            app:title="@string/manage_speed_dial"
+            app:titleTextAppearance="@style/AppTheme.ActionBar.TitleTextStyle" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <ScrollView
         android:id="@+id/manage_speed_dial_scrollview"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_marginTop="?attr/actionBarSize"
-        android:fillViewport="true"
-        android:scrollbars="none">
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
 
         <LinearLayout
-            android:id="@+id/manage_speed_dial_holder"
+            android:id="@+id/manage_speed_dial_wrapper"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:orientation="vertical"
             tools:ignore="HardcodedText">
 
-            <com.goodwy.commons.views.MyTextView
+            <com.leos.commons.views.MyTextView
                 android:id="@+id/manage_speed_dial_label"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
@@ -41,7 +46,7 @@
                 android:textSize="@dimen/normal_text_size"
                 android:textStyle="italic" />
 
-            <com.goodwy.commons.views.MyRecyclerView
+            <com.leos.commons.views.MyRecyclerView
                 android:id="@+id/speed_dial_list"
                 android:layout_width="match_parent"
                 android:layout_height="match_parent"
@@ -49,8 +54,8 @@
                 android:paddingEnd="@dimen/normal_margin"
                 android:clipToPadding="false"
                 android:scrollbars="none"
-                app:layoutManager="com.goodwy.commons.views.MyLinearLayoutManager" />
+                app:layoutManager="com.leos.commons.views.MyLinearLayoutManager" />
 
         </LinearLayout>
-    </androidx.core.widget.NestedScrollView>
+    </ScrollView>
 </androidx.coordinatorlayout.widget.CoordinatorLayout>
diff --git a/app/src/main/res/layout/activity_settings.xml b/app/src/main/res/layout/activity_settings.xml
index a402b9f..ffa6db1 100755
--- a/app/src/main/res/layout/activity_settings.xml
+++ b/app/src/main/res/layout/activity_settings.xml
@@ -6,21 +6,29 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <com.google.android.material.appbar.MaterialToolbar
-        android:id="@+id/settings_toolbar"
+    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/settings_app_bar_layout"
         android:layout_width="match_parent"
-        android:layout_height="?attr/actionBarSize"
-        android:background="@color/color_primary"
-        app:title="@string/settings"
-        app:titleTextAppearance="@style/AppTheme.ActionBar.TitleTextStyle" />
+        android:layout_height="wrap_content">
+
+        <com.google.android.material.appbar.MaterialToolbar
+            android:id="@+id/settings_toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/color_primary"
+            app:layout_scrollFlags="scroll|enterAlways"
+            app:title="@string/settings"
+            app:titleTextAppearance="@style/AppTheme.ActionBar.TitleTextStyle" />
+
+    </com.google.android.material.appbar.AppBarLayout>
 
     <androidx.core.widget.NestedScrollView
-        android:id="@+id/settings_nested_scrollview"
+        android:id="@+id/settings_scrollview"
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_marginTop="?attr/actionBarSize"
+        android:layout_height="wrap_content"
         android:fillViewport="true"
-        android:scrollbars="none">
+        android:scrollbars="none"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
 
         <LinearLayout
             android:id="@+id/settings_holder"
@@ -29,223 +37,62 @@
             android:orientation="vertical">
 
             <RelativeLayout
-                android:id="@+id/settings_purchase_thank_you_holder"
+                android:id="@+id/settings_appearance_divider"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:layout_marginTop="@dimen/medium_margin"
                 android:background="?attr/selectableItemBackground"
-                android:paddingEnd="@dimen/normal_margin">
-
-                <ImageView
-                    android:id="@+id/purchase_logo"
-                    android:layout_width="@dimen/app_logo"
-                    android:layout_height="@dimen/app_logo"
-                    android:layout_marginLeft="@dimen/section_margin"
-                    android:layout_marginTop="@dimen/normal_margin"
-                    android:layout_marginBottom="@dimen/normal_margin"
-                    android:background="@drawable/button_white_bg"
-                    android:elevation="8dp"
-                    android:padding="10dp"
-                    android:src="@drawable/ic_plus_support"
-                    android:tint="@color/color_primary"
-                    tools:ignore="UseAppTint" />
-
-                <RelativeLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="@dimen/section_margin"
-                    android:layout_toRightOf="@+id/purchase_logo"
-                    android:layout_centerVertical="true">
-
-                    <com.goodwy.commons.views.MyTextView
-                        android:id="@+id/settings_purchase_thank_you"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/action_support_project"/>
-
-                    <com.goodwy.commons.views.MyTextView
-                        android:id="@+id/about_app_version"
-                        android:layout_width="match_parent"
-                        android:layout_height="wrap_content"
-                        android:layout_below="@+id/settings_purchase_thank_you"
-                        android:layout_marginTop="@dimen/tiny_margin"
-                        android:alpha="0.6"
-                        android:text="@string/pref_pay_summary"
-                        android:textSize="12sp" />
-
-                    <androidx.appcompat.widget.AppCompatButton
-                        android:id="@+id/moreButton"
-                        style="@style/AppTheme.Button.Chip"
-                        android:layout_width="wrap_content"
-                        android:layout_height="20dp"
-                        android:layout_below="@+id/about_app_version"
-                        android:layout_marginTop="@dimen/medium_margin"
-                        android:alpha="0.4"
-                        android:background="@drawable/button_gray_bg"
-                        android:saveEnabled="false"
-                        android:text="@string/learn_more"
-                        android:textSize="10sp"
-                        android:textAllCaps="true"
-                        android:textColor="@color/default_text_color" />
-                    <!--style="@style/AppTheme.Button.Chip"-->
-
-                </RelativeLayout>
-
-            </RelativeLayout>
-
-            <LinearLayout
-                android:id="@+id/settings_color_customization_holder"
-                style="@style/SettingsSectionHolder"
-                android:orientation="vertical">
+                android:paddingStart="@dimen/activity_margin"
+                android:paddingTop="@dimen/medium_margin"
+                android:paddingEnd="@dimen/normal_margin"
+                android:paddingBottom="@dimen/medium_margin">
 
                 <TextView
                     android:id="@+id/settings_appearance_label"
                     style="@style/SettingsTextLabelStyle"
-                    android:layout_marginTop="@dimen/normal_margin"
-                    android:layout_marginStart="@dimen/normal_margin"
-                    android:layout_marginBottom="@dimen/small_margin"
                     android:text="@string/pref_category_appearance"
-                    android:textStyle="bold"
                     tools:textColor="@color/primary" />
 
-                <RelativeLayout
-                    android:id="@+id/settings_customize_colors_holder"
-                    style="@style/SettingsHolderStyle">
-
-                    <com.goodwy.commons.views.MyTextView
-                        android:id="@+id/settings_customize_colors_label"
-                        style="@style/SettingsTextLabelStyle"
-                        android:layout_marginEnd="68dp"
-                        android:text="@string/customize_colors" />
-
-                    <ImageView
-                        android:id="@+id/settings_customize_colors_chevron"
-                        style="@style/SettingsChevronStyle"
-                        android:layout_alignParentEnd="true"
-                        android:layout_centerVertical="true"
-                        android:layout_marginEnd="@dimen/smaller_margin"
-                        android:contentDescription="@string/customization_theme_summary" />
-
-                </RelativeLayout>
-
-                <RelativeLayout
-                    android:id="@+id/settings_open_dialpad_at_launch_holder"
-                    style="@style/SettingsHolderSwitchStyle">
-
-                    <com.goodwy.commons.views.MySwitchCompat
-                        android:id="@+id/settings_open_dialpad_at_launch"
-                        style="@style/SettingsSwitchStyle"
-                        android:text="@string/open_dialpad_by_default"
-                        app:switchPadding="@dimen/bigger_margin" />
-
-                </RelativeLayout>
-
-                <RelativeLayout
-                    android:id="@+id/settings_material_design_3_holder"
-                    style="@style/SettingsHolderSwitchStyle">
-
-                    <com.goodwy.commons.views.MySwitchCompat
-                        android:id="@+id/settings_material_design_3"
-                        style="@style/SettingsSwitchStyle"
-                        android:text="@string/material_design_3"
-                        app:switchPadding="@dimen/bigger_margin" />
-
-                </RelativeLayout>
-
-                <RelativeLayout
-                    android:id="@+id/settings_icon_holder"
-                    style="@style/SettingsHolderStyle">
-
-                    <com.goodwy.commons.views.MyTextView
-                        android:id="@+id/settings_icon_label"
-                        style="@style/SettingsTextLabelStyle"
-                        android:layout_alignParentStart="true"
-                        android:layout_centerVertical="true"
-                        android:layout_toStartOf="@+id/settings_icon"
-                        android:text="@string/settings_icon" />
-
-                    <ImageView
-                        android:id="@+id/settings_icon"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_alignParentEnd="true"
-                        android:layout_marginEnd="@dimen/settings_margin"
-                        android:clickable="false"
-                        android:contentDescription="@string/settings_icon"
-                        android:src="@drawable/ic_settings_hexagon" />
-
-                </RelativeLayout>
-
-                <RelativeLayout
-                    android:id="@+id/settings_colored_contacts_holder"
-                    style="@style/SettingsHolderSwitchStyle">
-
-                    <com.goodwy.commons.views.MySwitchCompat
-                        android:id="@+id/settings_colored_contacts"
-                        style="@style/SettingsSwitchStyle"
-                        android:text="@string/colored_contacts"
-                        app:switchPadding="@dimen/bigger_margin" />
-
-                </RelativeLayout>
-
-                <RelativeLayout
-                    android:id="@+id/settings_color_sim_card_icons_holder"
-                    style="@style/SettingsHolderSwitchStyle">
-
-                    <com.goodwy.commons.views.MySwitchCompat
-                        android:id="@+id/settings_color_sim_card_icons"
-                        style="@style/SettingsSwitchStyle"
-                        android:text="@string/color_sim_card_icons"
-                        app:switchPadding="@dimen/bigger_margin" />
-
-                </RelativeLayout>
-            </LinearLayout>
+            </RelativeLayout>
 
-        <LinearLayout
-            android:id="@+id/settings_tabs_holder"
-            style="@style/SettingsSectionHolder"
-            android:orientation="vertical">
 
-            <TextView
-                android:id="@+id/settings_tabs_label"
-                style="@style/SettingsTextLabelStyle"
-                android:layout_marginTop="@dimen/normal_margin"
-                android:layout_marginStart="@dimen/normal_margin"
-                android:layout_marginBottom="@dimen/small_margin"
-                android:text="@string/tabs"
-                android:textStyle="bold"
-                tools:textColor="@color/primary" />
 
             <RelativeLayout
                 android:id="@+id/settings_default_tab_holder"
-                style="@style/SettingsHolderStyle">
+                style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_default_tab_label"
                     style="@style/SettingsTextLabelStyle"
                     android:layout_alignParentStart="true"
-                    android:layout_centerVertical="true"
                     android:layout_toStartOf="@+id/settings_default_tab"
                     android:text="@string/default_tab" />
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_default_tab"
                     style="@style/SettingsTextValueStyle"
                     android:layout_alignParentEnd="true"
                     android:layout_marginEnd="@dimen/settings_margin"
                     tools:text="Last used one" />
 
+                <com.leos.commons.views.MyTextView
+                    android:id="@+id/settings_default_summary"
+                    style="@style/SettingsTextSummaryStyle"
+                    android:layout_below="@+id/settings_default_tab_label"
+                    android:layout_marginTop="@dimen/settings_summary_top_margin"
+                    android:layout_marginEnd="80dp"
+                    android:text="@string/default_tab_to_open" />
+
             </RelativeLayout>
 
             <RelativeLayout
                 android:id="@+id/settings_manage_shown_tabs_holder"
-                style="@style/SettingsHolderStyle">
+                style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_manage_shown_tabs_label"
                     style="@style/SettingsTextLabelStyle"
                     android:layout_centerVertical="true"
-                    android:layout_marginEnd="68dp"
                     android:text="@string/manage_shown_tabs" />
 
                 <ImageView
@@ -253,42 +100,27 @@
                     style="@style/SettingsChevronStyle"
                     android:layout_alignParentEnd="true"
                     android:layout_centerVertical="true"
-                    android:layout_marginEnd="@dimen/smaller_margin"
-                    android:contentDescription="@string/manage_shown_tabs"/>
+                    android:layout_marginEnd="@dimen/settings_margin"
+                    android:contentDescription="@string/manage_shown_tabs" />
 
             </RelativeLayout>
 
             <RelativeLayout
                 android:id="@+id/settings_bottom_navigation_bar_holder"
-                style="@style/SettingsHolderSwitchStyle"
-                android:visibility="gone">
+                style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_bottom_navigation_bar"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/bottom_navigation_bar"
-                    app:switchPadding="@dimen/bigger_margin" />
-
-            </RelativeLayout>
-
-            <RelativeLayout
-                android:id="@+id/settings_navigation_bar_style_holder"
-                style="@style/SettingsHolderStyle">
+                    app:switchPadding="@dimen/activity_margin" />
 
-                <com.goodwy.commons.views.MyTextView
-                    android:id="@+id/settings_navigation_bar_style_label"
-                    style="@style/SettingsTextLabelStyle"
-                    android:layout_alignParentStart="true"
-                    android:layout_centerVertical="true"
-                    android:layout_toStartOf="@+id/settings_navigation_bar_style"
-                    android:text="@string/tab_navigation" />
-
-                <com.goodwy.commons.views.MyTextView
-                    android:id="@+id/settings_navigation_bar_style"
-                    style="@style/SettingsTextValueStyle"
-                    android:layout_alignParentEnd="true"
-                    android:layout_marginEnd="@dimen/settings_margin"
-                    tools:text="@string/top" />
+                <com.leos.commons.views.MyTextView
+                    android:id="@+id/settings_bottom_navigation_bar_summary"
+                    style="@style/SettingsTextSummaryStyle"
+                    android:layout_below="@+id/settings_bottom_navigation_bar"
+                    android:layout_marginEnd="80dp"
+                    android:text="@string/bottom_navigation_bar_summary" />
 
             </RelativeLayout>
 
@@ -296,19 +128,26 @@
                 android:id="@+id/settings_use_icon_tabs_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_use_icon_tabs"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/use_icon_tabs"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
+
+                <com.leos.commons.views.MyTextView
+                    android:id="@+id/settings_use_icon_tabs_summary"
+                    style="@style/SettingsTextSummaryStyle"
+                    android:layout_below="@+id/settings_use_icon_tabs"
+                    android:layout_marginEnd="80dp"
+                    android:text="@string/use_icon_tabs_summary"/>
 
             </RelativeLayout>
 
             <RelativeLayout
                 android:id="@+id/settings_screen_slide_animation_holder"
-                style="@style/SettingsHolderStyle">
+                style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_screen_slide_animation_label"
                     style="@style/SettingsTextLabelStyle"
                     android:layout_alignParentStart="true"
@@ -316,7 +155,7 @@
                     android:layout_toStartOf="@+id/settings_screen_slide_animation"
                     android:text="@string/screen_slide_animation" />
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_screen_slide_animation"
                     style="@style/SettingsTextValueStyle"
                     android:layout_alignParentEnd="true"
@@ -326,42 +165,97 @@
             </RelativeLayout>
 
             <RelativeLayout
-                android:id="@+id/settings_open_search_holder"
+                android:id="@+id/settings_open_dialpad_at_launch_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
-                    android:id="@+id/settings_open_search"
+                <com.leos.commons.views.MySwitchCompat
+                    android:id="@+id/settings_open_dialpad_at_launch"
                     style="@style/SettingsSwitchStyle"
-                    android:text="@string/open_search_when_open_contacts"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    android:text="@string/open_dialpad_by_default"
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
-        </LinearLayout>
 
-        <LinearLayout
-            android:id="@+id/settings_general_holder"
-            style="@style/SettingsSectionHolder"
-            android:orientation="vertical">
+            <RelativeLayout
+                android:id="@+id/settings_material_design_3_holder"
+                style="@style/SettingsHolderSwitchStyle">
+
+                <com.leos.commons.views.MySwitchCompat
+                    android:id="@+id/settings_material_design_3"
+                    style="@style/SettingsSwitchStyle"
+                    android:text="@string/material_design_3"
+                    app:switchPadding="@dimen/activity_margin" />
+
+                <com.leos.commons.views.MyTextView
+                    android:id="@+id/settings_material_design_3_summary"
+                    style="@style/SettingsTextSummaryStyle"
+                    android:layout_below="@+id/settings_material_design_3"
+                    android:layout_marginEnd="80dp"
+                    android:text="@string/material_design_3_summary" />
 
-            <TextView
-                android:id="@+id/settings_general_label"
-                style="@style/SettingsTextLabelStyle"
-                android:layout_marginTop="@dimen/normal_margin"
-                android:layout_marginStart="@dimen/normal_margin"
-                android:layout_marginBottom="@dimen/small_margin"
-                android:text="@string/general"
-                android:textStyle="bold"
-                tools:textColor="@color/primary" />
+            </RelativeLayout>
+
+            <RelativeLayout
+                android:id="@+id/settings_icon_holder"
+                style="@style/SettingsHolderSwitchStyle">
+
+                <com.leos.commons.views.MyTextView
+                    android:id="@+id/settings_icon_label"
+                    style="@style/SettingsTextLabelStyle"
+                    android:layout_centerVertical="true"
+                    android:text="@string/settings_icon" />
+
+                <ImageView
+                    android:id="@+id/settings_icon"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_alignParentEnd="true"
+                    android:layout_marginEnd="@dimen/settings_icon_end_margin"
+                    android:background="@null"
+                    android:clickable="false"
+                    android:contentDescription="@string/manage_shown_tabs"
+                    android:src="@drawable/ic_settings_hexagon" />
+
+            </RelativeLayout>
+
+            <ImageView
+                android:id="@+id/divider_general"
+                android:layout_width="match_parent"
+                android:layout_height="1px"
+                android:layout_marginTop="10dp"
+                android:layout_marginBottom="2dp"
+                android:layout_marginStart="24dp"
+                android:layout_marginEnd="24dp"
+                android:alpha="0.2"
+                android:background="@drawable/divider_settings" />
+
+            <RelativeLayout
+                android:id="@+id/settings_general_divider"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/medium_margin"
+                android:background="?attr/selectableItemBackground"
+                android:paddingStart="@dimen/activity_margin"
+                android:paddingTop="@dimen/medium_margin"
+                android:paddingEnd="@dimen/normal_margin"
+                android:paddingBottom="@dimen/medium_margin">
+
+                <TextView
+                    android:id="@+id/settings_general_label"
+                    style="@style/SettingsTextLabelStyle"
+                    android:text="@string/general"
+                    tools:textColor="@color/primary" />
+
+            </RelativeLayout>
 
             <RelativeLayout
                 android:id="@+id/settings_manage_blocked_numbers_holder"
-                style="@style/SettingsHolderStyle">
+                style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_manage_blocked_numbers"
                     style="@style/SettingsTextLabelStyle"
                     android:layout_centerVertical="true"
-                    android:layout_marginEnd="68dp"
                     android:text="@string/manage_blocked_numbers" />
 
                 <ImageView
@@ -369,20 +263,19 @@
                     style="@style/SettingsChevronStyle"
                     android:layout_alignParentEnd="true"
                     android:layout_centerVertical="true"
-                    android:layout_marginEnd="@dimen/smaller_margin"
-                    android:contentDescription="@string/manage_blocked_numbers"/>
+                    android:layout_marginEnd="@dimen/settings_margin"
+                    android:contentDescription="@string/manage_blocked_numbers" />
 
             </RelativeLayout>
 
             <RelativeLayout
                 android:id="@+id/settings_manage_speed_dial_holder"
-                style="@style/SettingsHolderStyle">
+                style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_manage_speed_dial"
                     style="@style/SettingsTextLabelStyle"
                     android:layout_centerVertical="true"
-                    android:layout_marginEnd="68dp"
                     android:text="@string/manage_speed_dial" />
 
                 <ImageView
@@ -390,7 +283,7 @@
                     style="@style/SettingsChevronStyle"
                     android:layout_alignParentEnd="true"
                     android:layout_centerVertical="true"
-                    android:layout_marginEnd="@dimen/smaller_margin"
+                    android:layout_marginEnd="@dimen/settings_margin"
                     android:contentDescription="@string/manage_speed_dial"/>
 
             </RelativeLayout>
@@ -399,32 +292,19 @@
                 android:id="@+id/settings_hide_dialpad_letters_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_hide_dialpad_letters"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/hide_dialpad_letters_g"
-                    app:switchPadding="@dimen/bigger_margin" />
-
-            </RelativeLayout>
-
-            <RelativeLayout
-                android:id="@+id/settings_hide_dialpad_numbers_holder"
-                style="@style/SettingsHolderSwitchStyle"
-                android:visibility="gone">
-
-                <com.goodwy.commons.views.MySwitchCompat
-                    android:id="@+id/settings_hide_dialpad_numbers"
-                    style="@style/SettingsSwitchStyle"
-                    android:text="@string/hide_dialpad_numbers"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
             <RelativeLayout
                 android:id="@+id/settings_font_size_holder"
-                style="@style/SettingsHolderStyle">
+                style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_font_size_label"
                     style="@style/SettingsTextLabelStyle"
                     android:layout_alignParentStart="true"
@@ -432,7 +312,7 @@
                     android:layout_toStartOf="@+id/settings_font_size"
                     android:text="@string/font_size" />
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_font_size"
                     style="@style/SettingsTextValueStyle"
                     android:layout_alignParentEnd="true"
@@ -443,13 +323,12 @@
 
             <RelativeLayout
                 android:id="@+id/settings_change_date_time_format_holder"
-                style="@style/SettingsHolderStyle">
+                style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_change_date_time_format"
                     style="@style/SettingsTextLabelStyle"
                     android:layout_centerVertical="true"
-                    android:layout_marginEnd="68dp"
                     android:text="@string/change_date_and_time_format" />
 
                 <ImageView
@@ -457,7 +336,7 @@
                     style="@style/SettingsChevronStyle"
                     android:layout_alignParentEnd="true"
                     android:layout_centerVertical="true"
-                    android:layout_marginEnd="@dimen/smaller_margin"
+                    android:layout_marginEnd="@dimen/settings_margin"
                     android:contentDescription="@string/change_date_and_time_format"/>
 
             </RelativeLayout>
@@ -466,19 +345,19 @@
                 android:id="@+id/settings_use_english_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_use_english"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/use_english_language"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
             <RelativeLayout
                 android:id="@+id/settings_language_holder"
-                style="@style/SettingsHolderStyle">
+                style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_language_label"
                     style="@style/SettingsTextLabelStyle"
                     android:layout_alignParentStart="true"
@@ -486,7 +365,7 @@
                     android:layout_toStartOf="@+id/settings_language"
                     android:text="@string/language" />
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_language"
                     style="@style/SettingsTextValueStyle"
                     android:layout_alignParentEnd="true"
@@ -495,54 +374,45 @@
 
             </RelativeLayout>
 
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/settings_calls_holder"
-            style="@style/SettingsSectionHolder"
-            android:orientation="vertical">
-
-            <TextView
-                android:id="@+id/settings_calls_label"
-                style="@style/SettingsTextLabelStyle"
-                android:layout_marginTop="@dimen/normal_margin"
-                android:layout_marginStart="@dimen/normal_margin"
-                android:layout_marginBottom="@dimen/small_margin"
-                android:text="@string/calls"
-                android:textStyle="bold"
-                tools:textColor="@color/primary" />
+            <ImageView
+                android:id="@+id/divider_calls"
+                android:layout_width="match_parent"
+                android:layout_height="1px"
+                android:layout_marginTop="10dp"
+                android:layout_marginBottom="2dp"
+                android:layout_marginStart="24dp"
+                android:layout_marginEnd="24dp"
+                android:alpha="0.2"
+                android:background="@drawable/divider_settings" />
 
             <RelativeLayout
-                android:id="@+id/settings_background_call_screen_holder"
-                style="@style/SettingsHolderStyle">
+                android:id="@+id/settings_calls_label_divider"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/medium_margin"
+                android:background="?attr/selectableItemBackground"
+                android:paddingStart="@dimen/activity_margin"
+                android:paddingTop="@dimen/medium_margin"
+                android:paddingEnd="@dimen/normal_margin"
+                android:paddingBottom="@dimen/medium_margin">
 
-                <com.goodwy.commons.views.MyTextView
-                    android:id="@+id/settings_background_call_screen_label"
+                <TextView
+                    android:id="@+id/settings_calls_label"
                     style="@style/SettingsTextLabelStyle"
-                    android:layout_alignParentStart="true"
-                    android:layout_centerVertical="true"
-                    android:layout_toStartOf="@+id/settings_background_call_screen"
-                    android:text="@string/call_screen_background" />
-
-                <com.goodwy.commons.views.MyTextView
-                    android:id="@+id/settings_background_call_screen"
-                    style="@style/SettingsTextValueStyle"
-                    android:layout_alignParentEnd="true"
-                    android:layout_marginEnd="@dimen/settings_margin"
-                    tools:text="@string/blurry_contact_photo" />
+                    android:text="@string/calls"
+                    tools:textColor="@color/primary" />
 
             </RelativeLayout>
 
             <RelativeLayout
                 android:id="@+id/settings_transparent_call_screen_holder"
-                style="@style/SettingsHolderSwitchStyle"
-                android:visibility="gone">
+                style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_transparent_call_screen"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/transparent_call_screen_g"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
@@ -550,11 +420,11 @@
                 android:id="@+id/settings_always_show_fullscreen_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_always_show_fullscreen"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/show_incoming_calls_full_screen"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
@@ -562,11 +432,11 @@
                 android:id="@+id/settings_disable_swipe_to_answer_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_disable_swipe_to_answer"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/disable_swipe_to_answer"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
@@ -574,13 +444,13 @@
                 android:id="@+id/settings_missed_call_notifications_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_missed_call_notifications"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/missed_call_notifications_g"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
-                <com.goodwy.commons.views.MyTextView
+                <com.leos.commons.views.MyTextView
                     android:id="@+id/settings_missed_call_notifications_summary"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
@@ -590,10 +460,10 @@
                     android:background="@drawable/button_background_rounded"
                     android:backgroundTint="@color/red_call"
                     android:clickable="false"
-                    android:paddingTop="1dp"
-                    android:paddingBottom="1dp"
-                    android:paddingStart="@dimen/medium_margin"
-                    android:paddingEnd="@dimen/medium_margin"
+                    android:paddingTop="@dimen/tiny_margin"
+                    android:paddingBottom="@dimen/tiny_margin"
+                    android:paddingStart="@dimen/settings_margin"
+                    android:paddingEnd="@dimen/settings_margin"
                     android:text="@string/beta"
                     android:textSize="10sp"
                     android:textAllCaps="true" />
@@ -604,11 +474,11 @@
                 android:id="@+id/settings_group_subsequent_calls_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_group_subsequent_calls"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/group_subsequent_calls"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
@@ -616,76 +486,92 @@
                 android:id="@+id/settings_show_call_confirmation_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_show_call_confirmation"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/show_call_confirmation_dialog"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
+
             <RelativeLayout
                 android:id="@+id/settings_disable_proximity_sensor_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_disable_proximity_sensor"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/disable_proximity_sensor"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
+
             <RelativeLayout
                 android:id="@+id/settings_dialpad_vibration_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_dialpad_vibration"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/dialpad_vibrations"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
+
             <RelativeLayout
                 android:id="@+id/settings_dialpad_beeps_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_dialpad_beeps"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/dialpad_beeps"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
-        </LinearLayout>
+            <ImageView
+                android:id="@+id/divider_list_view"
+                android:layout_width="match_parent"
+                android:layout_height="1px"
+                android:layout_marginTop="10dp"
+                android:layout_marginBottom="2dp"
+                android:layout_marginStart="24dp"
+                android:layout_marginEnd="24dp"
+                android:alpha="0.2"
+                android:background="@drawable/divider_settings" />
 
-        <LinearLayout
-            android:id="@+id/settings_list_view_holder"
-            style="@style/SettingsSectionHolder"
-            android:orientation="vertical">
+            <RelativeLayout
+                android:id="@+id/settings_list_view_label_divider"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/medium_margin"
+                android:background="?attr/selectableItemBackground"
+                android:paddingStart="@dimen/activity_margin"
+                android:paddingTop="@dimen/medium_margin"
+                android:paddingEnd="@dimen/normal_margin"
+                android:paddingBottom="@dimen/medium_margin">
 
-            <TextView
-                android:id="@+id/settings_list_view_label"
-                style="@style/SettingsTextLabelStyle"
-                android:layout_marginTop="@dimen/normal_margin"
-                android:layout_marginStart="@dimen/normal_margin"
-                android:layout_marginBottom="@dimen/small_margin"
-                android:text="@string/list_view"
-                android:textStyle="bold"
-                tools:textColor="@color/primary" />
+                <TextView
+                    android:id="@+id/settings_list_view_label"
+                    style="@style/SettingsTextLabelStyle"
+                    android:text="@string/list_view"
+                    tools:textColor="@color/primary" />
+
+            </RelativeLayout>
 
             <RelativeLayout
                 android:id="@+id/settings_show_dividers_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_show_dividers"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/show_dividers"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
@@ -693,23 +579,23 @@
                 android:id="@+id/settings_show_contact_thumbnails_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_show_contact_thumbnails"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/show_contact_thumbnails_g"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
             <RelativeLayout
-                android:id="@+id/settings_show_phone_numbers_holder"
+                android:id="@+id/settings_colored_contacts_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
-                    android:id="@+id/settings_show_phone_numbers"
+                <com.leos.commons.views.MySwitchCompat
+                    android:id="@+id/settings_colored_contacts"
                     style="@style/SettingsSwitchStyle"
-                    android:text="@string/show_phone_numbers_g"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    android:text="@string/colored_contacts"
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
@@ -717,115 +603,66 @@
                 android:id="@+id/settings_start_name_with_surname_holder"
                 style="@style/SettingsHolderSwitchStyle">
 
-                <com.goodwy.commons.views.MySwitchCompat
+                <com.leos.commons.views.MySwitchCompat
                     android:id="@+id/settings_start_name_with_surname"
                     style="@style/SettingsSwitchStyle"
                     android:text="@string/start_name_with_surname"
-                    app:switchPadding="@dimen/bigger_margin" />
+                    app:switchPadding="@dimen/activity_margin" />
 
             </RelativeLayout>
 
-            <RelativeLayout
-                android:id="@+id/settings_relative_date_holder"
-                style="@style/SettingsHolderSwitchStyle">
+            <ImageView
+                android:id="@+id/divider_other"
+                android:layout_width="match_parent"
+                android:layout_height="1px"
+                android:layout_marginTop="10dp"
+                android:layout_marginBottom="2dp"
+                android:layout_marginStart="24dp"
+                android:layout_marginEnd="24dp"
+                android:alpha="0.2"
+                android:background="@drawable/divider_settings" />
 
-                <com.goodwy.commons.views.MySwitchCompat
-                    android:id="@+id/settings_relative_date"
-                    style="@style/SettingsSwitchStyle"
-                    android:text="@string/relative_date"
-                    app:switchPadding="@dimen/bigger_margin" />
+            <RelativeLayout
+                android:id="@+id/settings_other_divider"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/medium_margin"
+                android:background="?attr/selectableItemBackground"
+                android:paddingStart="@dimen/activity_margin"
+                android:paddingTop="@dimen/medium_margin"
+                android:paddingEnd="@dimen/normal_margin"
+                android:paddingBottom="@dimen/medium_margin">
 
-                <com.goodwy.commons.views.MyTextView
-                    android:id="@+id/settings_relative_date_summary"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_below="@+id/settings_relative_date"
-                    android:layout_marginStart="6dp"
-                    android:alpha="0.8"
-                    android:background="@drawable/button_background_rounded"
-                    android:backgroundTint="@color/red_call"
-                    android:clickable="false"
-                    android:paddingTop="1dp"
-                    android:paddingBottom="1dp"
-                    android:paddingStart="@dimen/medium_margin"
-                    android:paddingEnd="@dimen/medium_margin"
-                    android:text="@string/beta"
-                    android:textSize="10sp"
-                    android:textAllCaps="true" />
+                <TextView
+                    android:id="@+id/settings_other_label"
+                    style="@style/SettingsTextLabelStyle"
+                    android:text=""
+                    tools:textColor="@color/primary" />
 
             </RelativeLayout>
 
-        </LinearLayout>
-
-            <LinearLayout
-                android:id="@+id/settings_other_holder"
-                style="@style/SettingsSectionHolder"
-                android:orientation="vertical"
-                android:layout_marginBottom="@dimen/secondary_fab_bottom_margin">
+            <RelativeLayout
+                android:id="@+id/settings_tip_jar_holder"
+                style="@style/SettingsHolderSwitchStyle"
+                android:visibility="gone"
+                tools:visibility="visible">
 
-                <TextView
-                    android:id="@+id/settings_other_label"
+                <com.leos.commons.views.MyTextView
+                    android:id="@+id/settings_tip_jar"
                     style="@style/SettingsTextLabelStyle"
-                    android:layout_marginTop="@dimen/normal_margin"
-                    android:layout_marginStart="@dimen/normal_margin"
-                    android:layout_marginBottom="@dimen/small_margin"
-                    android:text="@string/other"
-                    android:textStyle="bold"
-                    tools:textColor="@color/primary" />
+                    android:layout_centerVertical="true"
+                    android:text="@string/tip_jar" />
+
+                <ImageView
+                    android:id="@+id/settings_tip_jar_chevron"
+                    style="@style/SettingsChevronStyle"
+                    android:layout_alignParentEnd="true"
+                    android:layout_centerVertical="true"
+                    android:layout_marginEnd="@dimen/settings_margin"
+                    android:contentDescription="@string/tip_jar"/>
+
+            </RelativeLayout>
 
-                <RelativeLayout
-                    android:id="@+id/settings_tip_jar_holder"
-                    style="@style/SettingsHolderStyle"
-                    android:visibility="gone"
-                    tools:visibility="visible">
-
-                    <com.goodwy.commons.views.MyTextView
-                        android:id="@+id/settings_tip_jar"
-                        style="@style/SettingsTextLabelStyle"
-                        android:layout_centerVertical="true"
-                        android:text="@string/tip_jar" />
-
-                    <ImageView
-                        android:id="@+id/settings_tip_jar_chevron"
-                        style="@style/SettingsChevronStyle"
-                        android:layout_alignParentEnd="true"
-                        android:layout_centerVertical="true"
-                        android:layout_marginEnd="@dimen/smaller_margin"
-                        android:contentDescription="@string/tip_jar"/>
-
-                </RelativeLayout>
-
-                <RelativeLayout
-                    android:id="@+id/settings_about_holder"
-                    style="@style/SettingsHolderStyle">
-
-                    <com.goodwy.commons.views.MyTextView
-                        android:id="@+id/settings_about_label"
-                        style="@style/SettingsTextLabelStyle"
-                        android:layout_centerVertical="true"
-                        android:layout_alignParentStart="true"
-                        android:layout_toStartOf="@+id/settings_about_version"
-                        android:layout_marginEnd="@dimen/larger_margin"
-                        android:text="@string/about" />
-
-                    <com.goodwy.commons.views.MyTextView
-                        android:id="@+id/settings_about_version"
-                        style="@style/SettingsTextValueStyle"
-                        android:layout_toStartOf="@+id/settings_about_chevron"
-                        android:layout_centerVertical="true"
-                        android:text="Version: 1.0.0" />
-
-                    <ImageView
-                        android:id="@+id/settings_about_chevron"
-                        style="@style/SettingsChevronStyle"
-                        android:layout_alignParentEnd="true"
-                        android:layout_centerVertical="true"
-                        android:layout_marginEnd="@dimen/smaller_margin"
-                        android:contentDescription="@string/about"/>
-
-                </RelativeLayout>
-
-            </LinearLayout>
         </LinearLayout>
     </androidx.core.widget.NestedScrollView>
 </androidx.coordinatorlayout.widget.CoordinatorLayout>
diff --git a/app/src/main/res/layout/dialog_call_history.xml b/app/src/main/res/layout/dialog_call_history.xml
index 1dfaee4..4bd0e8b 100755
--- a/app/src/main/res/layout/dialog_call_history.xml
+++ b/app/src/main/res/layout/dialog_call_history.xml
@@ -119,7 +119,7 @@
             app:layout_constraintTop_toBottomOf="@+id/item_history_name"
             tools:ignore="AllCaps" />
 
-        <com.goodwy.commons.views.MyRecyclerView
+        <com.leos.commons.views.MyRecyclerView
             android:id="@+id/select_history_calls_list"
             android:layout_width="match_parent"
             android:layout_height="300dp"
@@ -130,7 +130,7 @@
             android:clipToPadding="false"
             android:padding="@dimen/medium_margin"
             android:scrollbars="none"
-            app:layoutManager="com.goodwy.commons.views.MyLinearLayoutManager"
+            app:layoutManager="com.leos.commons.views.MyLinearLayoutManager"
             app:layout_constraintTop_toBottomOf="@+id/oneButton" />
 
         <androidx.appcompat.widget.AppCompatButton
diff --git a/app/src/main/res/layout/dialog_change_sorting.xml b/app/src/main/res/layout/dialog_change_sorting.xml
index d231373..8e341fa 100755
--- a/app/src/main/res/layout/dialog_change_sorting.xml
+++ b/app/src/main/res/layout/dialog_change_sorting.xml
@@ -19,54 +19,23 @@
             android:layout_height="wrap_content"
             android:layout_marginBottom="@dimen/medium_margin">
 
-            <com.goodwy.commons.views.MyCompatRadioButton
-                android:id="@+id/sorting_dialog_radio_first_name"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:paddingTop="@dimen/medium_margin"
-                android:paddingBottom="@dimen/medium_margin"
-                android:text="@string/first_name" />
-
-            <com.goodwy.commons.views.MyCompatRadioButton
-                android:id="@+id/sorting_dialog_radio_middle_name"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:paddingTop="@dimen/medium_margin"
-                android:paddingBottom="@dimen/medium_margin"
-                android:text="@string/middle_name" />
-
-            <com.goodwy.commons.views.MyCompatRadioButton
-                android:id="@+id/sorting_dialog_radio_surname"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:paddingTop="@dimen/medium_margin"
-                android:paddingBottom="@dimen/medium_margin"
-                android:text="@string/surname" />
-
-            <com.goodwy.commons.views.MyCompatRadioButton
+            <com.leos.commons.views.MyCompatRadioButton
                 android:id="@+id/sorting_dialog_radio_full_name"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:paddingTop="@dimen/medium_margin"
-                android:paddingBottom="@dimen/medium_margin"
                 android:text="@string/full_name" />
 
-            <com.goodwy.commons.views.MyCompatRadioButton
+            <com.leos.commons.views.MyCompatRadioButton
                 android:id="@+id/sorting_dialog_radio_date_created"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:paddingTop="@dimen/medium_margin"
-                android:paddingBottom="@dimen/medium_margin"
                 android:text="@string/date_created" />
 
-            <com.goodwy.commons.views.MyCompatRadioButton
+            <com.leos.commons.views.MyCompatRadioButton
                 android:id="@+id/sorting_dialog_radio_custom"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:paddingTop="@dimen/medium_margin"
-                android:paddingBottom="@dimen/medium_margin"
                 android:text="@string/custom" />
-
         </RadioGroup>
 
         <include
@@ -80,20 +49,16 @@
             android:layout_marginTop="@dimen/medium_margin"
             android:paddingBottom="@dimen/medium_margin">
 
-            <com.goodwy.commons.views.MyCompatRadioButton
+            <com.leos.commons.views.MyCompatRadioButton
                 android:id="@+id/sorting_dialog_radio_ascending"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:paddingTop="@dimen/medium_margin"
-                android:paddingBottom="@dimen/medium_margin"
                 android:text="@string/ascending" />
 
-            <com.goodwy.commons.views.MyCompatRadioButton
+            <com.leos.commons.views.MyCompatRadioButton
                 android:id="@+id/sorting_dialog_radio_descending"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:paddingTop="@dimen/medium_margin"
-                android:paddingBottom="@dimen/medium_margin"
                 android:text="@string/descending" />
         </RadioGroup>
     </LinearLayout>
diff --git a/app/src/main/res/layout/dialog_choose_social.xml b/app/src/main/res/layout/dialog_choose_social.xml
deleted file mode 100755
index 1d3e884..0000000
--- a/app/src/main/res/layout/dialog_choose_social.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/dialog_choose_social"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" />
diff --git a/app/src/main/res/layout/dialog_filter_contact_sources.xml b/app/src/main/res/layout/dialog_filter_contact_sources.xml
deleted file mode 100644
index d839267..0000000
--- a/app/src/main/res/layout/dialog_filter_contact_sources.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<com.goodwy.commons.views.MyRecyclerView xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/filter_contact_sources_list"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:clipToPadding="false"
-    android:overScrollMode="never"
-    android:paddingTop="@dimen/medium_margin"
-    app:layoutManager="com.goodwy.commons.views.MyLinearLayoutManager" />
diff --git a/app/src/main/res/layout/dialog_manage_visible_tabs.xml b/app/src/main/res/layout/dialog_manage_visible_tabs.xml
index 11f2f58..e083e20 100755
--- a/app/src/main/res/layout/dialog_manage_visible_tabs.xml
+++ b/app/src/main/res/layout/dialog_manage_visible_tabs.xml
@@ -14,7 +14,7 @@
         android:paddingTop="@dimen/activity_margin"
         android:paddingEnd="@dimen/activity_margin">
 
-        <com.goodwy.commons.views.MyAppCompatCheckbox
+        <com.leos.commons.views.MyAppCompatCheckbox
             android:id="@+id/manage_visible_tabs_favorites"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
@@ -22,7 +22,7 @@
             android:paddingBottom="@dimen/activity_margin"
             android:text="@string/favorites"/>
 
-        <com.goodwy.commons.views.MyAppCompatCheckbox
+        <com.leos.commons.views.MyAppCompatCheckbox
             android:id="@+id/manage_visible_tabs_call_history"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
@@ -30,7 +30,7 @@
             android:paddingBottom="@dimen/activity_margin"
             android:text="@string/recents"/>
 
-        <com.goodwy.commons.views.MyAppCompatCheckbox
+        <com.leos.commons.views.MyAppCompatCheckbox
             android:id="@+id/manage_visible_tabs_contacts"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/dialog_select_contact.xml b/app/src/main/res/layout/dialog_select_contact.xml
index fd9d1fc..7751f67 100755
--- a/app/src/main/res/layout/dialog_select_contact.xml
+++ b/app/src/main/res/layout/dialog_select_contact.xml
@@ -8,14 +8,14 @@
     android:paddingBottom="12dp"
     android:paddingStart="8dp">
 
-    <com.goodwy.commons.views.MyRecyclerView
+    <com.leos.commons.views.MyRecyclerView
         android:id="@+id/select_contact_list"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:clipToPadding="false"
         android:scrollbars="none"
         android:layout_marginEnd="8dp"
-        app:layoutManager="com.goodwy.commons.views.MyLinearLayoutManager" />
+        app:layoutManager="com.leos.commons.views.MyLinearLayoutManager" />
 
     <com.reddit.indicatorfastscroll.FastScrollerView
         android:id="@+id/letter_fastscroller"
diff --git a/app/src/main/res/layout/dialog_select_sim.xml b/app/src/main/res/layout/dialog_select_sim.xml
index 4a48240..bb1b85e 100755
--- a/app/src/main/res/layout/dialog_select_sim.xml
+++ b/app/src/main/res/layout/dialog_select_sim.xml
@@ -6,7 +6,7 @@
     android:orientation="vertical"
     android:padding="@dimen/activity_margin">
 
-    <com.goodwy.commons.views.MyTextView
+    <com.leos.commons.views.MyTextView
         android:id="@+id/select_sim_label"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
@@ -32,7 +32,7 @@
         android:paddingTop="@dimen/medium_margin"
         android:paddingBottom="@dimen/medium_margin">
 
-        <com.goodwy.commons.views.MyAppCompatCheckbox
+        <com.leos.commons.views.MyAppCompatCheckbox
             android:id="@+id/select_sim_remember"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/dialog_show_grouped_calls.xml b/app/src/main/res/layout/dialog_show_grouped_calls.xml
index 101cee8..32439b9 100755
--- a/app/src/main/res/layout/dialog_show_grouped_calls.xml
+++ b/app/src/main/res/layout/dialog_show_grouped_calls.xml
@@ -5,7 +5,7 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content">
 
-    <com.goodwy.commons.views.MyRecyclerView
+    <com.leos.commons.views.MyRecyclerView
         android:id="@+id/select_grouped_calls_list"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
@@ -13,6 +13,6 @@
         android:overScrollMode="never"
         android:scrollbars="none"
         android:padding="4dp"
-        app:layoutManager="com.goodwy.commons.views.MyLinearLayoutManager" />
+        app:layoutManager="com.leos.commons.views.MyLinearLayoutManager" />
 
 </RelativeLayout>
diff --git a/app/src/main/res/layout/dialpad.xml b/app/src/main/res/layout/dialpad.xml
index cc3e00c..26e4750 100755
--- a/app/src/main/res/layout/dialpad.xml
+++ b/app/src/main/res/layout/dialpad.xml
@@ -25,7 +25,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="@+id/dialpad_2_holder">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_1"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -46,7 +46,7 @@
         app:layout_constraintEnd_toStartOf="@+id/dialpad_3_holder"
         app:layout_constraintStart_toEndOf="@+id/dialpad_1_holder">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_2"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -54,7 +54,7 @@
             android:layout_centerHorizontal="true"
             android:text="2" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_2_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -79,7 +79,7 @@
         app:layout_constraintStart_toEndOf="@+id/dialpad_2_holder"
         app:layout_constraintTop_toTopOf="@+id/dialpad_2_holder">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_3"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -87,7 +87,7 @@
             android:layout_centerHorizontal="true"
             android:text="3" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_3_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -112,7 +112,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="@+id/dialpad_5_holder">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_4"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -120,7 +120,7 @@
             android:layout_centerHorizontal="true"
             android:text="4" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_4_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -143,7 +143,7 @@
         app:layout_constraintEnd_toStartOf="@+id/dialpad_6_holder"
         app:layout_constraintStart_toEndOf="@+id/dialpad_4_holder">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_5"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -151,7 +151,7 @@
             android:layout_centerHorizontal="true"
             android:text="5" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_5_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -176,7 +176,7 @@
         app:layout_constraintStart_toEndOf="@+id/dialpad_5_holder"
         app:layout_constraintTop_toTopOf="@+id/dialpad_5_holder">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_6"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -184,7 +184,7 @@
             android:layout_centerHorizontal="true"
             android:text="6" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_6_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -209,7 +209,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="@+id/dialpad_8_holder">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_7"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -217,7 +217,7 @@
             android:layout_centerHorizontal="true"
             android:text="7" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_7_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -240,7 +240,7 @@
         app:layout_constraintEnd_toStartOf="@+id/dialpad_9_holder"
         app:layout_constraintStart_toEndOf="@+id/dialpad_7_holder">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_8"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -248,7 +248,7 @@
             android:layout_centerHorizontal="true"
             android:text="8" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_8_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -273,7 +273,7 @@
         app:layout_constraintStart_toEndOf="@+id/dialpad_8_holder"
         app:layout_constraintTop_toTopOf="@+id/dialpad_8_holder">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_9"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -281,7 +281,7 @@
             android:layout_centerHorizontal="true"
             android:text="9" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_9_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -325,7 +325,7 @@
         app:layout_constraintEnd_toStartOf="@+id/dialpad_hashtag_holder"
         app:layout_constraintStart_toEndOf="@+id/dialpad_asterisk_holder">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_0"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -333,7 +333,7 @@
             android:layout_centerHorizontal="true"
             android:text="0" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_plus"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/dialpad_round.xml b/app/src/main/res/layout/dialpad_round.xml
index 870c85f..481c50f 100755
--- a/app/src/main/res/layout/dialpad_round.xml
+++ b/app/src/main/res/layout/dialpad_round.xml
@@ -25,7 +25,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_1"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -51,7 +51,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_2"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -60,7 +60,7 @@
             android:layout_marginTop="@dimen/medium_margin"
             android:text="2" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_2_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -86,7 +86,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_3"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -95,7 +95,7 @@
             android:layout_marginTop="@dimen/medium_margin"
             android:text="3" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_3_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -121,7 +121,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_4"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -130,7 +130,7 @@
             android:layout_marginTop="@dimen/medium_margin"
             android:text="4" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_4_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -156,7 +156,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_5"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -165,7 +165,7 @@
             android:layout_marginTop="@dimen/medium_margin"
             android:text="5" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_5_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -191,7 +191,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_6"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -200,7 +200,7 @@
             android:layout_marginTop="@dimen/medium_margin"
             android:text="6" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_6_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -226,7 +226,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_7"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -235,7 +235,7 @@
             android:layout_marginTop="@dimen/medium_margin"
             android:text="7" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_7_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -261,7 +261,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_8"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -270,7 +270,7 @@
             android:layout_marginTop="@dimen/medium_margin"
             android:text="8" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_8_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -296,7 +296,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_9"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -305,7 +305,7 @@
             android:layout_marginTop="@dimen/medium_margin"
             android:text="9" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_9_letters"
             style="@style/DialpadLetterStyle"
             android:layout_width="wrap_content"
@@ -353,7 +353,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_0"
             style="@style/DialpadNumberStyle"
             android:layout_width="wrap_content"
@@ -362,7 +362,7 @@
             android:layout_marginTop="@dimen/medium_margin"
             android:text="0" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/dialpad_plus"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/fragment_contacts.xml b/app/src/main/res/layout/fragment_contacts.xml
index 4208f5a..ca2839e 100755
--- a/app/src/main/res/layout/fragment_contacts.xml
+++ b/app/src/main/res/layout/fragment_contacts.xml
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
-<com.goodwy.dialer.fragments.ContactsFragment xmlns:android="http://schemas.android.com/apk/res/android"
+<com.leos.dialer.fragments.ContactsFragment xmlns:android="http://schemas.android.com/apk/res/android"
     android:id="@+id/contacts_fragment"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
     <include layout="@layout/fragment_letters_layout" />
 
-</com.goodwy.dialer.fragments.ContactsFragment>
+</com.leos.dialer.fragments.ContactsFragment>
diff --git a/app/src/main/res/layout/fragment_favorites.xml b/app/src/main/res/layout/fragment_favorites.xml
index 3711b2b..b4397bd 100755
--- a/app/src/main/res/layout/fragment_favorites.xml
+++ b/app/src/main/res/layout/fragment_favorites.xml
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
-<com.goodwy.dialer.fragments.FavoritesFragment xmlns:android="http://schemas.android.com/apk/res/android"
+<com.leos.dialer.fragments.FavoritesFragment xmlns:android="http://schemas.android.com/apk/res/android"
     android:id="@+id/favorites_fragment"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
     <include layout="@layout/fragment_letters_layout" />
 
-</com.goodwy.dialer.fragments.FavoritesFragment>
+</com.leos.dialer.fragments.FavoritesFragment>
diff --git a/app/src/main/res/layout/fragment_letters_layout.xml b/app/src/main/res/layout/fragment_letters_layout.xml
index 9b25160..709e5ed 100755
--- a/app/src/main/res/layout/fragment_letters_layout.xml
+++ b/app/src/main/res/layout/fragment_letters_layout.xml
@@ -7,7 +7,7 @@
         android:layout_width="match_parent"
         android:layout_height="wrap_content">
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/fragment_placeholder"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
@@ -22,7 +22,7 @@
             android:textStyle="italic"
             android:visibility="gone" />
 
-        <com.goodwy.commons.views.MyTextView
+        <com.leos.commons.views.MyTextView
             android:id="@+id/fragment_placeholder_2"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
@@ -35,7 +35,7 @@
             android:textSize="@dimen/bigger_text_size"
             android:visibility="gone" />
 
-        <com.goodwy.commons.views.MyRecyclerView
+        <com.leos.commons.views.MyRecyclerView
             android:id="@+id/fragment_list"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
@@ -43,7 +43,7 @@
             android:layoutAnimation="@anim/layout_animation"
             android:paddingBottom="64dp"
             android:scrollbars="none"
-            app:layoutManager="com.goodwy.commons.views.MyLinearLayoutManager"/>
+            app:layoutManager="com.leos.commons.views.MyLinearLayoutManager"/>
 
         <com.reddit.indicatorfastscroll.FastScrollerView
             android:id="@+id/letter_fastscroller"
diff --git a/app/src/main/res/layout/fragment_recents.xml b/app/src/main/res/layout/fragment_recents.xml
index 7205abf..d193995 100755
--- a/app/src/main/res/layout/fragment_recents.xml
+++ b/app/src/main/res/layout/fragment_recents.xml
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="utf-8"?>
-<com.goodwy.dialer.fragments.RecentsFragment xmlns:android="http://schemas.android.com/apk/res/android"
+<com.leos.dialer.fragments.RecentsFragment xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     android:id="@+id/recents_fragment"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <com.goodwy.commons.views.MyTextView
+    <com.leos.commons.views.MyTextView
         android:id="@+id/recents_placeholder"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
@@ -20,7 +20,7 @@
         android:textStyle="italic"
         android:visibility="gone" />
 
-    <com.goodwy.commons.views.MyTextView
+    <com.leos.commons.views.MyTextView
         android:id="@+id/recents_placeholder_2"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
@@ -33,7 +33,7 @@
         android:textSize="@dimen/bigger_text_size"
         android:visibility="gone" />
 
-    <com.goodwy.commons.views.MyRecyclerView
+    <com.leos.commons.views.MyRecyclerView
         android:id="@+id/recents_list"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
@@ -42,6 +42,6 @@
         android:layoutAnimation="@anim/layout_animation"
         android:scrollbarThumbVertical="@drawable/fastscroller_handle_vertical_gray"
         android:scrollbars="vertical"
-        app:layoutManager="com.goodwy.commons.views.MyLinearLayoutManager" />
+        app:layoutManager="com.leos.commons.views.MyLinearLayoutManager" />
 
-</com.goodwy.dialer.fragments.RecentsFragment>
+</com.leos.dialer.fragments.RecentsFragment>
diff --git a/app/src/main/res/layout/item_call_history.xml b/app/src/main/res/layout/item_call_history.xml
index fc511df..3b267d3 100755
--- a/app/src/main/res/layout/item_call_history.xml
+++ b/app/src/main/res/layout/item_call_history.xml
@@ -40,6 +40,7 @@
             app:layout_constraintTop_toTopOf="parent"
             app:layout_constraintBottom_toBottomOf="parent"
             app:layout_constraintLeft_toLeftOf="parent"
+            android:alpha="0.6"
             android:src="@drawable/ic_sim_vector" />
         <!--android:visibility="gone"-->
 
diff --git a/app/src/main/res/layout/item_choose_social.xml b/app/src/main/res/layout/item_choose_social.xml
deleted file mode 100755
index 75a38ca..0000000
--- a/app/src/main/res/layout/item_choose_social.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:background="?attr/selectableItemBackground"
-    android:padding="@dimen/medium_margin">
-
-    <com.google.android.material.imageview.ShapeableImageView
-        android:id="@+id/item_social_image"
-        android:layout_width="@dimen/normal_icon_size"
-        android:layout_height="@dimen/normal_icon_size"
-        android:padding="@dimen/small_margin"
-        android:scaleType="centerCrop"
-        app:shapeAppearanceOverlay="@style/roundedImageView"
-        tools:src="@drawable/ic_whatsapp_vector" />
-
-    <com.goodwy.commons.views.MyTextView
-        android:id="@+id/item_social_label"
-        android:layout_width="match_parent"
-        android:layout_height="@dimen/normal_icon_size"
-        android:layout_toEndOf="@+id/item_social_image"
-        android:gravity="center_vertical"
-        android:lines="1"
-        android:maxLines="1"
-        android:paddingStart="@dimen/small_margin"
-        android:paddingEnd="@dimen/normal_margin"
-        android:singleLine="true"
-        android:textSize="@dimen/bigger_text_size"
-        tools:text="Voice call 123 456 789" />
-
-</RelativeLayout>
diff --git a/app/src/main/res/layout/item_conference_call.xml b/app/src/main/res/layout/item_conference_call.xml
index 8200c32..0001944 100755
--- a/app/src/main/res/layout/item_conference_call.xml
+++ b/app/src/main/res/layout/item_conference_call.xml
@@ -20,7 +20,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
 
-    <com.goodwy.commons.views.MyTextView
+    <com.leos.commons.views.MyTextView
         android:id="@+id/item_conference_call_name"
         android:layout_width="0dp"
         android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/item_filter_contact_source.xml b/app/src/main/res/layout/item_filter_contact_source.xml
deleted file mode 100644
index b5f17b3..0000000
--- a/app/src/main/res/layout/item_filter_contact_source.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/filter_contact_source_holder"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:background="?attr/selectableItemBackground"
-    android:paddingStart="@dimen/normal_margin"
-    android:paddingTop="@dimen/small_margin"
-    android:paddingEnd="@dimen/normal_margin"
-    android:paddingBottom="@dimen/small_margin">
-
-    <com.goodwy.commons.views.MyAppCompatCheckbox
-        android:id="@+id/filter_contact_source_checkbox"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginEnd="@dimen/medium_margin"
-        android:background="@null"
-        android:clickable="false"
-        android:paddingStart="@dimen/small_margin" />
-
-</RelativeLayout>
diff --git a/app/src/main/res/layout/item_recent_call.xml b/app/src/main/res/layout/item_recent_call.xml
index 82ead04..8e21636 100755
--- a/app/src/main/res/layout/item_recent_call.xml
+++ b/app/src/main/res/layout/item_recent_call.xml
@@ -49,12 +49,9 @@
             android:layout_width="0dp"
             android:layout_height="wrap_content"
             android:layout_marginStart="@dimen/medium_margin"
-            android:layout_marginEnd="@dimen/small_margin"
             android:ellipsize="end"
             android:maxLines="1"
             android:textSize="@dimen/normal_text_size"
-            android:textDirection="locale"
-            android:textAlignment="viewStart"
             app:layout_constraintLeft_toRightOf="@+id/item_recents_image"
             app:layout_constraintRight_toLeftOf="@+id/item_recents_date_time"
             app:layout_constraintTop_toTopOf="parent"
@@ -64,6 +61,7 @@
             android:id="@+id/item_recents_sim_image"
             android:layout_width="18dp"
             android:layout_height="18dp"
+            android:alpha="0.6"
             android:paddingTop="@dimen/tiny_margin"
             android:paddingBottom="@dimen/tiny_margin"
             android:src="@drawable/ic_sim_vector"
@@ -112,16 +110,13 @@
 
         <TextView
             android:id="@+id/item_recents_number"
-            android:layout_width="0dp"
+            android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:alpha="0.6"
             android:paddingStart="@dimen/medium_margin"
-            android:paddingEnd="@dimen/small_margin"
             android:textSize="@dimen/smaller_text_size"
-            android:ellipsize="end"
             app:layout_constraintBottom_toBottomOf="@+id/item_recents_type"
             app:layout_constraintLeft_toRightOf="@+id/item_recents_duration"
-            app:layout_constraintRight_toLeftOf="@+id/item_recents_date_time"
             app:layout_constraintTop_toTopOf="@+id/item_recents_type"
             tools:text="+12345678901" />
 
diff --git a/app/src/main/res/layout/item_speed_dial.xml b/app/src/main/res/layout/item_speed_dial.xml
index 8541375..580fca3 100755
--- a/app/src/main/res/layout/item_speed_dial.xml
+++ b/app/src/main/res/layout/item_speed_dial.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<com.goodwy.commons.views.MyTextView xmlns:android="http://schemas.android.com/apk/res/android"
+<com.leos.commons.views.MyTextView xmlns:android="http://schemas.android.com/apk/res/android"
     android:id="@+id/speed_dial_label"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
diff --git a/app/src/main/res/layout/item_view_email.xml b/app/src/main/res/layout/item_view_email.xml
deleted file mode 100755
index 433c8d1..0000000
--- a/app/src/main/res/layout/item_view_email.xml
+++ /dev/null
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/contact_email_holder"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:background="@drawable/ripple_all_corners">
-
-    <RelativeLayout
-        android:id="@+id/contact_holder"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingTop="@dimen/contact_padding_top"
-        android:paddingBottom="@dimen/contact_padding_top"
-        android:paddingLeft="@dimen/contact_padding_left"
-        android:paddingRight="@dimen/contact_padding_left">
-
-        <com.goodwy.commons.views.MyTextView
-            android:id="@+id/contact_email_type"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="center"
-            android:text="@string/home"
-            android:textSize="@dimen/normal_text_size" />
-
-        <ImageView
-            android:id="@+id/contact_email_icon"
-            android:layout_width="18dp"
-            android:layout_height="18dp"
-            android:alpha="0.8"
-            android:layout_alignParentEnd="true"
-            app:srcCompat="@drawable/ic_mail_vector" />
-
-        <TextView
-            android:id="@+id/contact_email"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:lines="1"
-            android:maxLines="1"
-            android:singleLine="true"
-            android:layout_below="@+id/contact_email_type"
-            android:textSize="@dimen/bigger_text_size"
-            tools:text="address@mail.com" />
-
-    </RelativeLayout>
-
-    <ImageView
-        android:id="@+id/divider_contact_email"
-        android:layout_width="match_parent"
-        android:layout_height="1px"
-        android:layout_marginStart="@dimen/contact_padding_left"
-        android:layout_marginEnd="@dimen/contact_padding_left"
-        android:background="@drawable/divider_settings"
-        android:alpha="0.2"
-        android:layout_below="@+id/contact_holder"/>
-
-</RelativeLayout>
diff --git a/app/src/main/res/layout/item_view_event.xml b/app/src/main/res/layout/item_view_event.xml
deleted file mode 100755
index 0bbc8a3..0000000
--- a/app/src/main/res/layout/item_view_event.xml
+++ /dev/null
@@ -1,57 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/contact_event_holder"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:background="@drawable/ripple_all_corners">
-
-    <RelativeLayout
-        android:id="@+id/contact_holder"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingTop="@dimen/contact_padding_top"
-        android:paddingBottom="@dimen/contact_padding_top"
-        android:paddingLeft="@dimen/contact_padding_left"
-        android:paddingRight="@dimen/contact_padding_left">
-
-        <com.goodwy.commons.views.MyTextView
-            android:id="@+id/contact_event_type"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/birthday"
-            android:textSize="@dimen/normal_text_size" />
-
-        <ImageView
-            android:id="@+id/contact_event_icon"
-            android:layout_width="18dp"
-            android:layout_height="18dp"
-            android:alpha="0.8"
-            android:layout_alignParentEnd="true"
-            app:srcCompat="@drawable/ic_event_vector" />
-
-        <TextView
-            android:id="@+id/contact_event"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_below="@+id/contact_event_type"
-            android:lines="1"
-            android:maxLines="1"
-            android:singleLine="true"
-            android:textSize="@dimen/bigger_text_size"
-            tools:text="01.01.2000"  />
-
-    </RelativeLayout>
-
-    <ImageView
-        android:id="@+id/divider_contact_event"
-        android:layout_width="match_parent"
-        android:layout_height="1px"
-        android:layout_marginStart="@dimen/contact_padding_left"
-        android:layout_marginEnd="@dimen/contact_padding_left"
-        android:background="@drawable/divider_settings"
-        android:alpha="0.2"
-        android:layout_below="@+id/contact_holder"/>
-
-</RelativeLayout>
diff --git a/app/src/main/res/layout/item_view_messengers_actions.xml b/app/src/main/res/layout/item_view_messengers_actions.xml
deleted file mode 100755
index d8de8cb..0000000
--- a/app/src/main/res/layout/item_view_messengers_actions.xml
+++ /dev/null
@@ -1,140 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/contact_messenger_action_holder"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:background="@drawable/ripple_all_corners"
-    android:visibility="gone"
-    tools:visibility="visible">
-
-    <RelativeLayout
-        android:id="@+id/contact_holder"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingTop="@dimen/contact_padding_top"
-        android:paddingBottom="@dimen/contact_padding_top"
-        android:paddingStart="@dimen/contact_padding_left"
-        android:paddingEnd="4dp">
-
-        <com.goodwy.commons.views.MyTextView
-            android:id="@+id/contact_messenger_action_name"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/telegram"
-            android:textSize="@dimen/normal_text_size" />
-
-        <com.goodwy.commons.views.MyTextView
-            android:id="@+id/contact_messenger_action_account"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginStart="8dp"
-            android:layout_marginBottom="1dp"
-            android:alpha="0.6"
-            android:layout_toEndOf="@+id/contact_messenger_action_name"
-            android:layout_alignBottom="@+id/contact_messenger_action_name"
-            android:text="@string/telegram"
-            android:textSize="@dimen/smaller_text_size"
-            android:visibility="gone"
-            tools:visibility="visible" />
-
-        <TextView
-            android:id="@+id/contact_messenger_action_number"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_below="@+id/contact_messenger_action_name"
-            android:layout_toStartOf="@+id/contact_messenger_action_video"
-            android:lines="1"
-            android:maxLines="1"
-            android:singleLine="true"
-            android:textSize="@dimen/normal_text_size"
-            tools:text="+12345678910" />
-
-        <RelativeLayout
-            android:id="@+id/contact_messenger_action_message"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_centerVertical="true"
-            android:layout_alignParentEnd="true"
-            android:layout_marginEnd="12dp"
-            android:background="?attr/selectableItemBackgroundBorderless"
-            android:visibility="gone"
-            tools:visibility="visible">
-
-            <ImageView
-                android:id="@+id/contact_messenger_action_message_icon"
-                android:layout_width="36dp"
-                android:layout_height="36dp"
-                android:alpha="0.8"
-                android:background="@drawable/circle_background"
-                android:paddingStart="6dp"
-                android:paddingTop="6dp"
-                android:paddingEnd="6dp"
-                android:paddingBottom="6dp"
-                app:srcCompat="@drawable/ic_messages" />
-
-        </RelativeLayout>
-
-        <RelativeLayout
-            android:id="@+id/contact_messenger_action_call"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignWithParentIfMissing="true"
-            android:layout_centerVertical="true"
-            android:layout_marginEnd="12dp"
-            android:layout_toStartOf="@+id/contact_messenger_action_message"
-            android:background="?attr/selectableItemBackgroundBorderless"
-            android:visibility="gone"
-            tools:visibility="visible">
-
-            <ImageView
-                android:id="@+id/contact_messenger_action_call_icon"
-                android:layout_width="36dp"
-                android:layout_height="36dp"
-                android:alpha="0.8"
-                android:background="@drawable/circle_background"
-                android:padding="8dp"
-                app:srcCompat="@drawable/ic_phone_vector" />
-
-        </RelativeLayout>
-
-        <RelativeLayout
-            android:id="@+id/contact_messenger_action_video"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignWithParentIfMissing="true"
-            android:layout_marginEnd="12dp"
-            android:layout_centerVertical="true"
-            android:layout_toStartOf="@+id/contact_messenger_action_call"
-            android:background="?attr/selectableItemBackgroundBorderless"
-            android:visibility="gone"
-            tools:visibility="visible">
-
-            <ImageView
-                android:id="@+id/contact_messenger_action_video_icon"
-                android:layout_width="36dp"
-                android:layout_height="36dp"
-                android:alpha="0.8"
-                android:background="@drawable/circle_background"
-                android:paddingStart="8dp"
-                android:paddingTop="7dp"
-                android:paddingEnd="6dp"
-                android:paddingBottom="7dp"
-                app:srcCompat="@drawable/ic_videocam_vector" />
-
-        </RelativeLayout>
-
-    </RelativeLayout>
-
-    <ImageView
-        android:id="@+id/divider_contact_messenger_action"
-        android:layout_width="match_parent"
-        android:layout_height="1px"
-        android:layout_marginStart="@dimen/contact_padding_left"
-        android:layout_marginEnd="@dimen/contact_padding_left"
-        android:background="@drawable/divider_settings"
-        android:alpha="0.2"
-        android:layout_below="@+id/contact_holder"/>
-
-</RelativeLayout>
diff --git a/app/src/main/res/layout/top_view.xml b/app/src/main/res/layout/top_view.xml
index 6421dc8..b8b14c5 100644
--- a/app/src/main/res/layout/top_view.xml
+++ b/app/src/main/res/layout/top_view.xml
@@ -17,7 +17,7 @@
         app:layout_constraintTop_toTopOf="parent"
         tools:src="@drawable/ic_person" />
 
-    <com.goodwy.commons.views.MyTextView
+    <com.leos.commons.views.MyTextView
         android:id="@+id/call_history_name"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
diff --git a/app/src/main/res/menu/cab_contacts.xml b/app/src/main/res/menu/cab_contacts.xml
index 7620ebf..8b344a9 100755
--- a/app/src/main/res/menu/cab_contacts.xml
+++ b/app/src/main/res/menu/cab_contacts.xml
@@ -2,7 +2,7 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
-    tools:ignore="AppCompatResource,AlwaysShowAction">
+    tools:ignore="AppCompatResource">
     <item
         android:id="@+id/cab_call_sim_1"
         android:icon="@drawable/ic_phone_one_vector"
@@ -16,19 +16,16 @@
     <item
         android:id="@+id/cab_delete"
         android:icon="@drawable/ic_delete_outline"
-        android:showAsAction="always"
         android:title="@string/delete"
         app:showAsAction="always" />
     <item
         android:id="@+id/cab_view_details"
         android:icon="@drawable/ic_contacts"
-        android:showAsAction="always"
         android:title="@string/view_contact_details"
         app:showAsAction="always" />
     <item
         android:id="@+id/cab_send_sms"
         android:icon="@drawable/ic_sms_vector"
-        android:showAsAction="always"
         android:title="@string/send_sms"
         app:showAsAction="always" />
     <item
diff --git a/app/src/main/res/menu/cab_recent_calls.xml b/app/src/main/res/menu/cab_recent_calls.xml
index c1fa6e6..ac12964 100755
--- a/app/src/main/res/menu/cab_recent_calls.xml
+++ b/app/src/main/res/menu/cab_recent_calls.xml
@@ -2,7 +2,7 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
-    tools:ignore="AppCompatResource,AlwaysShowAction">
+    tools:ignore="AppCompatResource">
     <item
         android:id="@+id/cab_call_sim_1"
         android:icon="@drawable/ic_phone_one_vector"
@@ -16,25 +16,21 @@
     <item
         android:id="@+id/cab_remove"
         android:icon="@drawable/ic_delete_outline"
-        android:showAsAction="always"
         android:title="@string/delete"
         app:showAsAction="always" />
     <item
         android:id="@+id/cab_view_details"
         android:icon="@drawable/ic_view_contact_details_vector"
-        android:showAsAction="always"
         android:title="@string/view_contact_details"
         app:showAsAction="always" />
     <item
         android:id="@+id/cab_add_number"
         android:icon="@drawable/ic_add_person_vector"
-        android:showAsAction="always"
         android:title="@string/add_number_to_contact"
         app:showAsAction="always" />
     <item
         android:id="@+id/cab_send_sms"
         android:icon="@drawable/ic_sms_vector"
-        android:showAsAction="always"
         android:title="@string/send_sms"
         app:showAsAction="always" />
     <item
diff --git a/app/src/main/res/menu/menu.xml b/app/src/main/res/menu/menu.xml
index d821d20..2d9d135 100755
--- a/app/src/main/res/menu/menu.xml
+++ b/app/src/main/res/menu/menu.xml
@@ -1,8 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:ignore="AlwaysShowAction,AppCompatResource">
+    xmlns:app="http://schemas.android.com/apk/res-auto">
     <item
         android:id="@+id/create_new_contact"
         android:icon="@drawable/ic_plus_vector"
@@ -14,26 +12,20 @@
         android:title="@string/search"
         app:actionViewClass="androidx.appcompat.widget.SearchView"
         app:showAsAction="collapseActionView|always"/>
-    <item
-        android:id="@+id/clear_call_history"
-        android:icon="@drawable/ic_clear_all"
-        android:title="@string/clear_call_history"
-        app:showAsAction="always" />
     <item
         android:id="@+id/sort"
         android:icon="@drawable/ic_sort_vector"
-        android:showAsAction="always"
         android:title="@string/sort_by"
         app:showAsAction="always" />
     <item
-        android:id="@+id/filter"
-        android:icon="@drawable/ic_filter_vector"
-        android:title="@string/filter"
-        app:showAsAction="always" />
+        android:id="@+id/clear_call_history"
+        android:icon="@drawable/ic_clear_all"
+        android:title="@string/clear_call_history"
+        app:showAsAction="ifRoom" />
     <item
         android:id="@+id/settings"
         android:title="@string/settings"
-        android:icon="@drawable/ic_settings_hexagon"
+        android:icon="@drawable/ic_more_horiz"
         app:showAsAction="always"/>
     <item
         android:id="@+id/about"
@@ -41,4 +33,9 @@
         android:title="@string/about"
         android:visible="false"
         app:showAsAction="never" />
+    <item
+        android:id="@+id/more_apps_from_us"
+        android:title="@string/more_apps_from_us"
+        android:visible="false"
+        app:showAsAction="never" />
 </menu>
diff --git a/app/src/main/res/menu/menu_call_history.xml b/app/src/main/res/menu/menu_call_history.xml
index 112ef72..d780d71 100755
--- a/app/src/main/res/menu/menu_call_history.xml
+++ b/app/src/main/res/menu/menu_call_history.xml
@@ -3,20 +3,9 @@
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     tools:ignore="AppCompatResource">
-    <item
-        android:id="@+id/favorite"
-        android:icon="@drawable/ic_star_outline_vector"
-        android:title="@string/add_to_favorites"
-        android:visible="false"
-        app:showAsAction="always" />
     <item
         android:id="@+id/delete"
         android:icon="@drawable/ic_delete_outline"
         android:title="@string/delete"
         app:showAsAction="always" />
-    <item
-        android:id="@+id/share"
-        android:icon="@drawable/ic_share_vector"
-        android:title="@string/share"
-        app:showAsAction="ifRoom" />
 </menu>
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
index fcd3a1e..4bdee41 100644
--- a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
+++ b/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
@@ -1,5 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-  <background android:drawable="@mipmap/ic_launcher_background"/>
   <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
-</adaptive-icon>
\ No newline at end of file
+</adaptive-icon>
diff --git a/app/src/main/res/values-ar/goodwy.xml b/app/src/main/res/values-ar/goodwy.xml
index d6db972..3e8e75f 100755
--- a/app/src/main/res/values-ar/goodwy.xml
+++ b/app/src/main/res/values-ar/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">شاشة مكالمة شفافة</string>
     <string name="call_back_g">دعا</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">مكالمة فائتة</string>
     <string name="missed_calls_g">مكالمات</string>
     <string name="missed_call_notifications_g">إشعارات المكالمات الفائتة</string>
@@ -19,20 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">أجهزة ضبط الوقت قيد التشغيل</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="zero">جهاز ضبط الوقت %d قيد التشغيل</item>
-        <item quantity="one">جهاز ضبط الوقت %d قيد التشغيل</item>
-        <item quantity="two">جهاز ضبط الوقت %d قيد التشغيل</item>
-        <item quantity="few">جهاز ضبط الوقت %d قيد التشغيل</item>
-        <item quantity="many">اجهزة ضبط الوقت %d قيد التشغيل</item>
-        <item quantity="other">جهاز ضبط الوقت %d قيد التشغيل</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-ar/strings.xml b/app/src/main/res/values-ar/strings.xml
index 67555c9..341df37 100644
--- a/app/src/main/res/values-ar/strings.xml
+++ b/app/src/main/res/values-ar/strings.xml
@@ -1,82 +1,80 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">الهاتف المبسط</string>
-    <string name="app_launcher_name">الهاتف</string>
-    <string name="default_phone_app_prompt">الرجاء جعل هذا التطبيق هو تطبيق الهاتف الافتراضي</string>
-    <string name="allow_displaying_over_other_apps">الرجاء السماح بالعرض فوق التطبيقات الأخرى للحصول على سلوك موثوق</string>
+    <string name="app_name">LeOS-Phone</string>
+    <string name="app_launcher_name">Dialer</string>
+    <string name="default_phone_app_prompt">Please make this app the default Phone app</string>
+    <string name="allow_displaying_over_other_apps">Please allow displaying over other apps for reliable behaviour</string>
     <!-- Contacts -->
-    <string name="could_not_access_contacts">تعذر الوصول إلى جهات الاتصال</string>
+    <string name="could_not_access_contacts">Could not access your contacts</string>
     <!-- Recents -->
-    <string name="no_previous_calls">لاتوجد مكالمات سابقة</string>
-    <string name="could_not_access_the_call_history">تعذر الوصول إلى سجل المكالمات</string>
-    <string name="request_access">طلب الوصول</string>
-    <string name="remove_confirmation">هل أنت متأكد من إزالة العناصر المحددة من سجل المكالمات؟</string>
-    <string name="clear_history_confirmation">هل أنت متأكد من إزالة كامل سجل المكالمات؟</string>
-    <string name="show_grouped_calls">إظهار المكالمات المجمعة</string>
-    <string name="clear_call_history">محو سجل المكالمات</string>
-    <string name="show_call_details">إظهار تفاصيل المكالمة</string>
+    <string name="no_previous_calls">No previous calls have been found</string>
+    <string name="could_not_access_the_call_history">Could not access the call history</string>
+    <string name="request_access">Request access</string>
+    <string name="remove_confirmation">Are you sure you want to remove the selected items from the Call History\?</string>
+    <string name="clear_history_confirmation">Are you sure you want to remove everything from the Call History\?</string>
+    <string name="show_grouped_calls">Show grouped calls</string>
+    <string name="clear_call_history">Clear call history</string>
+    <string name="show_call_details">Show call details</string>
     <!-- Dialpad -->
-    <string name="dialpad">لوحة الاتصال</string>
-    <string name="asterisk">نجمة</string>
-    <string name="hashtag">وسم</string>
-    <string name="call_number">رقم الاتصال</string>
-    <string name="dialpad_beeps">تمكين الصفير عند نقر أزرار لوحة الاتصال</string>
-    <string name="dialpad_vibrations">تمكين الاهتزازات عند نقر أزرار لوحة الاتصال</string>
+    <string name="dialpad">Dialpad</string>
+    <string name="asterisk">Asterisk</string>
+    <string name="hashtag">Hashtag</string>
+    <string name="call_number">Call number</string>
+    <string name="dialpad_beeps">Enable beeps on dialpad button clicks</string>
+    <string name="dialpad_vibrations">Enable vibrations on dialpad button clicks</string>
     <!-- Dialer -->
-    <string name="dialer">الهاتف</string>
-    <string name="accept">قبول</string>
-    <string name="accept_call">قبول المكالمة</string>
-    <string name="decline">رفض</string>
-    <string name="decline_call">رفض المكالمة</string>
-    <string name="unknown_caller">متصل غير معروف</string>
-    <string name="is_calling">يتصل…</string>
-    <string name="dialing">اتصال…</string>
-    <string name="call_ended">انتهت المكالمة</string>
-    <string name="call_ending">إنهاء المكالمة</string>
-    <string name="ongoing_call">مكالمة مستمرة</string>
-    <string name="select_sim">اختر شريحة لهذه المكالمة</string>
-    <string name="always_use_this_sim">استخدم هذه الشريحة دائما لهذا الرقم</string>
-    <string name="unset_default_sim">إلغاء تعيين بطاقة SIM الافتراضية</string>
-    <string name="calls">المكالمات</string>
-    <string name="turn_microphone_on">تشغيل الميكروفون</string>
-    <string name="turn_microphone_off">إيقاف تشغيل الميكروفون</string>
-    <string name="turn_speaker_on">تشغيل مكبر الصوت</string>
-    <string name="turn_speaker_off">إيقاف تشغيل مكبر الصوت</string>
-    <string name="show_dialpad">إظهار لوحة الاتصال</string>
-    <string name="hide_dialpad">إخفاء لوحة الاتصال</string>
-    <string name="end_call">إنهاء المكالمة</string>
-    <string name="hold_call">تعليق المكالمة</string>
-    <string name="resume_call">استئناف المكالمة</string>
-    <string name="call_on_hold">قيد الانتظار</string>
-    <string name="call_swap">مبادلة المكالمات</string>
-    <string name="call_merge">دمج المكالمات</string>
-    <string name="call_split">تقسيم المكالمة</string>
-    <string name="call_add">إضافة مكالمة</string>
-    <string name="conference_manage">إدارة المكالمة الجماعية</string>
-    <string name="conference">جماعة</string>
-    <string name="audio_route_speaker">مكبر الصوت</string>
-    <string name="audio_route_earpiece">سماعة الأذن</string>
-    <string name="audio_route_bluetooth">بلوتوث</string>
-    <string name="audio_route_wired_headset">سماعة الرأس السلكية</string>
-    <string name="audio_route_wired_or_earpiece">سلكي أو سماعة أذن</string>
-    <string name="choose_audio_route">اختر مسار الصوت</string>
-    <string name="calling_blocked_number">الرقم الذي تتصل به محظور</string>
+    <string name="dialer">Dialer</string>
+    <string name="accept">Accept</string>
+    <string name="accept_call">Accept call</string>
+    <string name="decline">Decline</string>
+    <string name="decline_call">Decline call</string>
+    <string name="unknown_caller">Unknown Caller</string>
+    <string name="is_calling">Is Calling…</string>
+    <string name="dialing">Dialing…</string>
+    <string name="call_ended">Call Ended</string>
+    <string name="call_ending">Call Ending</string>
+    <string name="ongoing_call">Ongoing Call</string>
+    <string name="select_sim">Select a SIM for this call</string>
+    <string name="always_use_this_sim">Always use this SIM for this number</string>
+    <string name="unset_default_sim">Unset default SIM</string>
+    <string name="calls">Calls</string>
+    <string name="turn_microphone_on">Turn microphone on</string>
+    <string name="turn_microphone_off">Turn microphone off</string>
+    <string name="turn_speaker_on">Turn speaker on</string>
+    <string name="turn_speaker_off">Turn speaker off</string>
+    <string name="show_dialpad">Show dialpad</string>
+    <string name="hide_dialpad">Hide dialpad</string>
+    <string name="end_call">End call</string>
+    <string name="hold_call">Hold call</string>
+    <string name="resume_call">Resume call</string>
+    <string name="call_on_hold">On Hold</string>
+    <string name="call_swap">Swap calls</string>
+    <string name="call_merge">Merge calls</string>
+    <string name="call_split">Split call</string>
+    <string name="call_add">Add call</string>
+    <string name="conference_manage">Manage conference call</string>
+    <string name="conference">Conference</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
+    <string name="audio_route_bluetooth">Bluetooth</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
-    <string name="speed_dial">اتصال سريع</string>
-    <string name="manage_speed_dial">إدارة الاتصال السريع</string>
-    <string name="speed_dial_label">انقر فوق رقم لتعيين جهة اتصال له. يمكنك بعد ذلك الاتصال بجهة الاتصال المحددة بسرعة عن طريق الضغط لفترة طويلة على الرقم المحدد في الهاتف.</string>
+    <string name="speed_dial">Speed dial</string>
+    <string name="manage_speed_dial">Manage speed dial</string>
+    <string name="speed_dial_label">Click on a number to assign a contact to it. You can then quickly call the given contact by long pressing the given number at the dialer.</string>
     <!-- Settings -->
-    <string name="group_subsequent_calls">تجميع المكالمات اللاحقة مع نفس الرقم في سجل المكالمات</string>
-    <string name="open_dialpad_by_default">افتح لوحة الاتصال افتراضيًا عند فتح التطبيق</string>
-    <string name="disable_proximity_sensor">تعطيل مستشعر القرب أثناء المكالمات</string>
-    <string name="disable_swipe_to_answer">استبدل التمرير عند الرد على المكالمات الواردة بالنقر</string>
-    <string name="show_incoming_calls_full_screen">عرض المكالمات الواردة دائما في وضع ملء الشاشة</string>
-    <string name="hide_dialpad_numbers">اخفي ارقام لوحت المفاتيح</string>
+    <string name="group_subsequent_calls">Group subsequent calls with the same number at the call log</string>
+    <string name="open_dialpad_by_default">Open the dialpad by default when the app opens</string>
+    <string name="disable_proximity_sensor">Disable proximity sensor during calls</string>
+    <string name="disable_swipe_to_answer">Replace swiping at responding to incoming calls with clicking</string>
+    <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
     <!-- FAQ -->
-    <string name="faq_1_title">أسمع مكالمات واردة، ولكن الشاشة لا تعمل. ماذا أفعل؟</string>
-    <string name="faq_1_text">يمكن أن يكون لمثل هذه المشكلات العديد من الأسباب الخاصة بالجهاز والنظام ، والتي يصعب تحديدها بشكل عام. يجب أن تنظر حولك في إعدادات جهازك وتأكد من السماح للتطبيق بالظهور عندما يكون في الخلفية والسماح بالعرض فوق التطبيقات الأخرى.</string>
+    <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
+    <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
     <!--
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
     -->
-</resources>
\ No newline at end of file
+</resources>
diff --git a/app/src/main/res/values-az/goodwy.xml b/app/src/main/res/values-az/goodwy.xml
index 4bec606..d091042 100755
--- a/app/src/main/res/values-az/goodwy.xml
+++ b/app/src/main/res/values-az/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Şəffaf Zəng Ekranı</string>
     <string name="call_back_g">Geri zəng et</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Buraxılmış zəng</string>
     <string name="missed_calls_g">Buraxılmış zənglər</string>
     <string name="missed_call_notifications_g">Buraxılmış zəng bildirişləri</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-az/strings.xml b/app/src/main/res/values-az/strings.xml
index 85331b8..341df37 100644
--- a/app/src/main/res/values-az/strings.xml
+++ b/app/src/main/res/values-az/strings.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">Dialer</string>
     <string name="default_phone_app_prompt">Please make this app the default Phone app</string>
     <string name="allow_displaying_over_other_apps">Please allow displaying over other apps for reliable behaviour</string>
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Speed dial</string>
     <string name="manage_speed_dial">Manage speed dial</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Disable proximity sensor during calls</string>
     <string name="disable_swipe_to_answer">Replace swiping at responding to incoming calls with clicking</string>
     <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
     <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
diff --git a/app/src/main/res/values-be/goodwy.xml b/app/src/main/res/values-be/goodwy.xml
index d3abef0..26abf97 100755
--- a/app/src/main/res/values-be/goodwy.xml
+++ b/app/src/main/res/values-be/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Празрысты экран выкліку</string>
     <string name="call_back_g">Ператэлефанаваць</string>
-    <string name="call_back_person_g">Ператэлефануйце %s</string>
     <string name="missed_call_g">Прапушчаны выклік</string>
     <string name="missed_calls_g">Прапушчаныя званкі</string>
     <string name="missed_call_notifications_g">Апавяшчэнні аб прапушчаных выкліках</string>
@@ -19,18 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Дынамік</string>
-    <string name="audio_route_earpiece_g">Тэлефон</string>
-    <string name="audio_route_wired_or_earpiece_g">Дынамік прылады або правадная гарнітура</string>
-
-    <!-- Timer -->
-    <string name="timer">Таймер</string>
-    <string name="timers_notification_msg">Таймеры запушчаны</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d таймер запушчаны</item>
-        <item quantity="few">%d таймера запушчаны</item>
-        <item quantity="many">%d таймераў запушчана</item>
-        <item quantity="other">%d таймераў запушчана</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-be/strings.xml b/app/src/main/res/values-be/strings.xml
index df09951..7287a31 100644
--- a/app/src/main/res/values-be/strings.xml
+++ b/app/src/main/res/values-be/strings.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">Тэлефон</string>
     <string name="default_phone_app_prompt">Зрабіце гэта прыкладанне стандартным для тэлефонных выклікаў</string>
     <string name="allow_displaying_over_other_apps">Дазвольце паказ над іншымі прыкладаннямі для надзейнай працы</string>
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Хуткі набор</string>
     <string name="manage_speed_dial">Кіраванне хуткім наборам</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Адключаць датчык набліжэння падчас выклікаў</string>
     <string name="disable_swipe_to_answer">Выкарыстоўваць націсканне замест перацягвання пры адказе на ўваходныя выклікі</string>
     <string name="show_incoming_calls_full_screen">Заўсёды паказваць уваходныя выклікі ў поўнаэкранным рэжыме</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
     <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
diff --git a/app/src/main/res/values-bg/goodwy.xml b/app/src/main/res/values-bg/goodwy.xml
index 0eea0fa..6048934 100755
--- a/app/src/main/res/values-bg/goodwy.xml
+++ b/app/src/main/res/values-bg/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Прозрачен екран за обаждания</string>
     <string name="call_back_g">Обаждам се</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Пропуснато обаждане</string>
     <string name="missed_calls_g">Пропуснати обаждания</string>
     <string name="missed_call_notifications_g">Известия за пропуснати повиквания</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-bg/strings.xml b/app/src/main/res/values-bg/strings.xml
index 1e40316..e483934 100644
--- a/app/src/main/res/values-bg/strings.xml
+++ b/app/src/main/res/values-bg/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Бързо набиране</string>
     <string name="manage_speed_dial">Управление на бързото набиране</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Изключване на сензора за близост по време на обаждания</string>
     <string name="disable_swipe_to_answer">Смяна на плъзгането с докосване при отговаряне на обаждания</string>
     <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
     <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
diff --git a/app/src/main/res/values-ca/goodwy.xml b/app/src/main/res/values-ca/goodwy.xml
index 4f24b91..7f6c539 100755
--- a/app/src/main/res/values-ca/goodwy.xml
+++ b/app/src/main/res/values-ca/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Pantalla de trucada transparent</string>
     <string name="call_back_g">Cridar</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Trucada perduda</string>
     <string name="missed_calls_g">Trucades perdudes</string>
     <string name="missed_call_notifications_g">Notificacions de trucades perdudes</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-ca/strings.xml b/app/src/main/res/values-ca/strings.xml
index 64e83b5..394866a 100644
--- a/app/src/main/res/values-ca/strings.xml
+++ b/app/src/main/res/values-ca/strings.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">Marcador</string>
     <string name="default_phone_app_prompt">Fes que aquesta aplicació sigui l\'aplicació predeterminada de telèfon</string>
     <string name="allow_displaying_over_other_apps">Permeteu la visualització sobre d\'altres aplicacions per a un comportament fiable</string>
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Auriculars amb cable</string>
     <string name="audio_route_wired_or_earpiece">Amb cable o auricular</string>
     <string name="choose_audio_route">Trieu la sortida d\'àudio</string>
-    <string name="calling_blocked_number">El número al qual esteu trucant està bloquejat</string>
     <!-- Speed dial -->
     <string name="speed_dial">Marcatge ràpid</string>
     <string name="manage_speed_dial">Gestiona el marcatge ràpid</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Desactiva el sensor de proximitat durant les trucades</string>
     <string name="disable_swipe_to_answer">Substitueix el lliscament en respondre a les trucades entrants per fer clic</string>
     <string name="show_incoming_calls_full_screen">Mostra sempre les trucades entrants a pantalla completa</string>
-    <string name="hide_dialpad_numbers">Oculta els números del teclat numèric</string>
     <!-- FAQ -->
     <string name="faq_1_title">Sento trucades entrants, però la pantalla no s\'encén. Què puc fer\?</string>
     <string name="faq_1_text">Aquests problemes poden tenir moltes raons específiques del dispositiu i del sistema, difícils de dir en general. Hauríeu de mirar per la configuració del dispositiu i assegurar-vos que l\'aplicació pugui aparèixer en segon pla i permetre que es mostri sobre altres aplicacions.</string>
diff --git a/app/src/main/res/values-cs/goodwy.xml b/app/src/main/res/values-cs/goodwy.xml
index 7ab1894..7a25332 100755
--- a/app/src/main/res/values-cs/goodwy.xml
+++ b/app/src/main/res/values-cs/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Průhledná obrazovka hovoru</string>
     <string name="call_back_g">Zavolat</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Zmeškaný hovor</string>
     <string name="missed_calls_g">Zmeškané hovory</string>
     <string name="missed_call_notifications_g">Oznámení o zmeškaných hovorech</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-cs/strings.xml b/app/src/main/res/values-cs/strings.xml
index bece645..f71f1f7 100644
--- a/app/src/main/res/values-cs/strings.xml
+++ b/app/src/main/res/values-cs/strings.xml
@@ -54,13 +54,12 @@
     <string name="call_add">Přidat hovor</string>
     <string name="conference_manage">Spravovat konferenční hovor</string>
     <string name="conference">Konference</string>
-    <string name="audio_route_speaker">Reproduktor</string>
-    <string name="audio_route_earpiece">Sluchátka</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Náhlavní souprava s kabelem</string>
-    <string name="audio_route_wired_or_earpiece">Kabel nebo sluchátka</string>
-    <string name="choose_audio_route">Vybrat směrování zvuku</string>
-    <string name="calling_blocked_number">Číslo, které voláte, je blokované</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Rychlé vytáčení</string>
     <string name="manage_speed_dial">Spravovat rychlá vytáčení</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Vypnout senzor přiblížení během hovoru</string>
     <string name="disable_swipe_to_answer">Nahradit přejetí prstem při odpovídání na příchozí hovory za klepnutí</string>
     <string name="show_incoming_calls_full_screen">Vždy zobrazovat příchozí hovory na celou obrazovku</string>
-    <string name="hide_dialpad_numbers">Skrýt čísla číselníku</string>
     <!-- FAQ -->
     <string name="faq_1_title">Slyším příchozí hovor, ale obrazovka se nezapne. Co mohu dělat\?</string>
     <string name="faq_1_text">Takové problémy mohou mít mnoho důvodů specifických pro zařízení a systém, takže je těžké říci něco obecně. Měli byste zkontrolovat nastavení zařízení a ujistit se, že se aplikace může otevřít, když běží na pozadí, a umožnit zobrazení přes jiné aplikace.</string>
diff --git a/app/src/main/res/values-da/goodwy.xml b/app/src/main/res/values-da/goodwy.xml
index d709396..7f31a64 100755
--- a/app/src/main/res/values-da/goodwy.xml
+++ b/app/src/main/res/values-da/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Gennemsigtig opkaldsskærm</string>
     <string name="call_back_g">Kalde</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Ubesvaret opkald</string>
     <string name="missed_calls_g">Ubesvarede opkald</string>
     <string name="missed_call_notifications_g">Meddelelser om ubesvarede opkald</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-da/strings.xml b/app/src/main/res/values-da/strings.xml
index bfeee42..3b23f9a 100644
--- a/app/src/main/res/values-da/strings.xml
+++ b/app/src/main/res/values-da/strings.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">Opkald</string>
     <string name="default_phone_app_prompt">Vælg venligst denne app som standard til opkald</string>
     <string name="allow_displaying_over_other_apps">Tillad venligst visning over andre apps for pålidelig adfærd</string>
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Hurtigopkald</string>
     <string name="manage_speed_dial">Administrér hurtigopkald</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Deaktivér nærhedssensor under opkald</string>
     <string name="disable_swipe_to_answer">Erstat swipe ved besvarelse af indgående opkald med at klikke på</string>
     <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
     <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
diff --git a/app/src/main/res/values-de/goodwy.xml b/app/src/main/res/values-de/goodwy.xml
index f886854..0c8ba46 100755
--- a/app/src/main/res/values-de/goodwy.xml
+++ b/app/src/main/res/values-de/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Transparenter Anrufbildschirm</string>
     <string name="call_back_g">Rufen</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Verpasster Anruf</string>
     <string name="missed_calls_g">Verpasste Anrufe</string>
     <string name="missed_call_notifications_g">Benachrichtigungen über verpasste Anrufe</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
index 52cd2a3..8199104 100644
--- a/app/src/main/res/values-de/strings.xml
+++ b/app/src/main/res/values-de/strings.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Schlichtes Telefon</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">Telefon</string>
     <string name="default_phone_app_prompt">Bitte machen Sie diese Anwendung zur Standard-Telefonanwendung</string>
     <string name="allow_displaying_over_other_apps">Bitte erlauben Sie die Anzeige über andere Anwendungen für ein zuverlässiges Verhalten</string>
@@ -10,9 +10,9 @@
     <string name="no_previous_calls">Anrufliste ist leer</string>
     <string name="could_not_access_the_call_history">Kein Zugriff auf Anrufliste</string>
     <string name="request_access">Zugriff anfordern</string>
-    <string name="remove_confirmation">Sollen wirklich die ausgewählten Einträge aus der Anrufliste gelöscht werden\?</string>
-    <string name="clear_history_confirmation">Soll wirklich die gesamte Anrufliste gelöscht werden\?</string>
-    <string name="show_grouped_calls">Gruppierte Anrufe anzeigen</string>
+    <string name="remove_confirmation">Ausgewählte Anrufe definitiv aus der Anrufliste löschen\?</string>
+    <string name="clear_history_confirmation">Sicher, dass die gesamte Anrufliste gelöscht werden soll\?</string>
+    <string name="show_grouped_calls">Gruppierte Anrufe zeigen</string>
     <string name="clear_call_history">Anrufliste löschen</string>
     <string name="show_call_details">Anrufdetails anzeigen</string>
     <!-- Dialpad -->
@@ -24,9 +24,9 @@
     <string name="dialpad_vibrations">Vibration bei Tastendruck auf das Wähltastenfeld</string>
     <!-- Dialer -->
     <string name="dialer">Telefon</string>
-    <string name="accept">Annehmen</string>
+    <string name="accept">akzeptieren</string>
     <string name="accept_call">Anruf annehmen</string>
-    <string name="decline">Ablehnen</string>
+    <string name="decline">ablehnen</string>
     <string name="decline_call">Anruf ablehnen</string>
     <string name="unknown_caller">Unbekannter Anruf</string>
     <string name="is_calling">Ruft an …</string>
@@ -35,7 +35,7 @@
     <string name="call_ending">Anruf beenden</string>
     <string name="ongoing_call">Aktueller Anruf</string>
     <string name="select_sim">Wähle die SIM-Karte für diesen Anruf aus</string>
-    <string name="always_use_this_sim">Für diese Nummer immer diese SIM-Karte verwenden</string>
+    <string name="always_use_this_sim">Für diese Nummer immer diese SIM-Karte benutzen</string>
     <string name="unset_default_sim">Als Standard-SIM abwählen</string>
     <string name="calls">Anrufe</string>
     <string name="turn_microphone_on">Mikrofon einschalten</string>
@@ -55,12 +55,11 @@
     <string name="conference_manage">Telefonkonferenz verwalten</string>
     <string name="conference">Konferenz</string>
     <string name="audio_route_speaker">Lautsprecher</string>
-    <string name="audio_route_earpiece">Kopfhörer</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
     <string name="audio_route_wired_headset">Kabelgebundenes Headset</string>
-    <string name="audio_route_wired_or_earpiece">Kabelgebunden oder über Kopfhörer</string>
-    <string name="choose_audio_route">Audioausgang wählen</string>
-    <string name="calling_blocked_number">Die angerufene Nummer ist gesperrt</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Kurzwahl</string>
     <string name="manage_speed_dial">Kurzwahlnummern verwalten</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Näherungssensor bei Anrufen deaktivieren</string>
     <string name="disable_swipe_to_answer">Anrufe durch Klicken statt durch Streichen annehmen</string>
     <string name="show_incoming_calls_full_screen">Eingehende Anrufe immer im Vollbildmodus anzeigen</string>
-    <string name="hide_dialpad_numbers">Wähltastenfeld-Nummern ausblenden</string>
     <!-- FAQ -->
     <string name="faq_1_title">Ich höre eingehende Anrufe, aber der Bildschirm schaltet sich nicht ein. Was kann ich tun\?</string>
     <string name="faq_1_text">Eine allgemeine Antwort auf die Frage ist schwer, denn solche Probleme können viele geräte- und systemspezifische Gründe haben. Du solltest dich in den Einstellungen des Geräts umsehen und sicherstellen, dass die App im Hintergrund angezeigt werden darf und die Einblendung über anderen Apps erlaubt ist.</string>
@@ -79,4 +77,4 @@
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
     -->
-</resources>
+</resources>
\ No newline at end of file
diff --git a/app/src/main/res/values-el/goodwy.xml b/app/src/main/res/values-el/goodwy.xml
index 2026b30..5924c4a 100755
--- a/app/src/main/res/values-el/goodwy.xml
+++ b/app/src/main/res/values-el/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Διαφανής οθόνη κλήσεων</string>
     <string name="call_back_g">Τηλεφωνώ</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Αναπάντητη κλήση</string>
     <string name="missed_calls_g">Αναπάντητες κλήσεις</string>
     <string name="missed_call_notifications_g">Ειδοποιήσεις αναπάντητης κλήσης</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-el/strings.xml b/app/src/main/res/values-el/strings.xml
index 85d3e1a..cb3663d 100644
--- a/app/src/main/res/values-el/strings.xml
+++ b/app/src/main/res/values-el/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Ενσύρματα κεφαλής</string>
     <string name="audio_route_wired_or_earpiece">Ενσύρματα ή ακουστικά</string>
     <string name="choose_audio_route">Επιλογή διαδρομής ήχου</string>
-    <string name="calling_blocked_number">Ο αριθμός που καλείτε είναι αποκλεισμένος</string>
     <!-- Speed dial -->
     <string name="speed_dial">Ταχεία κλήση</string>
     <string name="manage_speed_dial">Διαχείριση ταχείας κλήσης</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Απενεργοποίηση του αισθητήρα εγγύτητας κατά τη διάρκεια κλήσεων</string>
     <string name="disable_swipe_to_answer">Αντικατάσταση Σάρωσης με Κλικ στην απάντηση εισερχόμενων κλήσεων</string>
     <string name="show_incoming_calls_full_screen">Να εμφανίζονται πάντα οι εισερχόμενες κλήσεις σε πλήρη οθόνη</string>
-    <string name="hide_dialpad_numbers">Απόκρυψη αριθμών πληκτρολογίου</string>
     <!-- FAQ -->
     <string name="faq_1_title">Ακούω εισερχόμενες κλήσεις, αλλά η οθόνη δεν ανάβει. Τι μπορώ να κάνω;</string>
     <string name="faq_1_text">Τέτοια θέματα μπορεί να έχουν πολλούς λόγους που σχετίζονται με τη συσκευή και το σύστημα, και είναι δύσκολο να ειπωθούν γενικά. Θα πρέπει να ψάξετε στις ρυθμίσεις της συσκευής σας και να βεβαιωθείτε ότι η εφαρμογή επιτρέπεται να εμφανίζεται όταν βρίσκεται στο παρασκήνιο και να επιτρέπει την εμφάνισή της πάνω από άλλες εφαρμογές.</string>
@@ -79,4 +77,4 @@
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
     -->
-</resources>
\ No newline at end of file
+</resources>
diff --git a/app/src/main/res/values-eo/goodwy.xml b/app/src/main/res/values-eo/goodwy.xml
index c398c9a..3c9f2b5 100755
--- a/app/src/main/res/values-eo/goodwy.xml
+++ b/app/src/main/res/values-eo/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Travidebla Voka Ekrano</string>
     <string name="call_back_g">Voki reen</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Maltrafita voko</string>
     <string name="missed_calls_g">Maltrafitaj vokoj</string>
     <string name="missed_call_notifications_g">Sciigoj pri maltrafvoko</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-eo/strings.xml b/app/src/main/res/values-eo/strings.xml
index 7a673dc..d0c1e92 100644
--- a/app/src/main/res/values-eo/strings.xml
+++ b/app/src/main/res/values-eo/strings.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">Dialer</string>
     <string name="default_phone_app_prompt">Please make this app the default Phone app</string>
     <string name="allow_displaying_over_other_apps">Please allow displaying over other apps for reliable behaviour</string>
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Speed dial</string>
     <string name="manage_speed_dial">Manage speed dial</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Disable proximity sensor during calls</string>
     <string name="disable_swipe_to_answer">Replace swiping at responding to incoming calls with clicking</string>
     <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
     <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
diff --git a/app/src/main/res/values-es/goodwy.xml b/app/src/main/res/values-es/goodwy.xml
index 44a4d20..ab674f7 100755
--- a/app/src/main/res/values-es/goodwy.xml
+++ b/app/src/main/res/values-es/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Pantalla de llamada transparente</string>
     <string name="call_back_g">Llamar</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Llamada perdida</string>
     <string name="missed_calls_g">Llamadas perdidas</string>
     <string name="missed_call_notifications_g">Notificaciones de llamadas perdidas</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
index cb9a4c5..02a2183 100644
--- a/app/src/main/res/values-es/strings.xml
+++ b/app/src/main/res/values-es/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Auricular con cable</string>
     <string name="audio_route_wired_or_earpiece">Auricular inalámbrico</string>
     <string name="choose_audio_route">Elija la salida del audio</string>
-    <string name="calling_blocked_number">El número al que llamas está bloqueado</string>
     <!-- Speed dial -->
     <string name="speed_dial">Marcado rápido</string>
     <string name="manage_speed_dial">Administrar marcado rápido</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Deshabilitar el sensor de proximidad durante las llamadas</string>
     <string name="disable_swipe_to_answer">Reemplazar deslizar para responder llamadas entrantes a pulsar</string>
     <string name="show_incoming_calls_full_screen">Siempre mostrar llamadas entrantes en pantalla completa</string>
-    <string name="hide_dialpad_numbers">Ocultar los números del teclado</string>
     <!-- FAQ -->
     <string name="faq_1_title">Escucho las llamadas entrantes, pero la pantalla no se enciende. ¿Qué puedo hacer\?</string>
     <string name="faq_1_text">Estos problemas pueden deberse a muchas razones específicas del dispositivo y del sistema, es difícil decirlo en general. Deberías mirar en la configuración de tu dispositivo y asegurarte de que la aplicación tiene permiso para aparecer cuando está en segundo plano y permitir la aplicación se muestre sobre otras aplicaciones.</string>
diff --git a/app/src/main/res/values-et/goodwy.xml b/app/src/main/res/values-et/goodwy.xml
index ade9ef7..706c62c 100755
--- a/app/src/main/res/values-et/goodwy.xml
+++ b/app/src/main/res/values-et/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Läbipaistev kõneekraan</string>
     <string name="call_back_g">Kutsuma</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Vastamata kõne</string>
     <string name="missed_calls_g">Vastamata kõned</string>
     <string name="missed_call_notifications_g">Vastamata kõne teatised</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-et/strings.xml b/app/src/main/res/values-et/strings.xml
index b254ecc..6a5e5b1 100644
--- a/app/src/main/res/values-et/strings.xml
+++ b/app/src/main/res/values-et/strings.xml
@@ -20,8 +20,8 @@
     <string name="asterisk">Tärn</string>
     <string name="hashtag">Teemaviide</string>
     <string name="call_number">Helista numbrile</string>
-    <string name="dialpad_beeps">Numbriklahvistiku nupu klõpsamisel esita helisignaali</string>
-    <string name="dialpad_vibrations">Numbriklahvistiku nupu klõpsamisel värista telefoni</string>
+    <string name="dialpad_beeps">Helisignaalide lubamine valimisnupu klõpsamisel</string>
+    <string name="dialpad_vibrations">Võimaldab vibratsiooni valimisnuppude klõpsamisel</string>
     <!-- Dialer -->
     <string name="dialer">Telefon</string>
     <string name="accept">Nõustu</string>
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Juhtmega kõrvaklapid</string>
     <string name="audio_route_wired_or_earpiece">Juhtmega või kõrvasisesed kõrvaklapid</string>
     <string name="choose_audio_route">Vali heliruuting</string>
-    <string name="calling_blocked_number">Sa üritad helistada blokeeritud numbrile</string>
     <!-- Speed dial -->
     <string name="speed_dial">Kiirvalimine</string>
     <string name="speed_dial_label">Klõpsa numbrit ja seosta ta konkreetse telefoniraamatu kirjega. Hiljem saad samale numbrile pikalt vajutades alustada kõnet määratud telefoninumbrile.</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Kõnede ajaks lülita lähedusandur välja</string>
     <string name="disable_swipe_to_answer">Kõnele vastamisel kasuta viipamise asemel klõpsimist</string>
     <string name="show_incoming_calls_full_screen">Kuvage sissetulevad kõned alati täisekraanil</string>
-    <string name="hide_dialpad_numbers">Peida numbriklahvistik</string>
     <!-- FAQ -->
     <string name="faq_1_title">Ma kuulen sissetulevaid kõnesid, kuid ekraan ei lülitu sisse. Mida ma saan teha\?</string>
     <string name="faq_1_text">Sellistel probleemidel võib olla palju seadme- ja süsteemispetsiifilisi põhjusi, raske öelda üldiselt. Peaksite oma seadme seadetes ringi vaatama ja veenduma, et rakendusel on lubatud taustal hüpata ja lubada kuvamist üle teiste rakenduste.</string>
diff --git a/app/src/main/res/values-fi/goodwy.xml b/app/src/main/res/values-fi/goodwy.xml
index 13ac3ee..15f0aac 100755
--- a/app/src/main/res/values-fi/goodwy.xml
+++ b/app/src/main/res/values-fi/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Läpinäkyvä puhelunäyttö</string>
     <string name="call_back_g">Kutsua</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Vastaamaton puhelu</string>
     <string name="missed_calls_g">Vastaamattomat puhelut</string>
     <string name="missed_call_notifications_g">Vastaamattomien puhelujen ilmoitukset</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-fi/strings.xml b/app/src/main/res/values-fi/strings.xml
index 6133cc4..f089918 100644
--- a/app/src/main/res/values-fi/strings.xml
+++ b/app/src/main/res/values-fi/strings.xml
@@ -1,29 +1,29 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Yksinkertainen puhelin</string>
-    <string name="app_launcher_name">Puhelin</string>
-    <string name="default_phone_app_prompt">Tää tästä oletussovellus puheluille</string>
-    <string name="allow_displaying_over_other_apps">Salli näkyminen muiden sovellusten päällä, jotta sovellus toimii luotettavasti</string>
+    <string name="app_name">Yksinkertainen Numerovalitsin</string>
+    <string name="app_launcher_name">Numerovalitsin</string>
+    <string name="default_phone_app_prompt">Aseta tämä sovellus oletukseksi puheluille</string>
+    <string name="allow_displaying_over_other_apps">Hyväksy näkyminen muiden sovellusten päällä, jotta sovellus toimii luotettavasti</string>
     <!-- Contacts -->
-    <string name="could_not_access_contacts">Yhteystietojen käyttöoikeutta ei ole</string>
+    <string name="could_not_access_contacts">Ei käyttöoikeutta yhteystietoihin</string>
     <!-- Recents -->
-    <string name="no_previous_calls">Aiempia puheluita ei löytynyt</string>
-    <string name="could_not_access_the_call_history">Puheluhistorian käyttöoikeutta ei ole</string>
+    <string name="no_previous_calls">Ei puheluita</string>
+    <string name="could_not_access_the_call_history">Ei käyttöoikeutta puheluhistoriaan</string>
     <string name="request_access">Pyydä käyttöoikeutta</string>
     <string name="remove_confirmation">Haluatko varmasti poistaa valitut kohteet puheluhistoriasta\?</string>
-    <string name="clear_history_confirmation">Haluatko varmasti tyhjentää puheluhistorian täysin\?</string>
+    <string name="clear_history_confirmation">Haluatko varmasti tyhjentää koko puheluhistorian\?</string>
     <string name="show_grouped_calls">Näytä ryhmitetyt puhelut</string>
     <string name="clear_call_history">Tyhjennä puheluhistoria</string>
     <string name="show_call_details">Näytä puhelun tiedot</string>
     <!-- Dialpad -->
-    <string name="dialpad">Numeronäppäimistö</string>
-    <string name="asterisk">Tähti</string>
-    <string name="hashtag">Ruutu</string>
+    <string name="dialpad">Valintanäppäimistö</string>
+    <string name="asterisk">Asteriski</string>
+    <string name="hashtag">Risuaita</string>
     <string name="call_number">Soita numeroon</string>
-    <string name="dialpad_beeps">Piippaa numeronäppäimistön painalluksista</string>
-    <string name="dialpad_vibrations">Värähdä numeronäppäimistön painalluksista</string>
+    <string name="dialpad_beeps">Äänimerkkien ottaminen käyttöön valintanäppäimen napsautuksen yhteydessä</string>
+    <string name="dialpad_vibrations">Ota värinät käyttöön valintanäppäimen napsautuksista</string>
     <!-- Dialer -->
-    <string name="dialer">Puhelin</string>
+    <string name="dialer">Numerovalitsin</string>
     <string name="accept">Hyväksy</string>
     <string name="accept_call">Vastaa puheluun</string>
     <string name="decline">Hylkää</string>
@@ -33,48 +33,46 @@
     <string name="dialing">Soitetaan…</string>
     <string name="call_ended">Puhelu päättyi</string>
     <string name="call_ending">Puhelu päättyy</string>
-    <string name="ongoing_call">Puhelu on käynnissä</string>
-    <string name="select_sim">Valitse puheluun käytettävä liittymä</string>
-    <string name="always_use_this_sim">Soita tähän numeroon aina tällä liittymällä</string>
-    <string name="unset_default_sim">Poista oletusliittymän määritys</string>
+    <string name="ongoing_call">Lähtevä puhelu</string>
+    <string name="select_sim">Valitse SIM-kortti puhelulle</string>
+    <string name="always_use_this_sim">Käytä tälle numerolle aina tätä SIM-korttia</string>
+    <string name="unset_default_sim">Poista oletus-SIM</string>
     <string name="calls">Puhelut</string>
-    <string name="turn_microphone_on">Ota mikrofoni käyttöön</string>
-    <string name="turn_microphone_off">Poista mikrofoni käytöstä</string>
-    <string name="turn_speaker_on">Ota kaiutin käyttöön</string>
-    <string name="turn_speaker_off">Poista kaiutin käytöstä</string>
-    <string name="show_dialpad">Näytä numeronäppäimet</string>
-    <string name="hide_dialpad">Piilota numeronäppäimet</string>
+    <string name="turn_microphone_on">Laita mikrofoni päälle</string>
+    <string name="turn_microphone_off">Laita mikrofoni pois päältä</string>
+    <string name="turn_speaker_on">Laita kaiutin päälle</string>
+    <string name="turn_speaker_off">Laita kaiutin pois päältä</string>
+    <string name="show_dialpad">Näytä valintanäppäimistö</string>
+    <string name="hide_dialpad">Piilota valintanäppäimistö</string>
     <string name="end_call">Lopeta puhelu</string>
     <string name="hold_call">Puhelu pitoon</string>
     <string name="resume_call">Palaa puheluun</string>
     <string name="call_on_hold">Pidossa</string>
-    <string name="call_swap">Vaihda puhelua</string>
+    <string name="call_swap">Vaihda puheluita</string>
     <string name="call_merge">Yhdistä puhelut</string>
     <string name="call_split">Jaa puhelu</string>
     <string name="call_add">Lisää puhelu</string>
-    <string name="conference_manage">Hallitse ryhmäpuhelua</string>
-    <string name="conference">Ryhmäpuhelu</string>
-    <string name="audio_route_speaker">Kaiutin</string>
-    <string name="audio_route_earpiece">Kuuloke</string>
+    <string name="conference_manage">Hallinnoi puhelinneuvottelua</string>
+    <string name="conference">Neuvottelu</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Langallinen kuulokemikrofoni</string>
-    <string name="audio_route_wired_or_earpiece">Langallinen tai kuuloke</string>
-    <string name="choose_audio_route">Vslitse äänen reitti</string>
-    <string name="calling_blocked_number">Soitettava numero on estetty</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Pikavalinta</string>
-    <string name="manage_speed_dial">Hallitse pikavalintoja</string>
-    <string name="speed_dial_label">Paina numeroa määrittääksesi siihen yhteystiedon. Voit soittaa yhteystiedolle painamalla puhelimen numeronäppäimistöä pitkään.</string>
+    <string name="manage_speed_dial">Pikavalinnan asetukset</string>
+    <string name="speed_dial_label">Paina numeroa asettaaksesi sille yhteystiedon. Yhteystiedolle soitetaan, kun painat numeroa pitkään numerovalitsimessa.</string>
     <!-- Settings -->
-    <string name="group_subsequent_calls">Ryhmittele samojen numeroiden puhelut puheluhistoriassa</string>
-    <string name="open_dialpad_by_default">Avaa sovellus numeronäppäimiin</string>
-    <string name="disable_proximity_sensor">Poista läheisyysanturi käytöstä puheluiden ajaksi</string>
+    <string name="group_subsequent_calls">Ryhmitä saman numeron peräkkäiset puhelut puheluhistoriassa</string>
+    <string name="open_dialpad_by_default">Avaa numeronäppäimistö, kun sovellus avataan</string>
+    <string name="disable_proximity_sensor">Poista läheisyysanturi käytöstä puheluiden aikana</string>
     <string name="disable_swipe_to_answer">Vastaa puheluihin painalluksella pyyhkäisyn sijaan</string>
     <string name="show_incoming_calls_full_screen">Näytä saapuvat puhelut aina koko näytöllä</string>
-    <string name="hide_dialpad_numbers">Piilota numeronäppäimet</string>
     <!-- FAQ -->
-    <string name="faq_1_title">Kuulen saapuvat puhelut, mutta näyttö on pimeänä. Mitä voin tehdä\?</string>
-    <string name="faq_1_text">Tällaisiin ongelmiin voi olla monia laite- ja järjestelmäkohtaisia syitä, joiden yleistäminen on hankalaa. Kannattaa tutkia laitteen asetuksia ja varmistaa, että sovelluksella on oikeus ponnahtaa esiin taustalta ja näkyä muiden sovellusten päällä.</string>
+    <string name="faq_1_title">Kuulen saapuvat puhelut, mutta näyttö ei käynnisty. Mitä voin tehdä\?</string>
+    <string name="faq_1_text">Tällaisiin ongelmiin voi olla monia laite- ja järjestelmäkohtaisia syitä, joita on vaikea sanoa yleisesti. Kannattaa tutkia laitteen asetuksia ja varmistaa, että sovelluksen on sallittu ponnahtaa esiin, kun se on taustalla, ja sallia sen näyttäminen muiden sovellusten yläpuolella.</string>
     <!--
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
diff --git a/app/src/main/res/values-fr/goodwy.xml b/app/src/main/res/values-fr/goodwy.xml
index 9c98ffb..18d507d 100755
--- a/app/src/main/res/values-fr/goodwy.xml
+++ b/app/src/main/res/values-fr/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Écran d’appel transparent</string>
     <string name="call_back_g">Appeler</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Appel manqué</string>
     <string name="missed_calls_g">Appels manqués</string>
     <string name="missed_call_notifications_g">Notifications d’appels manqués</string>
@@ -19,17 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="many">%d timers are running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
index 49b87b2..c03c6e7 100644
--- a/app/src/main/res/values-fr/strings.xml
+++ b/app/src/main/res/values-fr/strings.xml
@@ -54,13 +54,12 @@
     <string name="call_add">Ajouter un appel</string>
     <string name="conference_manage">Gérer une conférence téléphonique</string>
     <string name="conference">Conférence</string>
-    <string name="audio_route_speaker">Haut-parleur</string>
-    <string name="audio_route_earpiece">Écouteur</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Casque filaire</string>
-    <string name="audio_route_wired_or_earpiece">Filaire ou écouteur</string>
-    <string name="choose_audio_route">Choisir la sortie audio</string>
-    <string name="calling_blocked_number">Le numéro que vous appelez est bloqué</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Numérotation rapide</string>
     <string name="manage_speed_dial">Gérer la numérotation rapide</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Désactiver le capteur de proximité pendant les appels</string>
     <string name="disable_swipe_to_answer">Remplacer le balayage pour répondre aux appels entrants par un clic</string>
     <string name="show_incoming_calls_full_screen">Toujours afficher les appels entrants en plein écran</string>
-    <string name="hide_dialpad_numbers">Masquer les numéros du clavier</string>
     <!-- FAQ -->
     <string name="faq_1_title">J\'entends les appels entrants, mais l\'écran ne s\'allume pas. Que puis-je faire \?</string>
     <string name="faq_1_text">Ces problèmes peuvent avoir de nombreuses raisons spécifiques à l\'appareil et au système, il est difficile d\'en parler en général. Vous devriez consulter les paramètres de votre appareil et vous assurer que l\'application est autorisée à apparaître en arrière-plan et à s\'afficher au-dessus des autres applications.</string>
@@ -79,4 +77,4 @@
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
     -->
-</resources>
\ No newline at end of file
+</resources>
diff --git a/app/src/main/res/values-gl/goodwy.xml b/app/src/main/res/values-gl/goodwy.xml
index 559f3d9..de5db44 100755
--- a/app/src/main/res/values-gl/goodwy.xml
+++ b/app/src/main/res/values-gl/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Pantalla de chamada transparente</string>
     <string name="call_back_g">Devolver a chamada</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Chamada perdida</string>
     <string name="missed_calls_g">Chamadas perdidas</string>
     <string name="missed_call_notifications_g">Notificacións de chamadas perdidas</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-gl/strings.xml b/app/src/main/res/values-gl/strings.xml
index 8fcff92..33322e8 100644
--- a/app/src/main/res/values-gl/strings.xml
+++ b/app/src/main/res/values-gl/strings.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">Marcador</string>
     <string name="default_phone_app_prompt">Fai que sexa a aplición do Teléfono por predeterminada</string>
     <string name="allow_displaying_over_other_apps">Permite mostrala por riba doutras aplicacións para un comportamento fiable</string>
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Auriculares con cable</string>
     <string name="audio_route_wired_or_earpiece">Auriculares sen fíos</string>
     <string name="choose_audio_route">Escollela saida do audio</string>
-    <string name="calling_blocked_number">O número ao que estás chamando está bloqueado</string>
     <!-- Speed dial -->
     <string name="speed_dial">Marcación rápida</string>
     <string name="manage_speed_dial">Xestionar marcacións rápidas</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Desactivar sensor de proximidade durante as chamadas</string>
     <string name="disable_swipe_to_answer">Substituír o xesto de desprazar por un click para responder</string>
     <string name="show_incoming_calls_full_screen">Mostrar sempre as chamadas entrantes a pantalla enteira</string>
-    <string name="hide_dialpad_numbers">Ocultalos números do teclado</string>
     <!-- FAQ -->
     <string name="faq_1_title">Escoito chamadas entrantes, pero a pantalla non se acende. Que podo facer\?</string>
     <string name="faq_1_text">Estes problemas poden ter moitas razóns específicas do dispositivo e do sistema, difíciles de dicir en xeral. Debes mirar ao teu redor na configuración do teu dispositivo e asegurarte de que a aplicación pode aparecer cando está en segundo plano e permitir que se vexa sobre outras aplicacións.</string>
diff --git a/app/src/main/res/values-hr/goodwy.xml b/app/src/main/res/values-hr/goodwy.xml
index 7ff261a..e93f8a9 100755
--- a/app/src/main/res/values-hr/goodwy.xml
+++ b/app/src/main/res/values-hr/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Prozirni zaslon poziva</string>
     <string name="call_back_g">Poziv</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Propušteni poziv</string>
     <string name="missed_calls_g">Propušteni pozivi</string>
     <string name="missed_call_notifications_g">Obavijesti o propuštenim pozivima</string>
@@ -19,17 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="few">%d timers are running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-hr/strings.xml b/app/src/main/res/values-hr/strings.xml
index 22b7cb5..e1c0e0f 100644
--- a/app/src/main/res/values-hr/strings.xml
+++ b/app/src/main/res/values-hr/strings.xml
@@ -54,13 +54,12 @@
     <string name="call_add">Dodaj poziv</string>
     <string name="conference_manage">Upravljaj konferencijskim pozivima</string>
     <string name="conference">Konferencija</string>
-    <string name="audio_route_speaker">Zvučnik</string>
-    <string name="audio_route_earpiece">Slušalica</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Analogna slušalica s mikrofonom</string>
-    <string name="audio_route_wired_or_earpiece">Analogno ili slušalica</string>
-    <string name="choose_audio_route">Odaberi audio izlaz</string>
-    <string name="calling_blocked_number">Broj koji zoveš je blokiran</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Brzo biranje</string>
     <string name="manage_speed_dial">Upravljaj brzim biranjem</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Isključi senzor blizine tijekom poziva</string>
     <string name="disable_swipe_to_answer">Zamijeni povlačenje prstom za odgovaranje na dolazne pozive pritiskom</string>
     <string name="show_incoming_calls_full_screen">Uvijek prikaži dolazne pozive u cjeloekranskom prikazu</string>
-    <string name="hide_dialpad_numbers">Sakrij brojeve tipkovnice telefona</string>
     <!-- FAQ -->
     <string name="faq_1_title">Čujem dolazne pozive, ali ekran se ne uključuje. Što mogu učiniti\?</string>
     <string name="faq_1_text">Takvi problemi mogu imati mnogo razloga specifičnih za uređaj i sustav, koje je teško reći općenito. Trebali biste pogledati uokolo u postavkama svog uređaja i provjeriti je li aplikaciji dopušteno iskakanje u pozadini i dopuštenje prikazivanja preko drugih aplikacija.</string>
diff --git a/app/src/main/res/values-hu/goodwy.xml b/app/src/main/res/values-hu/goodwy.xml
index 85a20db..e31896f 100755
--- a/app/src/main/res/values-hu/goodwy.xml
+++ b/app/src/main/res/values-hu/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Átlátszó hívás képernyő</string>
     <string name="call_back_g">Hív</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Nem fogadott hívás</string>
     <string name="missed_calls_g">Nem fogadott hívások</string>
     <string name="missed_call_notifications_g">Nem fogadott hívásokról szóló értesítések</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-hu/strings.xml b/app/src/main/res/values-hu/strings.xml
index a40e8bc..06d17f4 100644
--- a/app/src/main/res/values-hu/strings.xml
+++ b/app/src/main/res/values-hu/strings.xml
@@ -54,13 +54,12 @@
     <string name="call_add">Hívás hozzáadása</string>
     <string name="conference_manage">Konferenciahívás kezelése</string>
     <string name="conference">Konferencia</string>
-    <string name="audio_route_speaker">Hangszóró</string>
-    <string name="audio_route_earpiece">Fülhallgató</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Vezetékes fejhallgató</string>
-    <string name="audio_route_wired_or_earpiece">Vezetékes vagy vezeték nélküli fülhallgató</string>
-    <string name="choose_audio_route">Válasszon hangkimenetet</string>
-    <string name="calling_blocked_number">A hívott szám blokkolva van</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Gyors tárcsázó</string>
     <string name="manage_speed_dial">Gyors tárcsázó kezelése</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Közelségérzékelő kikapcsolása a hívások során</string>
     <string name="disable_swipe_to_answer">Csúsztatás kattintásra cserélése a bejövő hívásoknál</string>
     <string name="show_incoming_calls_full_screen">Bejövő hívások megjelenítése mindig teljes képernyőn</string>
-    <string name="hide_dialpad_numbers">Tárcsázószámok elrejtése</string>
     <!-- FAQ -->
     <string name="faq_1_title">Bejövő hívást hallok, de a képernyő nem kapcsol be. Mit tehetek\?</string>
     <string name="faq_1_text">Az ilyen problémáknak számos eszköz- és rendszerfüggő oka lehet, általánosságban nehéz megmondani. Nézzen körül az eszközbeállításokban, és győződjön meg róla, hogy az alkalmazás előbújhat-e a háttérből, és megjelenhet-e más alkalmazások felett.</string>
@@ -79,4 +77,4 @@
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
     -->
-</resources>
\ No newline at end of file
+</resources>
diff --git a/app/src/main/res/values-in/goodwy.xml b/app/src/main/res/values-in/goodwy.xml
index 50a9a05..57ed3fd 100755
--- a/app/src/main/res/values-in/goodwy.xml
+++ b/app/src/main/res/values-in/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Layar Panggilan Transparan</string>
     <string name="call_back_g">Menelepon kembali</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Panggilan tidak terjawab</string>
     <string name="missed_calls_g">Panggilan tidak terjawab</string>
     <string name="missed_call_notifications_g">Notifikasi panggilan tak terjawab</string>
@@ -19,15 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-in/strings.xml b/app/src/main/res/values-in/strings.xml
index 8bf75f2..9b4d305 100644
--- a/app/src/main/res/values-in/strings.xml
+++ b/app/src/main/res/values-in/strings.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">Dialer</string>
     <string name="default_phone_app_prompt">Mohon buat aplikasi ini sebagai aplikasi Telepon bawaan</string>
     <string name="allow_displaying_over_other_apps">Mohon izinkan tampilkan di atas aplikasi lain untuk perilaku yang andal</string>
@@ -20,8 +20,8 @@
     <string name="asterisk">Bintang</string>
     <string name="hashtag">Pagar</string>
     <string name="call_number">Nomor telepon</string>
-    <string name="dialpad_beeps">Aktifkan suara ketika tombol papan ditekan</string>
-    <string name="dialpad_vibrations">Aktifkan getaran ketika tombol papan ditekan</string>
+    <string name="dialpad_beeps">Enable beeps on dialpad button clicks</string>
+    <string name="dialpad_vibrations">Enable vibrations on dialpad button clicks</string>
     <!-- Dialer -->
     <string name="dialer">Dialer</string>
     <string name="accept">Menerima</string>
@@ -45,22 +45,21 @@
     <string name="show_dialpad">Tampilkan dialpad</string>
     <string name="hide_dialpad">Sembunyikan dialpad</string>
     <string name="end_call">Akhiri panggilan</string>
-    <string name="hold_call">Jeda panggilan</string>
-    <string name="resume_call">Lanjutkan panggilan</string>
-    <string name="call_on_hold">Dijeda</string>
-    <string name="call_swap">Ubah panggilan</string>
-    <string name="call_merge">Gabungkan panggilan</string>
-    <string name="call_split">Pisahkan panggilan</string>
-    <string name="call_add">Tambahkan panggilan</string>
-    <string name="conference_manage">Kelola panggilan konferensi</string>
-    <string name="conference">Konferensi</string>
+    <string name="hold_call">Hold call</string>
+    <string name="resume_call">Resume call</string>
+    <string name="call_on_hold">On Hold</string>
+    <string name="call_swap">Swap calls</string>
+    <string name="call_merge">Merge calls</string>
+    <string name="call_split">Split call</string>
+    <string name="call_add">Add call</string>
+    <string name="conference_manage">Manage conference call</string>
+    <string name="conference">Conference</string>
     <string name="audio_route_speaker">Speaker</string>
-    <string name="audio_route_earpiece">Earphone</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Headset Kabel</string>
-    <string name="audio_route_wired_or_earpiece">Kabel atau Earphone</string>
-    <string name="choose_audio_route">Pilih rute audio</string>
-    <string name="calling_blocked_number">Nomor yang Anda panggil diblokir</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Panggilan cepat</string>
     <string name="manage_speed_dial">Kelola panggilan cepat</string>
@@ -70,13 +69,12 @@
     <string name="open_dialpad_by_default">Buka dialpad secara default ketika aplikasi dibuka</string>
     <string name="disable_proximity_sensor">Nonaktifkan sensor kedekatan saat ada di panggilan</string>
     <string name="disable_swipe_to_answer">Ganti menggesek saat menanggapi panggilan masuk dengan mengklik</string>
-    <string name="show_incoming_calls_full_screen">Selalu tampilkan panggilan masuk dengan layar penuh</string>
-    <string name="hide_dialpad_numbers">Sembunyikan nomor tombol papan</string>
+    <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
     <!-- FAQ -->
-    <string name="faq_1_title">Saya mendengar panggilan masuk, tetapi layarnya tidak menyala\? Apa yang bisa saya lakukan\?</string>
-    <string name="faq_1_text">Beberapa masalah dapat memiliki alasan perangkat dan sistem spesifik, tidak mudah untuk diberi tahu secara umum. Anda seharusnya melihat dalam pengaturan perangkat Anda dan memastikan bahwa aplikasi diperbolehkan untuk muncul ketika dalam latar belakang dan memperbolehkan menampilkan di atas aplikasi lain.</string>
+    <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
+    <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
     <!--
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
     -->
-</resources>
\ No newline at end of file
+</resources>
diff --git a/app/src/main/res/values-it/goodwy.xml b/app/src/main/res/values-it/goodwy.xml
index 48f4482..f71a824 100755
--- a/app/src/main/res/values-it/goodwy.xml
+++ b/app/src/main/res/values-it/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Schermata di chiamata trasparente</string>
     <string name="call_back_g">Chiamare</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Chiamata persa</string>
     <string name="missed_calls_g">Chiamate perse</string>
     <string name="missed_call_notifications_g">Notifiche di chiamata senza risposta</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
index 5f25033..34191d8 100644
--- a/app/src/main/res/values-it/strings.xml
+++ b/app/src/main/res/values-it/strings.xml
@@ -54,13 +54,12 @@
     <string name="call_add">Aggiungi una chiamata</string>
     <string name="conference_manage">Gestisci la teleconferenza</string>
     <string name="conference">Conferenza</string>
-    <string name="audio_route_speaker">Altoparlante</string>
-    <string name="audio_route_earpiece">Auricolare</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Cuffia cablata</string>
-    <string name="audio_route_wired_or_earpiece">Cablato o auricolare</string>
-    <string name="choose_audio_route">Scegli l\'uscita audio</string>
-    <string name="calling_blocked_number">Il numero che stai chiamando è bloccato</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Contatti veloci</string>
     <string name="manage_speed_dial">Gestisci i contatti veloci</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Disattiva il sensore di prossimità durante le chiamate</string>
     <string name="disable_swipe_to_answer">Sostituisci lo scorrimento nel rispondere alle chiamate in arrivo con un clic</string>
     <string name="show_incoming_calls_full_screen">Visualizza sempre le chiamate in arrivo a schermo intero</string>
-    <string name="hide_dialpad_numbers">Nascondi i numeri del tastierino</string>
     <!-- FAQ -->
     <string name="faq_1_title">Sento le chiamate in arrivo, ma lo schermo non si accende. Cosa posso fare\?</string>
     <string name="faq_1_text">Tali problemi possono avere molte ragioni specifiche per il dispositivo e il sistema, è difficile identificarle in generale. Dovresti dare un\'occhiata alle impostazioni del dispositivo e assicurarti che l\'app sia autorizzata a comparire quando è in background e che permetta la visualizzazione sopra le altre app.</string>
@@ -79,4 +77,4 @@
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
     -->
-</resources>
\ No newline at end of file
+</resources>
diff --git a/app/src/main/res/values-iw/goodwy.xml b/app/src/main/res/values-iw/goodwy.xml
index 04c9c91..2b1ead9 100755
--- a/app/src/main/res/values-iw/goodwy.xml
+++ b/app/src/main/res/values-iw/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">מסך שיחה שקוף</string>
     <string name="call_back_g">טלפן</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">שיחה שלא נענתה</string>
     <string name="missed_calls_g">שיחות שלא נענו</string>
     <string name="missed_call_notifications_g">התראות על שיחות שלא נענו</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-iw/strings.xml b/app/src/main/res/values-iw/strings.xml
index b28701e..1c8c7bc 100644
--- a/app/src/main/res/values-iw/strings.xml
+++ b/app/src/main/res/values-iw/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">חיוג מהיר</string>
     <string name="manage_speed_dial">נהל חיוג מהיר</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">השבת את חיישן הקרבה במהלך שיחות</string>
     <string name="disable_swipe_to_answer">החלף החלקה בתגובה לשיחות נכנסות בלחיצה</string>
     <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
     <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
diff --git a/app/src/main/res/values-ja/goodwy.xml b/app/src/main/res/values-ja/goodwy.xml
index 7ba6681..b0c4a45 100755
--- a/app/src/main/res/values-ja/goodwy.xml
+++ b/app/src/main/res/values-ja/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">透過的な通話画面</string>
     <string name="call_back_g">呼び出し</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">不在着信</string>
     <string name="missed_calls_g">不在着信</string>
     <string name="missed_call_notifications_g">不在着信通知</string>
@@ -19,15 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-ja/strings.xml b/app/src/main/res/values-ja/strings.xml
index ecdb5be..8cd2d8a 100644
--- a/app/src/main/res/values-ja/strings.xml
+++ b/app/src/main/res/values-ja/strings.xml
@@ -54,29 +54,27 @@
     <string name="call_add">通話を追加する</string>
     <string name="conference_manage">電話会議を管理する</string>
     <string name="conference">会議</string>
-    <string name="audio_route_speaker">スピーカー</string>
-    <string name="audio_route_earpiece">イヤーピース</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">有線ヘッドセット</string>
-    <string name="audio_route_wired_or_earpiece">有線またはイヤーピース</string>
-    <string name="choose_audio_route">音声の出力先を選択</string>
-    <string name="calling_blocked_number">その番号はブロックした番号です</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">スピードダイヤル</string>
     <string name="manage_speed_dial">スピードダイヤルの管理</string>
-    <string name="speed_dial_label">番号をタップすると連絡先を割り当てることが出来ます。ダイヤルパッドで割り当てた番号を長押しすると、割り当てた連絡先に素早く電話をかけることが出来ます。</string>
+    <string name="speed_dial_label">番号をクリックすると連絡先を割り当てることが出来ます。電話で指定された番号を長押しすると、指定された連絡先に素早く電話をかけることが出来ます。</string>
     <!-- Settings -->
-    <string name="group_subsequent_calls">発着信履歴で同じ番号による連続した通話をグループ化する</string>
+    <string name="group_subsequent_calls">後続の通話をコールログの同じ番号でグループ化する</string>
     <string name="open_dialpad_by_default">アプリを開いたときにデフォルトでダイヤルパッドを開く</string>
     <string name="disable_proximity_sensor">通話中に近接センサーを無効にする</string>
-    <string name="disable_swipe_to_answer">着信に応答する際のスワイプ操作をタップ操作に置き換える</string>
-    <string name="show_incoming_calls_full_screen">着信通知を常に全画面で表示する</string>
-    <string name="hide_dialpad_numbers">ダイヤルパッドの番号を表示しない</string>
+    <string name="disable_swipe_to_answer">着信に応答する際のスワイプ操作をクリック操作に置き換える</string>
+    <string name="show_incoming_calls_full_screen">常に着信通知を全画面に表示する</string>
     <!-- FAQ -->
     <string name="faq_1_title">着信音は聞こえるのですが、画面がつきません。どうしたらよいですか？</string>
-    <string name="faq_1_text">このような問題は、端末やシステム固有の理由が多く、一概には言えません。端末の設定を見て、アプリがバックグラウンドでポップアップすることを許可しているか、他のアプリの上に表示することを許可しているかを確認する必要があります。</string>
+    <string name="faq_1_text">このような問題は、デバイスやシステム固有の理由が多く、一概には言えません。端末の設定を見て、アプリがバックグラウンドでポップアップすることを許可しているか、他のアプリの上に表示することを許可しているかを確認する必要があります。</string>
     <!--
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
     -->
-</resources>
\ No newline at end of file
+</resources>
diff --git a/app/src/main/res/values-lt/goodwy.xml b/app/src/main/res/values-lt/goodwy.xml
index 29c4231..667b957 100755
--- a/app/src/main/res/values-lt/goodwy.xml
+++ b/app/src/main/res/values-lt/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Skaidrus skambučių ekranas</string>
     <string name="call_back_g">Šaukti</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Praleistas skambutis</string>
     <string name="missed_calls_g">Praleisti skambučiai</string>
     <string name="missed_call_notifications_g">Pranešimai apie praleistus skambučius</string>
@@ -19,18 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="few">%d timers are running</item>
-        <item quantity="many">%d timers are running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-lt/strings.xml b/app/src/main/res/values-lt/strings.xml
index 9887c75..5b36573 100644
--- a/app/src/main/res/values-lt/strings.xml
+++ b/app/src/main/res/values-lt/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Spartusis rinkimas</string>
     <string name="manage_speed_dial">Tvarkyti spartųjį rinkimą</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Skambučių metu išjungti artumo jutiklį</string>
     <string name="disable_swipe_to_answer">Atsiliepiant į įeinančius skambučius perbraukimą pakeiskite paspaudimu</string>
     <string name="show_incoming_calls_full_screen">Visada rodykite įeinančius skambučius per visą ekraną</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
     <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
diff --git a/app/src/main/res/values-ml/goodwy.xml b/app/src/main/res/values-ml/goodwy.xml
index 40d0135..0e7bac8 100755
--- a/app/src/main/res/values-ml/goodwy.xml
+++ b/app/src/main/res/values-ml/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">സുതാര്യമായ കോൾ സ്ക്രീൻ</string>
     <string name="call_back_g">തിരിച്ചുവിളിക്കുക</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">മിസ്ഡ് കോൾ</string>
     <string name="missed_calls_g">മിസ്സഡ് കോള്</string>
     <string name="missed_call_notifications_g">മിസ്ഡ് കോൾ അറിയിപ്പുകൾ</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-ml/strings.xml b/app/src/main/res/values-ml/strings.xml
index b4e8ca6..5c2a18d 100644
--- a/app/src/main/res/values-ml/strings.xml
+++ b/app/src/main/res/values-ml/strings.xml
@@ -1,20 +1,20 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">ഡയലർ</string>
-    <string name="default_phone_app_prompt">ദയവായി ഈ ആപ്പിനെ ഡിഫോൾട്ട് ഫോൺ ആപ്പ് ആക്കുക</string>
-    <string name="allow_displaying_over_other_apps">വിശ്വസനീയമായ പെരുമാറ്റത്തിനായി മറ്റ് ആപ്പുകളിൽ പ്രദർശിപ്പിക്കാൻ അനുവദിക്കുക</string>
+    <string name="default_phone_app_prompt">Please make this app the default Phone app</string>
+    <string name="allow_displaying_over_other_apps">Please allow displaying over other apps for reliable behaviour</string>
     <!-- Contacts -->
     <string name="could_not_access_contacts">നിങ്ങളുടെ കോൺ‌ടാക്റ്റുകൾ‌ ആക്‌സസ് ചെയ്യാൻ‌ കഴിഞ്ഞില്ല</string>
     <!-- Recents -->
     <string name="no_previous_calls">മുമ്പത്തെ കോളുകളൊന്നും കണ്ടെത്തിയില്ല</string>
     <string name="could_not_access_the_call_history">കോൾ ചരിത്രം ആക്‌സസ്സുചെയ്യാനായില്ല</string>
     <string name="request_access">ആക്‌സസ്സ് അഭ്യർത്ഥിക്കുക</string>
-    <string name="remove_confirmation">കോൾ ചരിത്രത്തിൽ നിന്ന് തിരഞ്ഞെടുത്ത ഇനങ്ങൾ നീക്കം ചെയ്യണമെന്ന് തീർച്ചയാണോ\?</string>
-    <string name="clear_history_confirmation">കോൾ ചരിത്രത്തിൽ നിന്ന് എല്ലാം നീക്കം ചെയ്യണമെന്ന് തീർച്ചയാണോ\?</string>
+    <string name="remove_confirmation">കോൾ ചരിത്രത്തിൽ നിന്ന് തിരഞ്ഞെടുത്ത ഇനങ്ങൾ നീക്കംചെയ്യണമെന്ന് നിങ്ങൾക്ക് ഉറപ്പാണോ\?</string>
+    <string name="clear_history_confirmation">Are you sure you want to remove everything from the Call History\?</string>
     <string name="show_grouped_calls">Show grouped calls</string>
     <string name="clear_call_history">Clear call history</string>
-    <string name="show_call_details">കോൾ വിശദാംശങ്ങൾ കാണിക്കുക</string>
+    <string name="show_call_details">Show call details</string>
     <!-- Dialpad -->
     <string name="dialpad">ഡയൽപാഡ്</string>
     <string name="asterisk">Asterisk</string>
@@ -25,9 +25,9 @@
     <!-- Dialer -->
     <string name="dialer">ഡയലർ</string>
     <string name="accept">സ്വീകരിക്കുക</string>
-    <string name="accept_call">കോൾ സ്വീകരിക്കുക</string>
+    <string name="accept_call">Accept call</string>
     <string name="decline">നിരസിക്കുക</string>
-    <string name="decline_call">കോൾ നിരസിക്കുക</string>
+    <string name="decline_call">Decline call</string>
     <string name="unknown_caller">അറിയപ്പെടാത്ത കോളർ</string>
     <string name="is_calling">വിളിക്കുന്നു…</string>
     <string name="dialing">ഡയൽ ചെയ്യുന്നു…</string>
@@ -37,44 +37,42 @@
     <string name="select_sim">ഈ കോളിനായി ഒരു സിം തിരഞ്ഞെടുക്കുക</string>
     <string name="always_use_this_sim">ഈ നമ്പറിനായി എല്ലായ്പ്പോഴും ഈ സിം ഉപയോഗിക്കുക</string>
     <string name="unset_default_sim">Unset default SIM</string>
-    <string name="calls">കോളുകൾ</string>
-    <string name="turn_microphone_on">മൈക്രോഫോൺ ഓണാക്കുക</string>
-    <string name="turn_microphone_off">മൈക്രോഫോൺ ഓഫാക്കുക</string>
-    <string name="turn_speaker_on">സ്പീക്കർ ഓണാക്കുക</string>
-    <string name="turn_speaker_off">സ്പീക്കർ ഓഫാക്കുക</string>
-    <string name="show_dialpad">ഡയൽപാഡ് കാണിക്കുക</string>
-    <string name="hide_dialpad">ഡയൽപാഡ് മറയ്ക്കുക</string>
-    <string name="end_call">കോൾ അവസാനിപ്പിക്കുക</string>
-    <string name="hold_call">കോൾ ഹോൾഡ് ചെയ്യുക</string>
-    <string name="resume_call">കോൾ പുനരാരംഭിക്കുക</string>
-    <string name="call_on_hold">ഹോൾഡ് ചെയ്തിരിക്കുന്നു</string>
-    <string name="call_swap">കോളുകൾ സ്വാപ്പ് ചെയ്യുക</string>
-    <string name="call_merge">കോളുകൾ ലയിപ്പിക്കുക</string>
+    <string name="calls">Calls</string>
+    <string name="turn_microphone_on">Turn microphone on</string>
+    <string name="turn_microphone_off">Turn microphone off</string>
+    <string name="turn_speaker_on">Turn speaker on</string>
+    <string name="turn_speaker_off">Turn speaker off</string>
+    <string name="show_dialpad">Show dialpad</string>
+    <string name="hide_dialpad">Hide dialpad</string>
+    <string name="end_call">End call</string>
+    <string name="hold_call">Hold call</string>
+    <string name="resume_call">Resume call</string>
+    <string name="call_on_hold">On Hold</string>
+    <string name="call_swap">Swap calls</string>
+    <string name="call_merge">Merge calls</string>
     <string name="call_split">Split call</string>
-    <string name="call_add">കോൾ ചേർക്കുക</string>
-    <string name="conference_manage">സമ്മേളന ചർച്ച കൈകാര്യം ചെയ്യുക</string>
-    <string name="conference">സമ്മേളനം</string>
-    <string name="audio_route_speaker">സ്പീക്കർ</string>
-    <string name="audio_route_earpiece">ഇയർപീസ്</string>
-    <string name="audio_route_bluetooth">ബ്ലൂടൂത്ത്</string>
-    <string name="audio_route_wired_headset">വയർഡ് ഹെഡ്സെറ്റ്</string>
-    <string name="audio_route_wired_or_earpiece">വയർഡ് അല്ലെങ്കിൽ ഇയർപീസ്</string>
-    <string name="choose_audio_route">ഓഡിയോ യാതാമാര്ഗം തിരഞ്ഞെടുക്കുക</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
+    <string name="call_add">Add call</string>
+    <string name="conference_manage">Manage conference call</string>
+    <string name="conference">Conference</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
+    <string name="audio_route_bluetooth">Bluetooth</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">സ്പീഡ് ഡയൽ</string>
     <string name="manage_speed_dial">സ്പീഡ് ഡയൽ നിയന്ത്രിക്കുക</string>
     <string name="speed_dial_label">കോൺ‌ടാക്റ്റ് നൽകുന്നതിന് ഒരു നമ്പറിൽ ക്ലിക്കുചെയ്യുക. ഡയലറിൽ നൽകിയ നമ്പർ ദീർഘനേരം അമർത്തിയാൽ, നിങ്ങൾ നൽകിയ കോൺടാക്റ്റിനെ വേഗത്തിൽ വിളിക്കാം.</string>
     <!-- Settings -->
     <string name="group_subsequent_calls">കോൾ ലോഗിൽ അതേ നമ്പറുള്ള കോളുകൾ ഗ്രൂപ്പുചെയ്യുക</string>
-    <string name="open_dialpad_by_default">ആപ്പ് തുറക്കുമ്പോൾ ഡിഫോൾട്ടായി ഡയൽപാഡ് തുറക്കുക</string>
-    <string name="disable_proximity_sensor">കോളുകൾക്കിടയിൽ പ്രോക്സിമിറ്റി സെൻസർ പ്രവർത്തനരഹിതമാക്കുക</string>
-    <string name="disable_swipe_to_answer">ഇൻകമിംഗ് കോളുകളോട് പ്രതികരിക്കുമ്പോൾ സ്വൈപ്പിംഗ് മാറ്റി പകരം ഇൻകമിംഗ് കോളിൽ ക്ലിക്ക് ചെയ്യുക</string>
-    <string name="show_incoming_calls_full_screen">എല്ലായ്‌പ്പോഴും ഇൻകമിംഗ് കോളുകൾ പൂർണ്ണ സ്‌ക്രീനിൽ പ്രദർശിപ്പിക്കുക</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
+    <string name="open_dialpad_by_default">Open the dialpad by default when the app opens</string>
+    <string name="disable_proximity_sensor">Disable proximity sensor during calls</string>
+    <string name="disable_swipe_to_answer">Replace swiping at responding to incoming calls with clicking an incoming call</string>
+    <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
     <!-- FAQ -->
-    <string name="faq_1_title">ഞാൻ ഇൻകമിംഗ് കോളുകൾ കേൾക്കുന്നു, പക്ഷേ സ്ക്രീൻ ഓണാക്കുന്നില്ല. എനിക്ക് എന്ത് ചെയ്യാൻ കഴിയും\?</string>
-    <string name="faq_1_text">അത്തരം പ്രശ്നങ്ങൾക്ക് ഉപകരണത്തിനും സിസ്റ്റത്തിനും പ്രത്യേക കാരണങ്ങളുണ്ടാകാം, പൊതുവായി പറയാൻ പ്രയാസമാണ്. നിങ്ങളുടെ ഉപകരണ ക്രമീകരണങ്ങളിൽ നിങ്ങൾ ചുറ്റും നോക്കുകയും പശ്ചാത്തലത്തിലായിരിക്കുമ്പോൾ ആപ്പ് പോപ്പ് അപ്പ് ചെയ്യാൻ അനുവദിക്കുകയും മറ്റ് ആപ്പുകളിൽ പ്രദർശിപ്പിക്കാൻ അനുവദിക്കുകയും വേണം.</string>
+    <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
+    <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
     <!--
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
diff --git a/app/src/main/res/values-nb-rNO/goodwy.xml b/app/src/main/res/values-nb-rNO/goodwy.xml
index d091c23..28d1cad 100755
--- a/app/src/main/res/values-nb-rNO/goodwy.xml
+++ b/app/src/main/res/values-nb-rNO/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Gjennomsiktig samtaleskjerm</string>
     <string name="call_back_g">Kalle</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Tapte anrop</string>
     <string name="missed_calls_g">Tapte anrop</string>
     <string name="missed_call_notifications_g">Varsler om tapte anrop</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-nb-rNO/strings.xml b/app/src/main/res/values-nb-rNO/strings.xml
index c82857f..8c366fb 100644
--- a/app/src/main/res/values-nb-rNO/strings.xml
+++ b/app/src/main/res/values-nb-rNO/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Hurtigvalg</string>
     <string name="manage_speed_dial">Administrer hurtigvalg</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Deaktiver nærhetssensor under samtaler</string>
     <string name="disable_swipe_to_answer">Erstatt sveiping ved å svare på innkommende anrop med å klikke</string>
     <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
     <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
diff --git a/app/src/main/res/values-nl/goodwy.xml b/app/src/main/res/values-nl/goodwy.xml
index 9557c65..6eb73f8 100755
--- a/app/src/main/res/values-nl/goodwy.xml
+++ b/app/src/main/res/values-nl/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Transparant oproepscherm</string>
     <string name="call_back_g">Roepen</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Gemiste oproep</string>
     <string name="missed_calls_g">Gemiste oproepen</string>
     <string name="missed_call_notifications_g">Meldingen voor gemiste oproepen</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-nl/strings.xml b/app/src/main/res/values-nl/strings.xml
index 2dd7101..4b15577 100644
--- a/app/src/main/res/values-nl/strings.xml
+++ b/app/src/main/res/values-nl/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Bedrade koptelefoon</string>
     <string name="audio_route_wired_or_earpiece">Bedraad of via oordopje(s)</string>
     <string name="choose_audio_route">Geluidsroute kiezen</string>
-    <string name="calling_blocked_number">Het gebelde nummer is geblokkeerd</string>
     <!-- Speed dial -->
     <string name="speed_dial">Snelkiesnummer</string>
     <string name="manage_speed_dial">Snelkiezen beheren</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Nabijheidssensor uitschakelen tijdens bellen</string>
     <string name="disable_swipe_to_answer">Vervang vegen door klikken bij het aannemen van gesprekken</string>
     <string name="show_incoming_calls_full_screen">Inkomende gesprekken altijd op volledig scherm tonen</string>
-    <string name="hide_dialpad_numbers">Toetsenblokcijfers verbergen</string>
     <!-- FAQ -->
     <string name="faq_1_title">Ik hoor dat er een gesprek binnenkomt, maar het scherm gaat niet aan. Wat kan ik doen\?</string>
     <string name="faq_1_text">Dit soort problemen kan vele oorzaken hebben, specifiek voor bepaalde apparaten en software. Controleer in ieder geval of voor deze app in de systeeminstellingen \"Weergeven vóór andere apps\" is toegestaan en of bij meldingen voor inkomende gesprekken \"Weergeven op scherm\" is ingeschakeld.</string>
diff --git a/app/src/main/res/values-pa-rPK/goodwy.xml b/app/src/main/res/values-pa-rPK/goodwy.xml
index 5bff151..2fd4561 100644
--- a/app/src/main/res/values-pa-rPK/goodwy.xml
+++ b/app/src/main/res/values-pa-rPK/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Transparent Call Screen</string>
     <string name="call_back_g">Call back</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Missed call</string>
     <string name="missed_calls_g">Missed calls</string>
     <string name="missed_call_notifications_g">Missed call notifications</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-pa-rPK/strings.xml b/app/src/main/res/values-pa-rPK/strings.xml
index a1a88fd..2713736 100644
--- a/app/src/main/res/values-pa-rPK/strings.xml
+++ b/app/src/main/res/values-pa-rPK/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Speed dial</string>
     <string name="manage_speed_dial">Manage speed dial</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Disable proximity sensor during calls</string>
     <string name="disable_swipe_to_answer">Replace swiping at responding to incoming calls with clicking</string>
     <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do\?</string>
     <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
diff --git a/app/src/main/res/values-pl/goodwy.xml b/app/src/main/res/values-pl/goodwy.xml
index df68488..58f71c2 100755
--- a/app/src/main/res/values-pl/goodwy.xml
+++ b/app/src/main/res/values-pl/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Przezroczysty ekran połączenia</string>
     <string name="call_back_g">Nazwać</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Nieodebranych</string>
     <string name="missed_calls_g">Nieodebrane połączenia</string>
     <string name="missed_call_notifications_g">Powiadomienia o nieodebranych połączeniach</string>
@@ -19,18 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="few">%d timers are running</item>
-        <item quantity="many">%d timers are running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-pl/strings.xml b/app/src/main/res/values-pl/strings.xml
index 46ea68b..31ef924 100644
--- a/app/src/main/res/values-pl/strings.xml
+++ b/app/src/main/res/values-pl/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Słuchawki przewodowe</string>
     <string name="audio_route_wired_or_earpiece">Słuchawka urządzenia lub przewodowa</string>
     <string name="choose_audio_route">Wybierz urządzenie audio</string>
-    <string name="calling_blocked_number">Numer, na który dzwonisz, jest zablokowany</string>
     <!-- Speed dial -->
     <string name="speed_dial">Szybkie wybieranie</string>
     <string name="manage_speed_dial">Zarządzaj szybkim wybieraniem</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Wyłączaj czujnik zbliżeniowy podczas połączeń</string>
     <string name="disable_swipe_to_answer">Zastąp naciśnięciem gest przesunięcia do odpowiadania na połączenia przychodzące</string>
     <string name="show_incoming_calls_full_screen">Zawsze wyświetlaj połączenia przychodzące na pełnym ekranie</string>
-    <string name="hide_dialpad_numbers">Ukryj cyfry panelu wybierania</string>
     <!-- FAQ -->
     <string name="faq_1_title">Słyszę połączenia przychodzące, ale ekran się nie włącza. Co mogę zrobić\?</string>
     <string name="faq_1_text">Takie problemy mogą mieć wiele przyczyn specyficznych dla urządzenia i systemu; ogólnie trudno powiedzieć. Powinieneś/powinnaś rozejrzeć się w ustawieniach swojego urządzenia i upewnić się, że aplikacja może pojawiać się, gdy jest w tle, i wyświetlać się nad innymi aplikacjami.</string>
diff --git a/app/src/main/res/values-pt-rBR/goodwy.xml b/app/src/main/res/values-pt-rBR/goodwy.xml
index fd9dc6a..e2b3e1d 100755
--- a/app/src/main/res/values-pt-rBR/goodwy.xml
+++ b/app/src/main/res/values-pt-rBR/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Tela de chamada transparente</string>
     <string name="call_back_g">Chamar</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Chamada perdida</string>
     <string name="missed_calls_g">Chamadas perdidas</string>
     <string name="missed_call_notifications_g">Notificações de chamadas perdidas</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-pt-rBR/strings.xml b/app/src/main/res/values-pt-rBR/strings.xml
index 684b8b6..ed7079f 100644
--- a/app/src/main/res/values-pt-rBR/strings.xml
+++ b/app/src/main/res/values-pt-rBR/strings.xml
@@ -20,8 +20,8 @@
     <string name="asterisk">Asterisco</string>
     <string name="hashtag">Hashtag</string>
     <string name="call_number">Numero de telefone</string>
-    <string name="dialpad_beeps">Ativar sons do teclado</string>
-    <string name="dialpad_vibrations">Ativar vibrações do teclado</string>
+    <string name="dialpad_beeps">Enable beeps on dialpad button clicks</string>
+    <string name="dialpad_vibrations">Enable vibrations on dialpad button clicks</string>
     <!-- Dialer -->
     <string name="dialer">Discador</string>
     <string name="accept">Aceitar</string>
@@ -54,13 +54,12 @@
     <string name="call_add">Adicionar chamada</string>
     <string name="conference_manage">Gerenciar chamada em conferência</string>
     <string name="conference">Conferência</string>
-    <string name="audio_route_speaker">Alto falante</string>
-    <string name="audio_route_earpiece">Fone de ouvido</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Headset com fio</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
-    <string name="choose_audio_route">Escolha a rota de áudio</string>
-    <string name="calling_blocked_number">O número que você está ligando está bloqueado</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Ligação rápida</string>
     <string name="manage_speed_dial">Gerenciar ligações rápidas</string>
@@ -70,11 +69,10 @@
     <string name="open_dialpad_by_default">Mostrar o discador ao abrir o aplicativo</string>
     <string name="disable_proximity_sensor">Desativar sensor de proximidade durante as chamadas</string>
     <string name="disable_swipe_to_answer">Clicar em vez de deslizar para responder chamadas</string>
-    <string name="show_incoming_calls_full_screen">Sempre exibir as chamadas recebidas em tela cheia</string>
-    <string name="hide_dialpad_numbers">Ocultar números do teclado</string>
+    <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
     <!-- FAQ -->
-    <string name="faq_1_title">Ouço chamadas recebidas, mas a tela não liga. O que eu posso fazer?</string>
-    <string name="faq_1_text">Esses problemas podem ter muitos motivos específicos do dispositivo e do sistema, difíceis de dizer em geral. Você deve olhar em volta nas configurações do seu dispositivo e certificar-se de que o aplicativo pode aparecer quando estiver em segundo plano e permitir a exibição sobre outros aplicativos.</string>
+    <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
+    <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
     <!--
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
diff --git a/app/src/main/res/values-pt/goodwy.xml b/app/src/main/res/values-pt/goodwy.xml
index fd9dc6a..e2b3e1d 100755
--- a/app/src/main/res/values-pt/goodwy.xml
+++ b/app/src/main/res/values-pt/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Tela de chamada transparente</string>
     <string name="call_back_g">Chamar</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Chamada perdida</string>
     <string name="missed_calls_g">Chamadas perdidas</string>
     <string name="missed_call_notifications_g">Notificações de chamadas perdidas</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-pt/strings.xml b/app/src/main/res/values-pt/strings.xml
index 1750634..afc4d39 100644
--- a/app/src/main/res/values-pt/strings.xml
+++ b/app/src/main/res/values-pt/strings.xml
@@ -1,82 +1,80 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
-    <string name="app_launcher_name">Telefone</string>
-    <string name="default_phone_app_prompt">Tornar esta a aplicação padrão</string>
-    <string name="allow_displaying_over_other_apps">Deve permitir que esta aplicação seja mostrada por cima das outras para evitar comportamentos erráticos</string>
+    <string name="app_name">LeOS-Phone</string>
+    <string name="app_launcher_name">Marcador</string>
+    <string name="default_phone_app_prompt">Por favor, faça deste aplicativo o aplicativo de telefone padrão</string>
+    <string name="allow_displaying_over_other_apps">Por favor, permita exibir sobre outros aplicativos para um comportamento confiável</string>
     <!-- Contacts -->
-    <string name="could_not_access_contacts">Não foi possível aceder aos contactos</string>
+    <string name="could_not_access_contacts">Não pude acessar seus contatos</string>
     <!-- Recents -->
     <string name="no_previous_calls">Não existem chamadas anteriores</string>
-    <string name="could_not_access_the_call_history">Não foi possível aceder ao histórico de chamadas</string>
+    <string name="could_not_access_the_call_history">Não pude acessar o histórico de chamadas</string>
     <string name="request_access">Pedir acesso</string>
-    <string name="remove_confirmation">Tem certeza de que deseja remover os itens selecionados do histórico de chamadas\?</string>
-    <string name="clear_history_confirmation">Tem a certeza de que pretende remover tudo do histórico de chamadas\?</string>
+    <string name="remove_confirmation">Tem certeza de que deseja remover os itens selecionados do Histórico de Chamadas\?</string>
+    <string name="clear_history_confirmation">Tem certeza que quer remover tudo do Histórico de Chamadas\?</string>
     <string name="show_grouped_calls">Mostrar chamadas em grupo</string>
     <string name="clear_call_history">Limpar registo de chamadas</string>
     <string name="show_call_details">Mostrar detalhes da chamada</string>
     <!-- Dialpad -->
-    <string name="dialpad">Marcador</string>
+    <string name="dialpad">Teclado de discagem</string>
     <string name="asterisk">Asterisco</string>
-    <string name="hashtag">\'Hashtag\'</string>
-    <string name="call_number">Ligar</string>
-    <string name="dialpad_beeps">Ativar sons do teclado</string>
-    <string name="dialpad_vibrations">Ativar vibração do teclado</string>
+    <string name="hashtag">hashtag</string>
+    <string name="call_number">Ligar para o número</string>
+    <string name="dialpad_beeps">Enable beeps on dialpad button clicks</string>
+    <string name="dialpad_vibrations">Enable vibrations on dialpad button clicks</string>
     <!-- Dialer -->
-    <string name="dialer">Marcador</string>
+    <string name="dialer">Discador</string>
     <string name="accept">Aceitar</string>
     <string name="accept_call">Aceitar chamada</string>
     <string name="decline">Recusar</string>
-    <string name="decline_call">Recusar chamada</string>
+    <string name="decline_call">Rejeitar chamada</string>
     <string name="unknown_caller">Desconhecido</string>
     <string name="is_calling">A chamar…</string>
     <string name="dialing">A ligar…</string>
     <string name="call_ended">Chamada terminada</string>
     <string name="call_ending">A terminar chamada</string>
     <string name="ongoing_call">Chamada em curso</string>
-    <string name="select_sim">Selecione o SIM para esta chamada</string>
-    <string name="always_use_this_sim">Utilizar sempre este SIM para ligar a este número</string>
+    <string name="select_sim">Selecione um SIM para esta chamada</string>
+    <string name="always_use_this_sim">Utilizar sempre este SIM para ligar para este número</string>
     <string name="unset_default_sim">Deixar de utilizar como SIM padrão</string>
     <string name="calls">Chamadas</string>
-    <string name="turn_microphone_on">Ligar microfone</string>
-    <string name="turn_microphone_off">Desligar microfone</string>
-    <string name="turn_speaker_on">Ligar alta voz</string>
-    <string name="turn_speaker_off">Desligar alta voz</string>
+    <string name="turn_microphone_on">Ligar o microfone</string>
+    <string name="turn_microphone_off">Desligar o microfone</string>
+    <string name="turn_speaker_on">Ligar alta-voz</string>
+    <string name="turn_speaker_off">Desligar alta-voz</string>
     <string name="show_dialpad">Mostrar marcador</string>
     <string name="hide_dialpad">Ocultar marcador</string>
-    <string name="end_call">Terminar chamada</string>
+    <string name="end_call">Terminar a chamada</string>
     <string name="hold_call">Reter chamada</string>
     <string name="resume_call">Retomar chamada</string>
     <string name="call_on_hold">Em espera</string>
     <string name="call_swap">Troca de chamadas</string>
-    <string name="call_merge">Unir chamadas</string>
-    <string name="call_split">Separar chamadas</string>
+    <string name="call_merge">Mesclar chamadas</string>
+    <string name="call_split">Divisão de chamada</string>
     <string name="call_add">Adicionar chamada</string>
-    <string name="conference_manage">Gerir chamada de conferência</string>
+    <string name="conference_manage">Gerenciar chamada de conferência</string>
     <string name="conference">Conferência</string>
-    <string name="audio_route_speaker">Altifalante</string>
-    <string name="audio_route_earpiece">Auricular</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Auscultador de cabo</string>
-    <string name="audio_route_wired_or_earpiece">Cabo ou auricular</string>
-    <string name="choose_audio_route">Escolha a rota de áudio</string>
-    <string name="calling_blocked_number">O número para o qual está a tentar ligar está bloqueado</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
-    <string name="speed_dial">Ligação rápida</string>
-    <string name="manage_speed_dial">Gerir ligações rápidas</string>
-    <string name="speed_dial_label">Clique num número para o atribuir a um contacto. Poderá assim, ligar diretamente ao contacto ao premir longamente a tecla de ligação rápida.</string>
+    <string name="speed_dial">Marcação rápida</string>
+    <string name="manage_speed_dial">Gerir marcações rápidas</string>
+    <string name="speed_dial_label">Clique num número para atribuir um contacto à marcação rápida. Poderá assim, ligar diretamente ao contacto ao premir longamente a tecla de marcação rápida.</string>
     <!-- Settings -->
     <string name="group_subsequent_calls">Agrupar, no registo, as chamadas para o mesmo contacto</string>
-    <string name="open_dialpad_by_default">Mostrar marcador ao abrir a aplicação</string>
+    <string name="open_dialpad_by_default">Mostrar Marcador por padrâo ao abrir a aplicação</string>
     <string name="disable_proximity_sensor">Desativar sensor de proximidade durante as chamadas</string>
     <string name="disable_swipe_to_answer">Clicar em vez de deslizar para atender</string>
-    <string name="show_incoming_calls_full_screen">Mostrar em ecrã completo as chamadas recebidas</string>
-    <string name="hide_dialpad_numbers">Ocultar números no marcador</string>
+    <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
     <!-- FAQ -->
-    <string name="faq_1_title">Estou a ouvir som mas o ecrã não liga. O que posso fazer\?</string>
-    <string name="faq_1_text">Esses problemas podem ter muitos motivos específicos do dispositivo e do sistema, difíceis de dizer em geral. Aceda às definições do sistema e certifique-se de que concedeu as permissões necessárias tais como permitir exibição por cima das outras aplicações.</string>
+    <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
+    <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
     <!--
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
     -->
-</resources>
\ No newline at end of file
+</resources>
diff --git a/app/src/main/res/values-ro/goodwy.xml b/app/src/main/res/values-ro/goodwy.xml
index cfa7ed1..e25343d 100755
--- a/app/src/main/res/values-ro/goodwy.xml
+++ b/app/src/main/res/values-ro/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Ecran de apel transparent</string>
     <string name="call_back_g">Chema</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Apel ratat</string>
     <string name="missed_calls_g">Apeluri pierdute</string>
     <string name="missed_call_notifications_g">Notificări privind apelurile pierdute</string>
@@ -19,17 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="few">%d timers are running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-ro/strings.xml b/app/src/main/res/values-ro/strings.xml
index 462a11c..ce97cf5 100644
--- a/app/src/main/res/values-ro/strings.xml
+++ b/app/src/main/res/values-ro/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Apelare rapidă</string>
     <string name="manage_speed_dial">Gestionați apelarea rapidă</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Dezactivați senzorul de proximitate în timpul apelurilor</string>
     <string name="disable_swipe_to_answer">Înlocuiți glisarea pentru a răspunde la apelurile primite cu o singură apăsare</string>
     <string name="show_incoming_calls_full_screen">Afișați întotdeauna apelurile primite pe întreg ecranul</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">Aud apelurile primite, dar ecranul nu se aprinde. Ce pot face\?</string>
     <string name="faq_1_text">Aceste probleme pot avea multe motive specifice dispozitivului și sistemului, fiind greu de spus în general. Ar trebui să vă uitați în setările dispozitivului și să vă asigurați că aplicația este permisă să apară atunci când este în fundal și că permite afișarea peste alte aplicații.</string>
diff --git a/app/src/main/res/values-ru/goodwy.xml b/app/src/main/res/values-ru/goodwy.xml
index d993996..3a5fc06 100755
--- a/app/src/main/res/values-ru/goodwy.xml
+++ b/app/src/main/res/values-ru/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Прозрачный фон экрана звонков</string>
     <string name="call_back_g">Перезвонить</string>
-    <string name="call_back_person_g">Перезвоните %s</string>
     <string name="missed_call_g">Пропущенный звонок</string>
     <string name="missed_calls_g">Пропущенных звонков</string>
     <string name="missed_call_notifications_g">Уведомления о пропущенных звонках</string>
@@ -23,14 +22,4 @@
     <string name="audio_route_speaker_g">Динамик</string>
     <string name="audio_route_earpiece_g">Телефон</string>
     <string name="audio_route_wired_or_earpiece_g">Динамик устройства или проводная гарнитура</string>
-
-    <!-- Timer -->
-    <string name="timer">Таймер</string>
-    <string name="timers_notification_msg">Таймеры запущены</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d таймер запущен</item>
-        <item quantity="few">%d таймера запущены</item>
-        <item quantity="many">%d таймеров запущено</item>
-        <item quantity="other">%d таймеров запущено</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
index b4356e7..f15e88b 100644
--- a/app/src/main/res/values-ru/strings.xml
+++ b/app/src/main/res/values-ru/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Проводная гарнитура</string>
     <string name="audio_route_wired_or_earpiece">Проводные или внутриканальные наушники</string>
     <string name="choose_audio_route">Выберите аудиовыход</string>
-    <string name="calling_blocked_number">Набранный вами номер заблокирован</string>
     <!-- Speed dial -->
     <string name="speed_dial">Быстрый вызов</string>
     <string name="manage_speed_dial">Управление быстрым вызовом</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Отключать датчик приближения во время вызовов</string>
     <string name="disable_swipe_to_answer">Использовать нажатие вместо перетаскивания при ответе на входящие вызовы</string>
     <string name="show_incoming_calls_full_screen">Всегда отображать входящие вызовы на полный экран</string>
-    <string name="hide_dialpad_numbers">Скрыть цифры на номеронабирателе</string>
     <!-- FAQ -->
     <string name="faq_1_title">Я слышу сигналы входящих вызовов, но экран не включается. Что можно сделать\?</string>
     <string name="faq_1_text">Такие проблемы могут иметь множество специфических для устройства и системы причин, о которых трудно говорить в общем. Следует проверить настройки устройства и убедиться, что приложению разрешено отображение всплывающих уведомлений в фоновом режиме и отображение поверх других приложений.</string>
diff --git a/app/src/main/res/values-sk/goodwy.xml b/app/src/main/res/values-sk/goodwy.xml
index e926e4a..212b002 100755
--- a/app/src/main/res/values-sk/goodwy.xml
+++ b/app/src/main/res/values-sk/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Priehľadná obrazovka hovoru</string>
     <string name="call_back_g">Zavolať</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Zmeškaný hovor</string>
     <string name="missed_calls_g">Zmeškané hovory</string>
     <string name="missed_call_notifications_g">Upozornenia na zmeškané hovory</string>
@@ -19,17 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="few">%d timers are running</item>
-        <item quantity="many">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-sk/strings.xml b/app/src/main/res/values-sk/strings.xml
index 60eee80..fbade35 100644
--- a/app/src/main/res/values-sk/strings.xml
+++ b/app/src/main/res/values-sk/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Káblové slúchadlo</string>
     <string name="audio_route_wired_or_earpiece">Káblové alebo slúchadlo</string>
     <string name="choose_audio_route">Zvoľte audio výstup Choose audio route</string>
-    <string name="calling_blocked_number">Volané číslo máte zablokované</string>
     <!-- Speed dial -->
     <string name="speed_dial">Rýchle vytáčanie</string>
     <string name="manage_speed_dial">Spravovať rýchle vytáčanie</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Vypnúť počas hovorov senzor priblíženia</string>
     <string name="disable_swipe_to_answer">Nahradiť potiahnutie prstom pri odpovedaní na prichádzajúce hovory kliknutím</string>
     <string name="show_incoming_calls_full_screen">Stále zobraziť prichádzajúce hovory na celú obrazovku</string>
-    <string name="hide_dialpad_numbers">Skryť čísla na číselníku</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">Počujem prichádzajúce hovory, obrazovka sa ale nezapne. Čo s tým?</string>
     <string name="faq_1_text">Takéto problémy majú často dôvody špecifické pre dané zariadenie alebo systém, ťažko teda dať všeobecné riešenie. Mali by ste sa poobzerať v nasteniach zariadenia a uistiť sa, že apka má povolenie na zobrazovanie sa z pozadia a na zobrazovanie sa nad ostatnými apkami.</string>
diff --git a/app/src/main/res/values-sl/goodwy.xml b/app/src/main/res/values-sl/goodwy.xml
index b4e874c..2fd4561 100644
--- a/app/src/main/res/values-sl/goodwy.xml
+++ b/app/src/main/res/values-sl/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Transparent Call Screen</string>
     <string name="call_back_g">Call back</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Missed call</string>
     <string name="missed_calls_g">Missed calls</string>
     <string name="missed_call_notifications_g">Missed call notifications</string>
@@ -19,18 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="two">%d timers are running</item>
-        <item quantity="few">%d timers are running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-sl/strings.xml b/app/src/main/res/values-sl/strings.xml
index 00aafa7..886a7ba 100644
--- a/app/src/main/res/values-sl/strings.xml
+++ b/app/src/main/res/values-sl/strings.xml
@@ -1,6 +1,5 @@
-<?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">Telefon</string>
     <string name="default_phone_app_prompt">Prosimo, nastavite to aplikacijo za privzeto telefonsko aplikacijo</string>
     <string name="allow_displaying_over_other_apps">Prosimo, dovolite prikaz nad drugimi aplikacijami za zanesljivo obnašanje</string>
@@ -54,13 +53,12 @@
     <string name="call_add">Dodaj klic</string>
     <string name="conference_manage">Upravljaj konferenčni klic</string>
     <string name="conference">Konferenca</string>
-    <string name="audio_route_speaker">Zvočnik</string>
-    <string name="audio_route_earpiece">Slušalke</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Ožičene slušalke</string>
-    <string name="audio_route_wired_or_earpiece">Ožičeno ali brezžično</string>
-    <string name="choose_audio_route">Izberi smer zvoka</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Hitro klicanje</string>
     <string name="manage_speed_dial">Upravljanje hitrega klica</string>
@@ -71,8 +69,6 @@
     <string name="disable_proximity_sensor">Onemogoči senzor bližine med klici</string>
     <string name="disable_swipe_to_answer">Pri odzivanju na dohodne klice zamenjajte poteg s prstom na odziv s klikanjem</string>
     <string name="show_incoming_calls_full_screen">Dohodne klice vedno prikaži na celotnem zaslonu</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">Slišim dohodne klice, vendar se zaslon ne vklopi. Kaj lahko storim\?</string>
     <string name="faq_1_text">Takšne težave imajo lahko veliko razlogov, ki so specifični za napravo in sistem, zato jih je na splošno težko opredeliti. Oglejte si nastavitve naprave in se prepričajte, da je aplikaciji dovoljeno, da se prikaže, ko je v ozadju, in da omogoča prikaz nad drugimi aplikacijami.</string>
@@ -80,4 +76,4 @@
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
     -->
-</resources>
\ No newline at end of file
+</resources>
diff --git a/app/src/main/res/values-sr/goodwy.xml b/app/src/main/res/values-sr/goodwy.xml
index c2e8f60..2fd4561 100644
--- a/app/src/main/res/values-sr/goodwy.xml
+++ b/app/src/main/res/values-sr/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Transparent Call Screen</string>
     <string name="call_back_g">Call back</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Missed call</string>
     <string name="missed_calls_g">Missed calls</string>
     <string name="missed_call_notifications_g">Missed call notifications</string>
@@ -19,17 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="few">%d timers are running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-sr/strings.xml b/app/src/main/res/values-sr/strings.xml
index bd40ac7..9cec032 100644
--- a/app/src/main/res/values-sr/strings.xml
+++ b/app/src/main/res/values-sr/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Жичане слушалице</string>
     <string name="audio_route_wired_or_earpiece">Жичани или слушалица</string>
     <string name="choose_audio_route">Изаберите аудио руту</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Брзо бирање</string>
     <string name="manage_speed_dial">Управљајте брзим бирањем</string>
@@ -71,9 +70,7 @@
     <string name="disable_proximity_sensor">Онемогућите сензор близине током позива</string>
     <string name="disable_swipe_to_answer">Замените превлачење при одговарању на долазне позиве кликом</string>
     <string name="show_incoming_calls_full_screen">Увек прикажи долазне позиве преко целог екрана</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">Чујем долазне позиве, али екран се не укључује. Шта могу да урадим\?</string>
     <string name="faq_1_text">Такви проблеми могу имати много специфичних разлога за уређај и систем, што је уопштено тешко рећи. Требало би да погледате около у подешавањима уређаја и уверите се да је апликацији дозвољено да искаче када је у позадини и да дозволи приказивање преко других апликација.</string>
-</resources>
+</resources>
\ No newline at end of file
diff --git a/app/src/main/res/values-sv/goodwy.xml b/app/src/main/res/values-sv/goodwy.xml
index 05bec69..9713514 100755
--- a/app/src/main/res/values-sv/goodwy.xml
+++ b/app/src/main/res/values-sv/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Transparent samtalsskärm</string>
     <string name="call_back_g">Kalla</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Missat samtal</string>
     <string name="missed_calls_g">Missade samtal</string>
     <string name="missed_call_notifications_g">Aviseringar om missade samtal</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-sv/strings.xml b/app/src/main/res/values-sv/strings.xml
index fc6695d..415bc4d 100644
--- a/app/src/main/res/values-sv/strings.xml
+++ b/app/src/main/res/values-sv/strings.xml
@@ -2,7 +2,7 @@
 <resources>
     <string name="app_name">Simpel telefon</string>
     <string name="app_launcher_name">Telefon</string>
-    <string name="default_phone_app_prompt">Gör den här appen till standardtelefonapp</string>
+    <string name="default_phone_app_prompt">Vänligen gör den här appen till standardtelefonapp</string>
     <string name="allow_displaying_over_other_apps">Tillåt visning över andra appar för att få ett tillförlitligt beteende</string>
     <!-- Contacts -->
     <string name="could_not_access_contacts">Det gick inte att komma åt dina kontakter</string>
@@ -38,9 +38,9 @@
     <string name="always_use_this_sim">Använd alltid det här SIM-kortet för detta nummer</string>
     <string name="unset_default_sim">Ta bort standard-SIM-kort</string>
     <string name="calls">Samtal</string>
-    <string name="turn_microphone_on">Slå på mikrofonen</string>
+    <string name="turn_microphone_on">Sätt på mikrofonen</string>
     <string name="turn_microphone_off">Stäng av mikrofonen</string>
-    <string name="turn_speaker_on">Slå på högtalaren</string>
+    <string name="turn_speaker_on">Sätt på högtalaren</string>
     <string name="turn_speaker_off">Stäng av högtalaren</string>
     <string name="show_dialpad">Visa knappsats</string>
     <string name="hide_dialpad">Dölj knappsats</string>
@@ -54,13 +54,12 @@
     <string name="call_add">Lägg till samtal</string>
     <string name="conference_manage">Hantera konferenssamtal</string>
     <string name="conference">Konferens</string>
-    <string name="audio_route_speaker">Högtalare</string>
-    <string name="audio_route_earpiece">Lur</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Kabelanslutet headset</string>
-    <string name="audio_route_wired_or_earpiece">Kabel eller lur</string>
-    <string name="choose_audio_route">Välj ljudväg</string>
-    <string name="calling_blocked_number">Numret du ringer är blockerat</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Snabbuppringning</string>
     <string name="manage_speed_dial">Hantera snabbuppringning</string>
@@ -71,10 +70,9 @@
     <string name="disable_proximity_sensor">Inaktivera närhetssensor under samtal</string>
     <string name="disable_swipe_to_answer">Ersätt svepning vid besvarande av inkommande samtal med tryckning</string>
     <string name="show_incoming_calls_full_screen">Visa alltid inkommande samtal i helskärm</string>
-    <string name="hide_dialpad_numbers">Dölj knappsatsens siffror</string>
     <!-- FAQ -->
-    <string name="faq_1_title">Jag hör inkommande samtal men skärmen vaknar inte. Vad gör jag\?</string>
-    <string name="faq_1_text">Sådana problem kan bero specifikt på apparat eller ditt sytem, det är svårt att svara på generellt. Du bör kolla i dina inställningar och säkerställa att appen har behörighet att synas i förgrunden och tillåts att synas över andra appar.</string>
+    <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
+    <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
     <!--
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
diff --git a/app/src/main/res/values-th/goodwy.xml b/app/src/main/res/values-th/goodwy.xml
index af39677..c137cca 100755
--- a/app/src/main/res/values-th/goodwy.xml
+++ b/app/src/main/res/values-th/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">หน้าจอการโทรแบบโปร่งใส</string>
     <string name="call_back_g">เรียก</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">สายที่ไม่ได้รับ</string>
     <string name="missed_calls_g">สายที่ไม่ได้รับ</string>
     <string name="missed_call_notifications_g">การแจ้งเตือนสายที่ไม่ได้รับ</string>
@@ -19,15 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-th/strings.xml b/app/src/main/res/values-th/strings.xml
index 85331b8..341df37 100644
--- a/app/src/main/res/values-th/strings.xml
+++ b/app/src/main/res/values-th/strings.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">Dialer</string>
     <string name="default_phone_app_prompt">Please make this app the default Phone app</string>
     <string name="allow_displaying_over_other_apps">Please allow displaying over other apps for reliable behaviour</string>
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Speed dial</string>
     <string name="manage_speed_dial">Manage speed dial</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Disable proximity sensor during calls</string>
     <string name="disable_swipe_to_answer">Replace swiping at responding to incoming calls with clicking</string>
     <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
     <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
diff --git a/app/src/main/res/values-tr/goodwy.xml b/app/src/main/res/values-tr/goodwy.xml
index 842000f..2d40c98 100755
--- a/app/src/main/res/values-tr/goodwy.xml
+++ b/app/src/main/res/values-tr/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Şeffaf Arama Ekranı</string>
     <string name="call_back_g">Çağırmak</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Cevapsız çağrı</string>
     <string name="missed_calls_g">Cevapsız aramalar</string>
     <string name="missed_call_notifications_g">Cevapsız arama bildirimleri</string>
@@ -19,16 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-tr/strings.xml b/app/src/main/res/values-tr/strings.xml
index 2527ec5..3c78a0d 100644
--- a/app/src/main/res/values-tr/strings.xml
+++ b/app/src/main/res/values-tr/strings.xml
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Kablolu Kulaklık</string>
     <string name="audio_route_wired_or_earpiece">Kablolu veya Kulaklık</string>
     <string name="choose_audio_route">Ses çıkışını seçin</string>
-    <string name="calling_blocked_number">Aradığınız numara engellendi</string>
     <!-- Speed dial -->
     <string name="speed_dial">Hızlı arama</string>
     <string name="manage_speed_dial">Hızlı aramayı yönet</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">Aramalar sırasında yakınlık sensörünü devre dışı bırak</string>
     <string name="disable_swipe_to_answer">Gelen aramalara yanıt vermek için kaydırmayı tıklamayla değiştir</string>
     <string name="show_incoming_calls_full_screen">Gelen aramaları her zaman tam ekranda görüntüle</string>
-    <string name="hide_dialpad_numbers">Tuş takımı numaralarını gizle</string>
     <!-- FAQ -->
     <string name="faq_1_title">Gelen aramaları duyuyorum ama ekran açılmıyor. Ne yapabilirim\?</string>
     <string name="faq_1_text">Bu tür sorunların aygıta ve sisteme özgü birçok nedeni olabilir, genel olarak söylemek zor. Aygıt ayarlarınıza bakmalı ve uygulamanın arka plandayken açılmasına ve diğer uygulamaların üzerinde görüntülenmesine izin verildiğinden emin olmalısınız.</string>
diff --git a/app/src/main/res/values-uk/goodwy.xml b/app/src/main/res/values-uk/goodwy.xml
index ceded5e..d86d974 100755
--- a/app/src/main/res/values-uk/goodwy.xml
+++ b/app/src/main/res/values-uk/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Прозорий фон екрану дзвінків</string>
     <string name="call_back_g">Передзвонити</string>
-    <string name="call_back_person_g">Передзвоніть %s</string>
     <string name="missed_call_g">Пропущений дзвінок</string>
     <string name="missed_calls_g">Пропущених дзвінків</string>
     <string name="missed_call_notifications_g">Повідомлення про пропущені дзвінки</string>
@@ -23,14 +22,4 @@
     <string name="audio_route_speaker_g">Динамік</string>
     <string name="audio_route_earpiece_g">Телефон</string>
     <string name="audio_route_wired_or_earpiece_g">Динамік пристрою або дротова гарнітура</string>
-
-    <!-- Timer -->
-    <string name="timer">Таймер</string>
-    <string name="timers_notification_msg">Таймери працюють</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d таймер працює</item>
-        <item quantity="few">%d таймера працюють</item>
-        <item quantity="many">%d таймерів працюють</item>
-        <item quantity="other">%d таймерів працюють</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-uk/strings.xml b/app/src/main/res/values-uk/strings.xml
index ff94ae0..5c4e7cb 100644
--- a/app/src/main/res/values-uk/strings.xml
+++ b/app/src/main/res/values-uk/strings.xml
@@ -3,7 +3,7 @@
     <string name="app_name">Простий Телефон</string>
     <string name="app_launcher_name">Телефон</string>
     <string name="default_phone_app_prompt">Будь ласка, зробіть цю програму типовою для телефонних викликів</string>
-    <string name="allow_displaying_over_other_apps">Дозвольте відображення над іншими застосунками для надійної роботи</string>
+    <string name="allow_displaying_over_other_apps">Дозвольте відображення над іншими додатками для надійної роботи</string>
     <!-- Contacts -->
     <string name="could_not_access_contacts">Не вдалося отримати доступ до контактів</string>
     <!-- Recents -->
@@ -20,8 +20,8 @@
     <string name="asterisk">Asterisk</string>
     <string name="hashtag">Хештег</string>
     <string name="call_number">Номер виклику</string>
-    <string name="dialpad_beeps">Увімкнути звукові сигнали при наборі номеру</string>
-    <string name="dialpad_vibrations">Увімкнути вібрації при наборі номеру</string>
+    <string name="dialpad_beeps">Enable beeps on dialpad button clicks</string>
+    <string name="dialpad_vibrations">Enable vibrations on dialpad button clicks</string>
     <!-- Dialer -->
     <string name="dialer">Телефон</string>
     <string name="accept">Прийняти</string>
@@ -54,29 +54,27 @@
     <string name="call_add">Додати дзвінок</string>
     <string name="conference_manage">Керувати конференц-викликом</string>
     <string name="conference">Конференц-виклик</string>
-    <string name="audio_route_speaker">Динамік</string>
-    <string name="audio_route_earpiece">Навушники</string>
+    <string name="audio_route_speaker">Speaker</string>
+    <string name="audio_route_earpiece">Earpiece</string>
     <string name="audio_route_bluetooth">Bluetooth</string>
-    <string name="audio_route_wired_headset">Провідна гарнітура</string>
-    <string name="audio_route_wired_or_earpiece">Провідний або навушник</string>
-    <string name="choose_audio_route">Оберіть аудіовихід</string>
-    <string name="calling_blocked_number">Номер, на який ви телефонуєте, заблоковано</string>
+    <string name="audio_route_wired_headset">Wired Headset</string>
+    <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
+    <string name="choose_audio_route">Choose audio route</string>
     <!-- Speed dial -->
     <string name="speed_dial">Швидкий виклик</string>
     <string name="manage_speed_dial">Управління швидким викликом</string>
     <string name="speed_dial_label">Натисніть на номер, щоб призначити йому контакт. Потім ви зможете швидко зателефонувати вказаному контакту, довго натискаючи вказаний номер на цифровій панелі.</string>
     <!-- Settings -->
     <string name="group_subsequent_calls">Групувати наступні дзвінки з тим самим номером у журналі викликів</string>
-    <string name="open_dialpad_by_default">За замовчуванням відкривати цифрову панель при запуску застосунку</string>
+    <string name="open_dialpad_by_default">За замовчуванням відкривати цифрову панель при запуску додатку</string>
     <string name="disable_proximity_sensor">Вимикати датник наближення під час викликів</string>
     <string name="disable_swipe_to_answer">Замінити перетягування на натискання під час відповіді на вхідні виклики</string>
-    <string name="show_incoming_calls_full_screen">Завжди відображати вхідні дзвінки на весь екран</string>
-    <string name="hide_dialpad_numbers">Приховати номери цифрової клавіатури</string>
+    <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
     <!-- FAQ -->
-    <string name="faq_1_title">Я чую вхідні дзвінки, але екран не вмикається. Що я можу зробити\?</string>
-    <string name="faq_1_text">Такі проблеми можуть мати багато специфічних для пристрою та системи причин, важко сказати в цілому. Вам слід подивитися в налаштуваннях свого пристрою та переконатися, що застосунку дозволено відображати у фоновому режимі та дозволяти відображення над іншими застосунками.</string>
+    <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
+    <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
     <!--
         Haven't found some strings? There's more at
         https://github.com/SimpleMobileTools/Simple-Commons/tree/master/commons/src/main/res
     -->
-</resources>
\ No newline at end of file
+</resources>
diff --git a/app/src/main/res/values-zh-rCN/goodwy.xml b/app/src/main/res/values-zh-rCN/goodwy.xml
index c70b0ca..6fb132b 100755
--- a/app/src/main/res/values-zh-rCN/goodwy.xml
+++ b/app/src/main/res/values-zh-rCN/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">透明通話螢幕</string>
     <string name="call_back_g">叫</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">未接來電</string>
     <string name="missed_calls_g">未接來電</string>
     <string name="missed_call_notifications_g">未接來電通知</string>
@@ -19,15 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml
index a98fc1b..3dead56 100644
--- a/app/src/main/res/values-zh-rCN/strings.xml
+++ b/app/src/main/res/values-zh-rCN/strings.xml
@@ -56,11 +56,10 @@
     <string name="conference">会议</string>
     <string name="audio_route_speaker">扬声器</string>
     <string name="audio_route_earpiece">听筒</string>
-    <string name="audio_route_bluetooth">蓝牙</string>
+    <string name="audio_route_bluetooth">Bluetooth</string>
     <string name="audio_route_wired_headset">有线耳机</string>
     <string name="audio_route_wired_or_earpiece">有线或听筒</string>
     <string name="choose_audio_route">选择音频线路</string>
-    <string name="calling_blocked_number">你呼叫的号码被屏蔽了</string>
     <!-- Speed dial -->
     <string name="speed_dial">快速拨号</string>
     <string name="manage_speed_dial">管理快速拨号</string>
@@ -71,7 +70,6 @@
     <string name="disable_proximity_sensor">在通话期间禁用接近传感器</string>
     <string name="disable_swipe_to_answer">用点击代替滑动来接听来电</string>
     <string name="show_incoming_calls_full_screen">始终全屏显示来电</string>
-    <string name="hide_dialpad_numbers">隐藏拨号盘号码</string>
     <!-- FAQ -->
     <string name="faq_1_title">我听到来电声音，但屏幕不亮。我该怎么办\?</string>
     <string name="faq_1_text">这样的问题可能有很多设备和系统的具体原因，很难笼统地说。你应该查看你的设备设置，确保应用在后台时被允许弹出，并允许其显示在其他应用上方。</string>
diff --git a/app/src/main/res/values-zh-rTW/goodwy.xml b/app/src/main/res/values-zh-rTW/goodwy.xml
index c70b0ca..6fb132b 100755
--- a/app/src/main/res/values-zh-rTW/goodwy.xml
+++ b/app/src/main/res/values-zh-rTW/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">透明通話螢幕</string>
     <string name="call_back_g">叫</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">未接來電</string>
     <string name="missed_calls_g">未接來電</string>
     <string name="missed_call_notifications_g">未接來電通知</string>
@@ -19,15 +18,4 @@
             if you like this application, then we recommend you to install our application to view and edit contacts.<br><br>
             Thanks
         ]]></string>
-
-    <string name="audio_route_speaker_g">Device\'s speakerphone</string>
-    <string name="audio_route_earpiece_g">Device\'s earpiece</string>
-    <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml
index 83e9789..40f44a1 100644
--- a/app/src/main/res/values-zh-rTW/strings.xml
+++ b/app/src/main/res/values-zh-rTW/strings.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
     <string name="app_launcher_name">Dialer</string>
     <string name="default_phone_app_prompt">請將本 app 設為預設的電話 app</string>
     <string name="allow_displaying_over_other_apps">Please allow displaying over other apps for reliable behaviour</string>
@@ -60,7 +60,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
     <!-- Speed dial -->
     <string name="speed_dial">Speed dial</string>
     <string name="manage_speed_dial">Manage speed dial</string>
@@ -71,8 +70,6 @@
     <string name="disable_proximity_sensor">Disable proximity sensor during calls</string>
     <string name="disable_swipe_to_answer">Replace swiping at responding to incoming calls with clicking</string>
     <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
-
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
     <string name="faq_1_text">Such issues can have many device and system specific reasons, hard to say in general. You should look around in your device settings and make sure that the app is allowed to pop up when in background and allow displaying over other apps.</string>
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
index c91f0e5..1eee4c7 100755
--- a/app/src/main/res/values/colors.xml
+++ b/app/src/main/res/values/colors.xml
@@ -2,7 +2,6 @@
 <resources>
     <color name="ripple_foreground">#33FFFFFF</color>
     <color name="color_accent">#FF15B76C</color>
-    <color name="default_accent_color">#FF15B76C</color>
     <color name="green_call">#FF67CE67</color>
     <color name="red_call">#FFEB5545</color>
 </resources>
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
index 0cddc3b..81ae2ea 100755
--- a/app/src/main/res/values/dimens.xml
+++ b/app/src/main/res/values/dimens.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
     <dimen name="dialpad_phone_button_size">68dp</dimen><!--New-->
-    <dimen name="dialpad_button_size">60dp</dimen>
+    <dimen name="dialpad_button_size">60dp</dimen><!--72dp-->
     <dimen name="dialpad_button_size_small">50dp</dimen>
     <dimen name="incoming_call_arrow_size">50dp</dimen>
     <dimen name="incoming_call_button_size">76dp</dimen>
@@ -9,14 +9,10 @@
     <dimen name="call_notification_button_size">35dp</dimen>
     <dimen name="incoming_call_avatar_size">100dp</dimen>
 
+    <dimen name="dialpad_text_size">36sp</dimen><!--30sp-->
     <dimen name="caller_name_text_size">34sp</dimen>
     <dimen name="call_status_text_size">20sp</dimen>
 
-    <!-- keep these 2 values in dp to avoid scaling -->
-    <dimen name="dialpad_text_size">36sp</dimen><!--28sp-->
-    <dimen name="dialpad_letters_text_size">12dp</dimen>
-
-    <!--Goodwy-->
     <dimen name="contact_photo_size">88dp</dimen>
     <dimen name="activity_padding_left_right">0dp</dimen>
     <dimen name="contact_padding_left">16dp</dimen>
@@ -25,13 +21,10 @@
     <!--collapsing toolbar-->
     <dimen name="toolbar_height">102dp</dimen>
     <dimen name="image_top_margin">24dp</dimen>
-    <dimen name="image_right_margin">22dp</dimen>
+    <dimen name="image_right_margin">20dp</dimen>
     <dimen name="name_top_margin">12dp</dimen>
     <dimen name="name_right_margin">38dp</dimen>
     <dimen name="zero">0dp</dimen>
 
     <dimen name="three_dp">3dp</dimen>
-    <dimen name="top_toolbar_search_height">48dp</dimen>
-
-    <dimen name="snackbar_bottom_margin">52dp</dimen>
 </resources>
diff --git a/app/src/main/res/values/donottranslate.xml b/app/src/main/res/values/donottranslate.xml
index 742cb3d..f23a8eb 100755
--- a/app/src/main/res/values/donottranslate.xml
+++ b/app/src/main/res/values/donottranslate.xml
@@ -1,5 +1,5 @@
 <resources>
 
-    <string name="package_name">com.goodwy.dialer</string>
+    <string name="package_name">com.leos.dialer</string>
 
 </resources>
diff --git a/app/src/main/res/values/goodwy.xml b/app/src/main/res/values/goodwy.xml
index 5bff151..36930c3 100755
--- a/app/src/main/res/values/goodwy.xml
+++ b/app/src/main/res/values/goodwy.xml
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name_g">Right Dialer</string>
+    <string name="app_name_g">LeOS-Phone</string>
     <string name="transparent_call_screen_g">Transparent Call Screen</string>
     <string name="call_back_g">Call back</string>
-    <string name="call_back_person_g">Call back %s</string>
     <string name="missed_call_g">Missed call</string>
     <string name="missed_calls_g">Missed calls</string>
     <string name="missed_call_notifications_g">Missed call notifications</string>
@@ -23,12 +22,4 @@
     <string name="audio_route_speaker_g">Device\'s speakerphone</string>
     <string name="audio_route_earpiece_g">Device\'s earpiece</string>
     <string name="audio_route_wired_or_earpiece_g">Device\'s earpiece or wired headset</string>
-
-    <!-- Timer -->
-    <string name="timer">Timer</string>
-    <string name="timers_notification_msg">Timers are running</string>
-    <plurals name="timer_notification_msg">
-        <item quantity="one">%d timer is running</item>
-        <item quantity="other">%d timers are running</item>
-    </plurals>
 </resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 42db484..f95cbaf 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Simple Dialer</string>
-    <string name="app_launcher_name">Dialer</string>
+    <string name="app_name">LeOS-Phone</string>
+    <string name="app_launcher_name">LeOS-Phone</string>
     <string name="default_phone_app_prompt">Please make this app the default Phone app</string>
     <string name="allow_displaying_over_other_apps">Please allow displaying over other apps for reliable behaviour</string>
 
@@ -64,7 +64,6 @@
     <string name="audio_route_wired_headset">Wired Headset</string>
     <string name="audio_route_wired_or_earpiece">Wired or Earpiece</string>
     <string name="choose_audio_route">Choose audio route</string>
-    <string name="calling_blocked_number">The number you are calling is blocked</string>
 
     <!-- Speed dial -->
     <string name="speed_dial">Speed dial</string>
@@ -77,7 +76,6 @@
     <string name="disable_proximity_sensor">Disable proximity sensor during calls</string>
     <string name="disable_swipe_to_answer">Replace swiping at responding to incoming calls with clicking</string>
     <string name="show_incoming_calls_full_screen">Always display incoming calls on full screen</string>
-    <string name="hide_dialpad_numbers">Hide dialpad numbers</string>
 
     <!-- FAQ -->
     <string name="faq_1_title">I hear incoming calls, but the screen doesn\'t turn on. What can I do?</string>
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
index d06e23a..8ff62af 100755
--- a/app/src/main/res/values/styles.xml
+++ b/app/src/main/res/values/styles.xml
@@ -2,13 +2,6 @@
 
     <style name="AppTheme" parent="AppTheme.Base" />
 
-    <style name="DialpadButtonStyle">
-        <item name="android:background">@drawable/pill_background</item>
-        <item name="android:layout_marginStart">@dimen/small_margin</item>
-        <item name="android:layout_marginEnd">@dimen/small_margin</item>
-        <item name="android:paddingTop">@dimen/one_dp</item>
-    </style>
-
     <style name="DialpadNumberStyle">
         <item name="android:includeFontPadding">false</item>
         <item name="android:textSize">@dimen/dialpad_text_size</item>
@@ -19,9 +12,4 @@
         <item name="android:alpha">0.8</item>
     </style>
 
-    <style name="roundedImageView">
-        <item name="cornerFamily">rounded</item>
-        <item name="cornerSize">50%</item>
-    </style>
-
 </resources>
