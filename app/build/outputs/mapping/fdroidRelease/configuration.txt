# The proguard configuration file for the following section is /media/ich/1TB_SSD/AndroidApks/LeOS-Phone/app/build/intermediates/default_proguard_files/global/proguard-android.txt-7.3.1
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimization is turned off by default. Dex does not like code run
# through the ProGuard optimize steps (and performs some
# of these optimizations on its own).
# Note that if you want to enable optimization, you cannot just
# include optimization flags in your own project configuration file;
# instead you will need to point to the
# "proguard-android-optimize.txt" file instead of this one from your
# project.properties file.
-dontoptimize

-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# This class is deprecated, but remains for backward compatibility.
-dontwarn android.util.FloatMath

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep
-keep class androidx.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from /media/ich/1TB_SSD/AndroidApks/LeOS-Phone/app/build/intermediates/default_proguard_files/global/proguard-android.txt-7.3.1
# The proguard configuration file for the following section is /media/ich/1TB_SSD/AndroidApks/LeOS-Phone/app/proguard-rules.pro

# End of content from /media/ich/1TB_SSD/AndroidApks/LeOS-Phone/app/proguard-rules.pro
# The proguard configuration file for the following section is /media/ich/1TB_SSD/AndroidApks/LeOS-Phone/app/build/intermediates/aapt_proguard_file/fdroidRelease/aapt_rules.txt
-keep class androidx.core.app.CoreComponentFactory { <init>(); }
-keep class androidx.startup.InitializationProvider { <init>(); }
-keep class com.android.billingclient.api.ProxyBillingActivity { <init>(); }
-keep class com.goodwy.commons.activities.AboutActivity { <init>(); }
-keep class com.goodwy.commons.activities.ContributorsActivity { <init>(); }
-keep class com.goodwy.commons.activities.CustomizationActivity { <init>(); }
-keep class com.goodwy.commons.activities.FAQActivity { <init>(); }
-keep class com.goodwy.commons.activities.LicenseActivity { <init>(); }
-keep class com.goodwy.commons.activities.ManageBlockedNumbersActivity { <init>(); }
-keep class com.goodwy.commons.receivers.SharedThemeReceiver { <init>(); }
-keep class com.goodwy.dialer.App { <init>(); }
-keep class com.goodwy.dialer.activities.CallActivity { <init>(); }
-keep class com.goodwy.dialer.activities.CallHistoryActivity { <init>(); }
-keep class com.goodwy.dialer.activities.ConferenceActivity { <init>(); }
-keep class com.goodwy.dialer.activities.DialerActivity { <init>(); }
-keep class com.goodwy.dialer.activities.DialpadActivity { <init>(); }
-keep class com.goodwy.dialer.activities.MainActivity { <init>(); }
-keep class com.goodwy.dialer.activities.ManageSpeedDialActivity { <init>(); }
-keep class com.goodwy.dialer.activities.SettingsActivity { <init>(); }
-keep class com.goodwy.dialer.activities.SplashActivity { <init>(); }
-keep class com.goodwy.dialer.receivers.CallActionReceiver { <init>(); }
-keep class com.goodwy.dialer.services.CallService { <init>(); }
-keep class com.goodwy.dialer.services.SimpleCallScreeningService { <init>(); }
-keep class android.widget.Space { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.app.AlertController$RecycleListView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ActionMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ExpandedMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ListMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContainer { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarOverlayLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActivityChooserView$InnerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AlertDialogLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ButtonBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ContentFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.DialogTitle { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsLinearLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.SearchView { <init>(android.content.Context); }

-keep class androidx.appcompat.widget.SearchView$SearchAutoComplete { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.Toolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ViewStubCompat { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.cardview.widget.CardView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.helper.widget.Flow { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.Barrier { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.ConstraintLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.Group { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.Guideline { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.core.widget.NestedScrollView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.fragment.app.FragmentContainerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.recyclerview.widget.RecyclerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.andrognito.patternlockview.PatternLockView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.BiometricIdTab { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.Breadcrumbs { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.ColorPickerSquare { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.FingerprintTab { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.LineColorPicker { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.LineColorPickerGrid { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MyAppCompatCheckbox { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MyButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MyCompatRadioButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MyDialogViewPager { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MyEditText { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MyFloatingActionButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MyRecyclerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MyScrollView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MySwitchCompat { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MyTextInputLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MyTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.MyViewPager { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.PatternTab { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.PinTab { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.RenamePatternTab { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.commons.views.RenameSimpleTab { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.dialer.fragments.ContactsFragment { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.dialer.fragments.FavoritesFragment { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.goodwy.dialer.fragments.RecentsFragment { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.appbar.AppBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.appbar.CollapsingToolbarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.appbar.MaterialToolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButtonToggleGroup { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.chip.Chip { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.datepicker.MaterialCalendarGridView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.BaselineLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.CheckableImageButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.Snackbar$SnackbarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.SnackbarContentLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.tabs.TabItem { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.tabs.TabLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputEditText { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ChipTextInputComboView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockFaceView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockHandView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.TimePickerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.reddit.indicatorfastscroll.FastScrollerThumbView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.reddit.indicatorfastscroll.FastScrollerView { <init>(android.content.Context, android.util.AttributeSet); }


# End of content from /media/ich/1TB_SSD/AndroidApks/LeOS-Phone/app/build/intermediates/aapt_proguard_file/fdroidRelease/aapt_rules.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/23af5e0faeaad10dec321b54628be85c/transformed/material-1.8.0-alpha01/proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from /home/ich/.gradle/caches/transforms-3/23af5e0faeaad10dec321b54628be85c/transformed/material-1.8.0-alpha01/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/755c893b14d6f60e61b0793e0966adf1/transformed/jetified-glide-4.13.2/proguard.txt
-keep public class * implements com.bumptech.glide.module.GlideModule
-keep class * extends com.bumptech.glide.module.AppGlideModule {
 <init>(...);
}
-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {
  **[] $VALUES;
  public *;
}
-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {
  *** rewind();
}

# Uncomment for DexGuard only
#-keepresourcexmlelements manifest/application/meta-data@value=GlideModule

# End of content from /home/ich/.gradle/caches/transforms-3/755c893b14d6f60e61b0793e0966adf1/transformed/jetified-glide-4.13.2/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/0215c1b8ecdd89c51f138123cc277987/transformed/jetified-ShortcutBadger-1.1.22/proguard.txt
#https://github.com/leolin310148/ShortcutBadger/issues/46
-keep class me.leolin.shortcutbadger.impl.AdwHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.ApexHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.AsusHomeLauncher { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.DefaultBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.NewHtcHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.NovaHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.SolidHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.SonyHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.XiaomiHomeBadger { <init>(...); }
# End of content from /home/ich/.gradle/caches/transforms-3/0215c1b8ecdd89c51f138123cc277987/transformed/jetified-ShortcutBadger-1.1.22/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/c02d01d0e443ad017ce04d2690d1be9e/transformed/jetified-library-2.0.3/proguard.txt
-keep class com.android.vending.billing.**
-keep class com.android.billingclient.api.**
# End of content from /home/ich/.gradle/caches/transforms-3/c02d01d0e443ad017ce04d2690d1be9e/transformed/jetified-library-2.0.3/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/bd8e4e5bd88f619ace3d9b3c6f6a9da4/transformed/appcompat-1.5.0/proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# aapt is not able to read app::actionViewClass and app:actionProviderClass to produce proguard
# keep rules. Add a commonly used SearchView to the keep list until b/109831488 is resolved.
-keep class androidx.appcompat.widget.SearchView { <init>(...); }

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from /home/ich/.gradle/caches/transforms-3/bd8e4e5bd88f619ace3d9b3c6f6a9da4/transformed/appcompat-1.5.0/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/30bb3cd5596b9fdfbd7bb0179d22c1b3/transformed/fragment-1.3.6/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# End of content from /home/ich/.gradle/caches/transforms-3/30bb3cd5596b9fdfbd7bb0179d22c1b3/transformed/fragment-1.3.6/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/ded6c6225d66b9a306d8be12988969f3/transformed/lifecycle-viewmodel-2.5.0/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from /home/ich/.gradle/caches/transforms-3/ded6c6225d66b9a306d8be12988969f3/transformed/lifecycle-viewmodel-2.5.0/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/583fc365f8bac4e83f56984f7c7a6aba/transformed/jetified-lifecycle-viewmodel-savedstate-2.5.0/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from /home/ich/.gradle/caches/transforms-3/583fc365f8bac4e83f56984f7c7a6aba/transformed/jetified-lifecycle-viewmodel-savedstate-2.5.0/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/fd8228342ec2344710083c7fb4e6fe08/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from /home/ich/.gradle/caches/transforms-3/fd8228342ec2344710083c7fb4e6fe08/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/cc751bf4aba837e4019ce68bda2e292d/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

-keep class kotlinx.coroutines.android.AndroidDispatcherFactory {*;}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}
# End of content from /home/ich/.gradle/caches/transforms-3/cc751bf4aba837e4019ce68bda2e292d/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/c1facf132e880c6a9ef8842230249d96/transformed/recyclerview-1.2.1/proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from /home/ich/.gradle/caches/transforms-3/c1facf132e880c6a9ef8842230249d96/transformed/recyclerview-1.2.1/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/f85e85e8254ea0f5134305a246dd04b7/transformed/coordinatorlayout-1.1.0/proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes *Annotation*

# End of content from /home/ich/.gradle/caches/transforms-3/f85e85e8254ea0f5134305a246dd04b7/transformed/coordinatorlayout-1.1.0/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/02e0309be654e616303768958861781d/transformed/transition-1.2.0/proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from /home/ich/.gradle/caches/transforms-3/02e0309be654e616303768958861781d/transformed/transition-1.2.0/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/f3aeab1263c506e481f4c204e6a01749/transformed/vectordrawable-animated-1.1.0/proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from /home/ich/.gradle/caches/transforms-3/f3aeab1263c506e481f4c204e6a01749/transformed/vectordrawable-animated-1.1.0/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/d9e86ab3e2a5d52de01320a3c560b82c/transformed/jetified-lifecycle-process-2.4.1/proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from /home/ich/.gradle/caches/transforms-3/d9e86ab3e2a5d52de01320a3c560b82c/transformed/jetified-lifecycle-process-2.4.1/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/2fb9dc7d8e5b5c57ebf6d8ad00de222f/transformed/jetified-startup-runtime-1.1.1/proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from /home/ich/.gradle/caches/transforms-3/2fb9dc7d8e5b5c57ebf6d8ad00de222f/transformed/jetified-startup-runtime-1.1.1/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/29d7296c0b3e266d00ef2210afff84f7/transformed/core-1.8.0/proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from /home/ich/.gradle/caches/transforms-3/29d7296c0b3e266d00ef2210afff84f7/transformed/core-1.8.0/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/870384f1782288cdf1733d4be20831f4/transformed/versionedparcelable-1.1.1/proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from /home/ich/.gradle/caches/transforms-3/870384f1782288cdf1733d4be20831f4/transformed/versionedparcelable-1.1.1/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/3a57e0e10ec5adb2bad5133d6476eb7c/transformed/lifecycle-runtime-2.5.0/proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep !interface * implements androidx.lifecycle.LifecycleObserver {
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from /home/ich/.gradle/caches/transforms-3/3a57e0e10ec5adb2bad5133d6476eb7c/transformed/lifecycle-runtime-2.5.0/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/24d52fd9fdd71467bcc434d233d7ee88/transformed/jetified-savedstate-1.2.0/proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from /home/ich/.gradle/caches/transforms-3/24d52fd9fdd71467bcc434d233d7ee88/transformed/jetified-savedstate-1.2.0/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/c8775e0b254377379584cc25f25ab2e5/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from /home/ich/.gradle/caches/transforms-3/c8775e0b254377379584cc25f25ab2e5/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/c03f6d22ae7191c0282243215306780b/transformed/jetified-annotation-experimental-1.1.0/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Ignore missing Kotlin meta-annotations so that this library can be used
# without adding a compileOnly dependency on the Kotlin standard library.
-dontwarn kotlin.Deprecated
-dontwarn kotlin.Metadata
-dontwarn kotlin.ReplaceWith
-dontwarn kotlin.annotation.AnnotationRetention
-dontwarn kotlin.annotation.AnnotationTarget
-dontwarn kotlin.annotation.Retention
-dontwarn kotlin.annotation.Target

# End of content from /home/ich/.gradle/caches/transforms-3/c03f6d22ae7191c0282243215306780b/transformed/jetified-annotation-experimental-1.1.0/proguard.txt
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/d1d2f60a44c18fa91d12b47cf48a5781/transformed/rules/lib/META-INF/proguard/rxjava3.pro
-dontwarn java.util.concurrent.Flow*
# End of content from /home/ich/.gradle/caches/transforms-3/d1d2f60a44c18fa91d12b47cf48a5781/transformed/rules/lib/META-INF/proguard/rxjava3.pro
# The proguard configuration file for the following section is /home/ich/.gradle/caches/transforms-3/b6b9402856e169d29d3f08233685e3b0/transformed/jetified-billing-4.0.0/proguard.txt
# Keep the AIDL interface
-keep class com.android.vending.billing.** { *; }

-dontwarn javax.annotation.**
-dontwarn org.checkerframework.**
# End of content from /home/ich/.gradle/caches/transforms-3/b6b9402856e169d29d3f08233685e3b0/transformed/jetified-billing-4.0.0/proguard.txt
# The proguard configuration file for the following section is <unknown>
-ignorewarnings
# End of content from <unknown>